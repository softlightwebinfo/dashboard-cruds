'use strict';



function ___$insertStyle(css) {
  if (!css) {
    return;
  }
  if (typeof window === 'undefined') {
    return;
  }

  var style = document.createElement('style');

  style.setAttribute('type', 'text/css');
  style.innerHTML = css;
  document.head.appendChild(style);
  return css;
}

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var reactDom = require('react-dom');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var reactDom__default = /*#__PURE__*/_interopDefaultLegacy(reactDom);

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\nbody {\n  font-family: \"CircularStd\", sans-serif;\n  margin: 0;\n  background-color: #f7f7f7;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n.h-bg--default {\n  background-color: #e0e0e0;\n}\n.h-color--default {\n  color: #e0e0e0;\n}\n.h-bg--success {\n  background-color: #26a69a;\n}\n.h-color--success {\n  color: #26a69a;\n}\n.h-bg--primary {\n  background-color: #90caf9;\n}\n.h-color--primary {\n  color: #90caf9;\n}\n.h-bg--secondary {\n  background-color: #f48fb1;\n}\n.h-color--secondary {\n  color: #f48fb1;\n}\n.h-bg--info {\n  background-color: #328cd6;\n}\n.h-color--info {\n  color: #328cd6;\n}\n.h-bg--white {\n  background-color: white;\n}\n.h-color--white {\n  color: white;\n}\n.h-bg--orange {\n  background-color: #ff9b44;\n}\n.h-color--orange {\n  color: #ff9b44;\n}\n.h-bg--danger {\n  background-color: #f62d51;\n}\n.h-color--danger {\n  color: #f62d51;\n}\n.h-bg--disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.h-color--disabled {\n  color: rgba(255, 255, 255, 0.12);\n}\n.h-bg--gray {\n  background-color: gray;\n}\n.h-color--gray {\n  color: gray;\n}\n.h-bg--mixPurple {\n  background-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.h-color--mixPurple {\n  color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.h-icon-grid path {\n  fill: black;\n}\n.h-icon-phone path {\n  fill: black;\n}\n.h-icon-calendar path {\n  fill: black;\n}\n.h-icon-attachment path {\n  fill: black;\n}");

___$insertStyle(".test-component {\n  background-color: white;\n  border: 1px solid black;\n  padding: 16px;\n  width: 360px;\n  text-align: center;\n}\n.test-component .heading {\n  font-size: 64px;\n}\n.test-component.test-component-secondary {\n  background-color: black;\n  color: white;\n}");

var TestComponent = function (_a) {
    var theme = _a.theme;
    return (React.createElement("div", { "data-testid": "test-component", className: "test-component test-component-" + theme },
        React.createElement("h1", { className: "heading" }, "I'm the test component"),
        React.createElement("h2", null, "Made with love by Harvey")));
};

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.button-component {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  border-radius: 2px;\n  height: 36px;\n  line-height: 36px;\n  padding: 0 16px;\n  text-transform: uppercase;\n  font-size: 14px;\n  outline: 0;\n  text-decoration: none;\n  color: #000000;\n  background-color: #e0e0e0;\n  text-align: center;\n  letter-spacing: 0.5px;\n  transition: 0.3s ease-out;\n  border: 0;\n  display: flex;\n}\n.button-component__children {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.button-component__children .Icon-component {\n  margin-right: 5px;\n  height: 20px;\n}\n.button-component.button-component--outlined, .button-component.button-component--color {\n  box-shadow: none;\n  background-color: transparent;\n}\n.button-component:hover {\n  background-color: #d5d5d5;\n  cursor: pointer;\n}\n.button-component--default {\n  background: #e0e0e0;\n  color: #fff;\n}\n.button-component--default.button-component--outlined, .button-component--default.button-component--color {\n  background-color: transparent;\n  color: #e0e0e0;\n  border: 1px solid #e0e0e0;\n}\n.button-component--default.button-component--color {\n  border: 0;\n}\n.button-component--default:hover {\n  background-color: #d5d5d5;\n}\n.button-component--success {\n  background: #26a69a;\n  color: #fff;\n}\n.button-component--success.button-component--outlined, .button-component--success.button-component--color {\n  background-color: transparent;\n  color: #26a69a;\n  border: 1px solid #26a69a;\n}\n.button-component--success.button-component--color {\n  border: 0;\n}\n.button-component--success:hover {\n  background-color: #2bbbad;\n}\n.button-component--primary {\n  background: #90caf9;\n  color: #fff;\n}\n.button-component--primary.button-component--outlined, .button-component--primary.button-component--color {\n  background-color: transparent;\n  color: #90caf9;\n  border: 1px solid #90caf9;\n}\n.button-component--primary.button-component--color {\n  border: 0;\n}\n.button-component--primary:hover {\n  background-color: #648dae;\n}\n.button-component--secondary {\n  background: #f48fb1;\n  color: #fff;\n}\n.button-component--secondary.button-component--outlined, .button-component--secondary.button-component--color {\n  background-color: transparent;\n  color: #f48fb1;\n  border: 1px solid #f48fb1;\n}\n.button-component--secondary.button-component--color {\n  border: 0;\n}\n.button-component--secondary:hover {\n  background-color: #aa647b;\n}\n.button-component--info {\n  background: #328cd6;\n  color: #fff;\n}\n.button-component--info.button-component--outlined, .button-component--info.button-component--color {\n  background-color: transparent;\n  color: #328cd6;\n  border: 1px solid #328cd6;\n}\n.button-component--info.button-component--color {\n  border: 0;\n}\n.button-component--info:hover {\n  background-color: #648dae;\n}\n.button-component--white {\n  background: white;\n  color: #fff;\n}\n.button-component--white.button-component--outlined, .button-component--white.button-component--color {\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n}\n.button-component--white.button-component--color {\n  border: 0;\n}\n.button-component--white:hover {\n  background-color: white;\n}\n.button-component--orange {\n  background: #ff9b44;\n  color: #fff;\n}\n.button-component--orange.button-component--outlined, .button-component--orange.button-component--color {\n  background-color: transparent;\n  color: #ff9b44;\n  border: 1px solid #ff9b44;\n}\n.button-component--orange.button-component--color {\n  border: 0;\n}\n.button-component--orange:hover {\n  background-color: #ff851a;\n}\n.button-component--danger {\n  background: #f62d51;\n  color: #fff;\n}\n.button-component--danger.button-component--outlined, .button-component--danger.button-component--color {\n  background-color: transparent;\n  color: #f62d51;\n  border: 1px solid #f62d51;\n}\n.button-component--danger.button-component--color {\n  border: 0;\n}\n.button-component--danger:hover {\n  background-color: #f62d51;\n}\n.button-component--disabled {\n  background: rgba(255, 255, 255, 0.12);\n  color: #fff;\n}\n.button-component--disabled.button-component--outlined, .button-component--disabled.button-component--color {\n  background-color: transparent;\n  color: rgba(255, 255, 255, 0.12);\n  border: 1px solid rgba(255, 255, 255, 0.12);\n}\n.button-component--disabled.button-component--color {\n  border: 0;\n}\n.button-component--disabled:hover {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.button-component--gray {\n  background: gray;\n  color: #fff;\n}\n.button-component--gray.button-component--outlined, .button-component--gray.button-component--color {\n  background-color: transparent;\n  color: gray;\n  border: 1px solid gray;\n}\n.button-component--gray.button-component--color {\n  border: 0;\n}\n.button-component--gray:hover {\n  background-color: gray;\n}\n.button-component--mixPurple {\n  background: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n  color: #fff;\n}\n.button-component--mixPurple.button-component--outlined, .button-component--mixPurple.button-component--color {\n  background-color: transparent;\n  color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n  border: 1px solid linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.button-component--mixPurple.button-component--color {\n  border: 0;\n}\n.button-component--mixPurple:hover {\n  background-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.button-component--success {\n  background-color: #26a69a;\n  color: #fff;\n}\n.button-component--success.button-component--outlined, .button-component--success.button-component--color {\n  background-color: transparent;\n  color: #26a69a;\n  border: 1px solid #26a69a;\n}\n.button-component--success.button-component--color {\n  border: 0px;\n}\n.button-component--primary {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #90caf9;\n}\n.button-component--primary.button-component--outlined, .button-component--primary.button-component--color {\n  background-color: transparent;\n  color: #90caf9;\n  border: 1px solid #90caf9;\n}\n.button-component--primary.button-component--color {\n  border: 0px;\n}\n.button-component--primary:hover {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #648dae;\n}\n.button-component--secondary {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #f48fb1;\n}\n.button-component--secondary.button-component--outlined, .button-component--secondary.button-component--color {\n  background-color: transparent;\n  color: #f48fb1;\n  border: 1px solid #f48fb1;\n}\n.button-component--secondary.button-component--color {\n  border: 0px;\n}\n.button-component--secondary:hover {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #aa647b;\n}\n.button-component--white {\n  color: white;\n}\n.button-component--inherit {\n  color: inherit;\n  border-color: currentColor;\n  background-color: inherit;\n}\n.button-component--info {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #328cd6;\n}\n.button-component--info.button-component--outlined, .button-component--info.button-component--color {\n  background-color: transparent;\n  color: #328cd6;\n  border: 1px solid #328cd6;\n}\n.button-component--info.button-component--color {\n  border: 0px;\n}\n.button-component--info:hover {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #648dae;\n}\n.button-component.button-component--color {\n  background-color: transparent;\n}\n.button-component--disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n  color: rgba(255, 255, 255, 0.3);\n  box-shadow: none;\n  cursor: default;\n  pointer-events: none;\n}\n.button-component--grouped {\n  min-width: 40px;\n  box-shadow: none;\n}\n.button-component--grouped.button-component:not(:last-child) {\n  border-right-color: transparent;\n  box-shadow: none;\n}\n.button-component--grouped.button-component:not(:last-child) {\n  box-shadow: none;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.button-component--grouped.button-component:not(:first-child) {\n  margin-left: -1px;\n}\n.button-component--block {\n  width: 100%;\n}\n.button-component--big {\n  justify-content: center;\n  border: 0;\n  border-radius: 4px;\n  display: block;\n  font-size: 22px;\n  padding: 10px 26px;\n  width: 100%;\n  height: initial;\n}\n.button-component--big:hover {\n  opacity: 0.8;\n}");

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

var ITBem;
(function (ITBem) {
    ITBem["DEFAULT"] = "-";
    ITBem["MODIFIER"] = "--";
    ITBem["BLOCK"] = "";
    ITBem["CHILD"] = "_";
})(ITBem || (ITBem = {}));
var BEM = /** @class */ (function () {
    function BEM(parent, classNames) {
        this._listClassNames = [];
        this._parent = parent;
        this._classNames = classNames;
        this._listClassNames.push(parent);
    }
    BEM.prototype.toString = function () {
        var _this = this;
        return Object.entries(this._classNames).reduce(function (previousValue, currentValue) {
            if (currentValue[1]) {
                if (typeof currentValue[1] == "string") {
                    previousValue.push(_this._parent + ITBem.MODIFIER + currentValue[0] + ITBem.DEFAULT + currentValue[1]);
                }
                else if (typeof currentValue[1] == "boolean") {
                    previousValue.push(_this._parent + ITBem.MODIFIER + currentValue[0]);
                }
            }
            return previousValue;
        }, __spreadArrays(this._listClassNames)).join(" ");
    };
    BEM.prototype.Append = function (className) {
        if (!className)
            return this;
        this._listClassNames.push(className);
        return this;
    };
    BEM.prototype.Children = function (name, extra) {
        if (extra === void 0) { extra = ""; }
        return this._parent + "__" + name + (extra ? " " + extra : '');
    };
    BEM.prototype.Modifier = function (children, modifier, active, extra) {
        if (extra === void 0) { extra = ""; }
        var data = [this._parent + "__" + children];
        if (active) {
            data.push(this._parent + "__" + children + "--" + modifier);
        }
        if (extra) {
            data.push(extra);
        }
        return data.join(" ");
    };
    return BEM;
}());

var GetFile = function (e, callback) {
    var input = e.target;
    var reader = new FileReader();
    reader.onload = function (e) {
        var dataURL = reader.result;
        callback(input.files[0], dataURL);
    };
    reader.readAsDataURL(input.files[0]);
};

function ButtonComponent(props) {
    var _a;
    var bm = new BEM("button-component", (_a = {},
        _a[props.theme] = !!props.theme,
        _a.disabled = props.isDisabled,
        _a[props.variant || "contained"] = true,
        _a.grouped = props.grouped,
        _a.block = props.block,
        _a.rounded = props.rounded,
        _a.big = props.big,
        _a));
    bm.Append(props.className);
    var Component = props.component || "button";
    return (
    // @ts-ignore
    React.createElement(Component, { onClick: props.onClick, style: props.style, className: bm.toString(), type: props.type || "button" },
        React.createElement("span", { className: bm.Children("children") }, props.children)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Button-base-component {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n}\n.Button-base-component:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n.Button-base-component--disabled {\n  box-shadow: none;\n  cursor: default;\n  pointer-events: none;\n}");

function ButtonBaseComponent(props) {
    var classNames = ["Button-base-component"];
    if (props.isDisabled)
        classNames.push("Button-base-component--disabled");
    if (props.className)
        classNames.push(props.className);
    return (React.createElement("button", { style: props.style, className: classNames.join(" ") }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.fab-component {\n  color: rgba(0, 0, 0, 0.87);\n  width: 56px;\n  height: 56px;\n  padding: 0;\n  font-size: 0.875rem;\n  min-width: 0;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  box-sizing: border-box;\n  min-height: 36px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 500;\n  line-height: 1.75;\n  border-radius: 50%;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  background-color: #e0e0e0;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n}\n.fab-component:hover {\n  text-decoration: none;\n  background-color: #d5d5d5;\n  cursor: pointer;\n}\n.fab-component__label {\n  width: 100%;\n  display: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n}\n.fab-component__child {\n  margin-left: 5px;\n}\n.fab-component--extended {\n  width: auto;\n  height: 48px;\n  padding: 0 16px;\n  min-width: 48px;\n  min-height: auto;\n  border-radius: 24px;\n}\n.fab-component.fab-component--outlined, .fab-component.fab-component--color {\n  box-shadow: none;\n  background-color: transparent;\n}\n.fab-component:hover {\n  background-color: #d5d5d5;\n  cursor: pointer;\n}\n.fab-component--success {\n  background-color: #26a69a;\n  color: #fff;\n}\n.fab-component--success.fab-component--outlined, .fab-component--success.fab-component--color {\n  background-color: transparent;\n  color: #26a69a;\n  border: 1px solid #26a69a;\n}\n.fab-component--success.fab-component--color {\n  border: 0px;\n}\n.fab-component--primary {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #90caf9;\n}\n.fab-component--primary.fab-component--outlined, .fab-component--primary.fab-component--color {\n  background-color: transparent;\n  color: #90caf9;\n  border: 1px solid #90caf9;\n}\n.fab-component--primary.fab-component--color {\n  border: 0px;\n}\n.fab-component--primary:hover {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #648dae;\n}\n.fab-component--secondary {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #f48fb1;\n}\n.fab-component--secondary.fab-component--outlined, .fab-component--secondary.fab-component--color {\n  background-color: transparent;\n  color: #f48fb1;\n  border: 1px solid #f48fb1;\n}\n.fab-component--secondary.fab-component--color {\n  border: 0px;\n}\n.fab-component--secondary:hover {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #aa647b;\n}\n.fab-component--info {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #328cd6;\n}\n.fab-component--info.fab-component--outlined, .fab-component--info.fab-component--color {\n  background-color: transparent;\n  color: #328cd6;\n  border: 1px solid #328cd6;\n}\n.fab-component--info.fab-component--color {\n  border: 0px;\n}\n.fab-component--info:hover {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #648dae;\n}\n.fab-component.fab-component--color {\n  background-color: transparent;\n}\n.fab-component--disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n  color: rgba(255, 255, 255, 0.3);\n  box-shadow: none;\n  cursor: default;\n  pointer-events: none;\n}");

function FabComponent(props) {
    var classNames = ["fab-component"];
    if (props.icon && props.children)
        classNames.push("fab-component--extended");
    if (props.theme)
        classNames.push("fab-component--" + props.theme);
    return (React.createElement("button", { className: classNames.join(" ") },
        React.createElement("span", { className: "fab-component__label" },
            props.icon && React.createElement(IconComponent, { icon: props.icon }),
            props.icon && props.children ? (React.createElement("span", { className: "fab-component__child" }, props.children)) : (props.children))));
}

___$insertStyle(".Icon-component {\n  fill: currentColor;\n  width: 1em;\n  height: 1em;\n  display: inline-block;\n  font-size: 1.5rem;\n  transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  flex-shrink: 0;\n  user-select: none;\n}");

var alarm = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width || 20, height: props.height || 20, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M16.8 15.101c-1.144-0.859-1.8-2.172-1.8-3.601v-3c0-2.513-1.694-4.638-4-5.292l-0-0.708c0-0.827-0.673-1.5-1.5-1.5s-1.5 0.673-1.5 1.5v0.708c-2.306 0.655-4 2.779-4 5.292v3c0 1.429-0.656 2.741-1.8 3.601-0.172 0.129-0.242 0.354-0.174 0.558s0.259 0.342 0.474 0.342h4.55c-0.033 0.164-0.051 0.331-0.051 0.5 0 1.378 1.122 2.5 2.5 2.5s2.5-1.122 2.5-2.5c0-0.168-0.017-0.336-0.050-0.5h4.55c0.215 0 0.406-0.138 0.474-0.342s-0.002-0.429-0.174-0.558zM9 2.5c0-0.276 0.224-0.5 0.5-0.5s0.5 0.224 0.5 0.5v0.523c-0.165-0.015-0.331-0.023-0.5-0.023s-0.335 0.008-0.5 0.023v-0.523zM11 16.5c0 0.827-0.673 1.5-1.5 1.5s-1.5-0.673-1.5-1.5c0-0.171 0.030-0.34 0.086-0.5h2.828c0.056 0.16 0.086 0.329 0.086 0.5zM3.742 15c0.255-0.309 0.477-0.646 0.659-1.001 0.398-0.778 0.599-1.619 0.599-2.499v-3c0-2.481 2.019-4.5 4.5-4.5s4.5 2.019 4.5 4.5v3c0 0.88 0.202 1.721 0.599 2.499 0.182 0.356 0.404 0.692 0.659 1.001h-11.517z" }))); });

var menu = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M17.5 6h-15c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h15c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M17.5 11h-15c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h15c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M17.5 16h-15c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h15c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }))); });

var more_vert = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "black", width: props.width, height: props.height },
    React__default['default'].createElement("path", { d: "M0 0h24v24H0z", fill: "none" }),
    React__default['default'].createElement("path", { d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" }))); });

var favorite = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { fill: "#000000", d: "M9.5 19c-0.084 0-0.167-0.021-0.243-0.063-0.094-0.052-2.326-1.301-4.592-3.347-1.341-1.21-2.411-2.448-3.183-3.68-0.984-1.571-1.482-3.139-1.482-4.66 0-2.895 2.355-5.25 5.25-5.25 0.98 0 2.021 0.367 2.931 1.034 0.532 0.39 0.985 0.86 1.319 1.359 0.334-0.499 0.787-0.969 1.319-1.359 0.91-0.667 1.951-1.034 2.931-1.034 2.895 0 5.25 2.355 5.25 5.25 0 1.521-0.499 3.089-1.482 4.66-0.771 1.232-1.842 2.47-3.182 3.68-2.266 2.046-4.498 3.295-4.592 3.347-0.076 0.042-0.159 0.063-0.243 0.063zM5.25 3c-2.343 0-4.25 1.907-4.25 4.25 0 3.040 2.35 5.802 4.321 7.585 1.76 1.592 3.544 2.708 4.179 3.087 0.635-0.379 2.419-1.495 4.179-3.087 1.971-1.782 4.321-4.545 4.321-7.585 0-2.343-1.907-4.25-4.25-4.25-1.703 0-3.357 1.401-3.776 2.658-0.068 0.204-0.259 0.342-0.474 0.342s-0.406-0.138-0.474-0.342c-0.419-1.257-2.073-2.658-3.776-2.658z" }))); });

var share = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, fill: "#000000", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: props.width, height: props.height },
    React__default['default'].createElement("path", { d: "M 18 2 C 16.35499 2 15 3.3549904 15 5 C 15 5.1909529 15.021791 5.3771224 15.056641 5.5585938 L 7.921875 9.7207031 C 7.3985399 9.2778539 6.7320771 9 6 9 C 4.3549904 9 3 10.35499 3 12 C 3 13.64501 4.3549904 15 6 15 C 6.7320771 15 7.3985399 14.722146 7.921875 14.279297 L 15.056641 18.439453 C 15.021555 18.621514 15 18.808386 15 19 C 15 20.64501 16.35499 22 18 22 C 19.64501 22 21 20.64501 21 19 C 21 17.35499 19.64501 16 18 16 C 17.26748 16 16.601593 16.279328 16.078125 16.722656 L 8.9433594 12.558594 C 8.9782095 12.377122 9 12.190953 9 12 C 9 11.809047 8.9782095 11.622878 8.9433594 11.441406 L 16.078125 7.2792969 C 16.60146 7.7221461 17.267923 8 18 8 C 19.64501 8 21 6.6450096 21 5 C 21 3.3549904 19.64501 2 18 2 z M 18 4 C 18.564129 4 19 4.4358706 19 5 C 19 5.5641294 18.564129 6 18 6 C 17.435871 6 17 5.5641294 17 5 C 17 4.4358706 17.435871 4 18 4 z M 6 11 C 6.5641294 11 7 11.435871 7 12 C 7 12.564129 6.5641294 13 6 13 C 5.4358706 13 5 12.564129 5 12 C 5 11.435871 5.4358706 11 6 11 z M 18 18 C 18.564129 18 19 18.435871 19 19 C 19 19.564129 18.564129 20 18 20 C 17.435871 20 17 19.564129 17 19 C 17 18.435871 17.435871 18 18 18 z" }))); });

var arrowBottom = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, version: "1.1", id: "Capa_1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 490.688 490.688", width: props.width, height: props.height, xmlSpace: "preserve" },
    React__default['default'].createElement("path", { d: "M472.328,120.529L245.213,347.665L18.098,120.529c-4.237-4.093-10.99-3.975-15.083,0.262\n            c-3.992,4.134-3.992,10.687,0,14.82l234.667,234.667c4.165,4.164,10.917,4.164,15.083,0l234.667-234.667\n            c4.237-4.093,4.354-10.845,0.262-15.083c-4.093-4.237-10.845-4.354-15.083-0.262c-0.089,0.086-0.176,0.173-0.262,0.262\n            L472.328,120.529z" }),
    React__default['default'].createElement("path", { d: "M245.213,373.415c-2.831,0.005-5.548-1.115-7.552-3.115L2.994,135.633c-4.093-4.237-3.975-10.99,0.262-15.083\n        c4.134-3.992,10.687-3.992,14.82,0l227.136,227.115l227.115-227.136c4.093-4.237,10.845-4.354,15.083-0.262\n        c4.237,4.093,4.354,10.845,0.262,15.083c-0.086,0.089-0.173,0.176-0.262,0.262L252.744,370.279\n        C250.748,372.281,248.039,373.408,245.213,373.415z" }))); });

var uncheck = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, focusable: "false", viewBox: "0 0 24 24", "aria-hidden": "true", width: props.width, height: props.height },
    React__default['default'].createElement("path", { d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z" }))); });

var check = (function (props) { return (React__default['default'].createElement("svg", { xlinkTitle: props.title, style: props.style, className: props.className, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width || 20, height: props.height || 20, viewBox: "0 0 24 24" },
    React__default['default'].createElement("path", { d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" }))); });

var radio = (function (props) { return (React__default['default'].createElement("svg", { style: props.style, className: props.className, width: props.width, height: props.height, focusable: "false", viewBox: "0 0 24 24", "aria-hidden": "true" },
    React__default['default'].createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" }))); });

var radioCircle = (function (props) { return (React__default['default'].createElement("svg", { style: props.style, className: props.className, width: props.width, height: props.height, focusable: "false", viewBox: "0 0 24 24", "aria-hidden": "true" },
    React__default['default'].createElement("path", { d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z" }))); });

var plus = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M16.218 3.782c-1.794-1.794-4.18-2.782-6.718-2.782s-4.923 0.988-6.718 2.782-2.782 4.18-2.782 6.717 0.988 4.923 2.782 6.718 4.18 2.782 6.718 2.782 4.923-0.988 6.718-2.782 2.782-4.18 2.782-6.718-0.988-4.923-2.782-6.717zM9.5 19c-4.687 0-8.5-3.813-8.5-8.5s3.813-8.5 8.5-8.5c4.687 0 8.5 3.813 8.5 8.5s-3.813 8.5-8.5 8.5z" }),
    React__default['default'].createElement("path", { d: "M15.5 10h-5.5v-5.5c0-0.276-0.224-0.5-0.5-0.5s-0.5 0.224-0.5 0.5v5.5h-5.5c-0.276 0-0.5 0.224-0.5 0.5s0.224 0.5 0.5 0.5h5.5v5.5c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-5.5h5.5c0.276 0 0.5-0.224 0.5-0.5s-0.224-0.5-0.5-0.5z" }))); });

var phone = (function (props) { return (React__default['default'].createElement("svg", { className: ["h-icon-phone", props.className].join(" "), style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M17.894 8.897c-1.041 0-2.928-0.375-3.516-0.963-0.361-0.361-0.446-0.813-0.515-1.177-0.085-0.448-0.136-0.581-0.332-0.666-0.902-0.388-2.196-0.61-3.551-0.61-1.34 0-2.62 0.219-3.512 0.6-0.194 0.083-0.244 0.216-0.327 0.663-0.068 0.365-0.152 0.819-0.512 1.179-0.328 0.328-1.015 0.554-1.533 0.685-0.668 0.169-1.384 0.267-1.963 0.267-0.664 0-1.113-0.126-1.372-0.386-0.391-0.391-0.641-0.926-0.685-1.467-0.037-0.456 0.051-1.132 0.68-1.762 1.022-1.022 2.396-1.819 4.086-2.368 1.554-0.506 3.322-0.773 5.114-0.773 1.804 0 3.587 0.27 5.156 0.782 1.705 0.556 3.093 1.361 4.124 2.393 1.050 1.050 0.79 2.443 0.012 3.221-0.257 0.257-0.7 0.382-1.354 0.382zM9.98 4.481c1.507 0 2.908 0.246 3.946 0.691 0.713 0.306 0.833 0.938 0.92 1.398 0.052 0.275 0.097 0.513 0.24 0.656 0.252 0.252 1.706 0.671 2.809 0.671 0.481 0 0.633-0.082 0.652-0.094 0.31-0.314 0.698-1.086-0.017-1.802-1.805-1.805-5.010-2.882-8.574-2.882-3.535 0-6.709 1.065-8.493 2.848-0.288 0.288-0.42 0.616-0.391 0.974 0.025 0.302 0.17 0.614 0.39 0.836 0.019 0.012 0.173 0.098 0.67 0.098 1.098 0 2.541-0.411 2.789-0.659 0.141-0.141 0.185-0.379 0.236-0.654 0.086-0.462 0.203-1.095 0.917-1.4 1.026-0.439 2.413-0.68 3.905-0.68z" }),
    React__default['default'].createElement("path", { d: "M16.5 18h-13c-0.671 0-1.29-0.264-1.743-0.743s-0.682-1.112-0.645-1.782c0.004-0.077 0.118-1.901 1.27-3.739 0.682-1.088 1.586-1.955 2.686-2.577 1.361-0.769 3.020-1.159 4.932-1.159s3.571 0.39 4.932 1.159c1.101 0.622 2.005 1.489 2.686 2.577 1.152 1.839 1.266 3.663 1.27 3.739 0.037 0.67-0.192 1.303-0.645 1.782s-1.072 0.743-1.743 0.743zM10 9c-3.117 0-5.388 1.088-6.749 3.233-1.030 1.623-1.139 3.282-1.14 3.299-0.022 0.392 0.111 0.761 0.373 1.038s0.623 0.43 1.017 0.43h13c0.393 0 0.754-0.153 1.017-0.43s0.395-0.646 0.373-1.039c-0.001-0.016-0.111-1.675-1.14-3.298-1.362-2.145-3.633-3.233-6.749-3.233z" }),
    React__default['default'].createElement("path", { d: "M10 16c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zM10 11c-1.103 0-2 0.897-2 2s0.897 2 2 2c1.103 0 2-0.897 2-2s-0.897-2-2-2z" }))); });

var camera = (function (props) { return (React__default['default'].createElement("svg", { version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: "20", height: "20", viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { fill: "#000000", d: "M19.131 17.053c-0 0-0 0-0 0-0.242-0-0.485-0.097-0.724-0.288l-3.438-2.751c-0.552-0.442-0.969-1.308-0.969-2.015v-3c0-0.707 0.416-1.573 0.969-2.015l3.438-2.751c0.239-0.191 0.482-0.288 0.724-0.288 0.433-0 0.869 0.326 0.869 1.053v11c0 0.278-0.064 0.512-0.19 0.694-0.157 0.228-0.405 0.359-0.679 0.359zM19 5.040l-3.407 2.725c-0.31 0.248-0.593 0.837-0.593 1.234v3c0 0.398 0.283 0.986 0.593 1.234l3.407 2.725v-10.919z" }),
    React__default['default'].createElement("path", { fill: "#000000", d: "M11.5 17h-10c-0.827 0-1.5-0.673-1.5-1.5v-10c0-0.827 0.673-1.5 1.5-1.5h10c0.827 0 1.5 0.673 1.5 1.5v10c0 0.827-0.673 1.5-1.5 1.5zM1.5 5c-0.276 0-0.5 0.224-0.5 0.5v10c0 0.276 0.224 0.5 0.5 0.5h10c0.276 0 0.5-0.224 0.5-0.5v-10c0-0.276-0.224-0.5-0.5-0.5h-10z" }))); });

var setting = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M7.631 19.702c-0.041 0-0.083-0.005-0.125-0.016-0.898-0.231-1.761-0.587-2.564-1.059-0.233-0.137-0.315-0.434-0.186-0.671 0.159-0.292 0.243-0.622 0.243-0.957 0-1.103-0.897-2-2-2-0.334 0-0.665 0.084-0.957 0.243-0.237 0.129-0.534 0.047-0.671-0.186-0.472-0.804-0.828-1.666-1.059-2.564-0.065-0.254 0.077-0.515 0.325-0.598 0.814-0.274 1.362-1.036 1.362-1.895s-0.547-1.621-1.362-1.895c-0.248-0.084-0.39-0.344-0.325-0.598 0.231-0.898 0.587-1.761 1.059-2.564 0.137-0.233 0.434-0.315 0.671-0.186 0.291 0.159 0.622 0.243 0.957 0.243 1.103 0 2-0.897 2-2 0-0.334-0.084-0.665-0.243-0.957-0.129-0.237-0.047-0.534 0.186-0.671 0.804-0.472 1.666-0.828 2.564-1.059 0.254-0.065 0.515 0.077 0.598 0.325 0.274 0.814 1.036 1.362 1.895 1.362s1.621-0.547 1.895-1.362c0.084-0.248 0.345-0.39 0.598-0.325 0.898 0.231 1.761 0.587 2.564 1.059 0.233 0.137 0.315 0.434 0.186 0.671-0.159 0.292-0.243 0.622-0.243 0.957 0 1.103 0.897 2 2 2 0.334 0 0.665-0.084 0.957-0.243 0.237-0.129 0.534-0.047 0.671 0.186 0.472 0.804 0.828 1.666 1.059 2.564 0.065 0.254-0.077 0.515-0.325 0.598-0.814 0.274-1.362 1.036-1.362 1.895s0.547 1.621 1.362 1.895c0.248 0.084 0.39 0.344 0.325 0.598-0.231 0.898-0.587 1.761-1.059 2.564-0.137 0.233-0.434 0.315-0.671 0.186-0.292-0.159-0.622-0.243-0.957-0.243-1.103 0-2 0.897-2 2 0 0.334 0.084 0.665 0.243 0.957 0.129 0.237 0.047 0.534-0.186 0.671-0.804 0.472-1.666 0.828-2.564 1.059-0.254 0.065-0.515-0.077-0.598-0.325-0.274-0.814-1.036-1.362-1.895-1.362s-1.621 0.547-1.895 1.362c-0.070 0.207-0.264 0.341-0.474 0.341zM10 17c1.127 0 2.142 0.628 2.655 1.602 0.52-0.161 1.026-0.369 1.51-0.622-0.108-0.314-0.164-0.646-0.164-0.98 0-1.654 1.346-3 3-3 0.334 0 0.666 0.056 0.98 0.164 0.253-0.484 0.462-0.989 0.622-1.51-0.974-0.512-1.602-1.527-1.602-2.655s0.628-2.142 1.602-2.655c-0.161-0.52-0.369-1.026-0.622-1.51-0.314 0.108-0.646 0.164-0.98 0.164-1.654 0-3-1.346-3-3 0-0.334 0.056-0.666 0.164-0.98-0.484-0.253-0.989-0.462-1.51-0.622-0.512 0.974-1.527 1.602-2.655 1.602s-2.142-0.628-2.655-1.602c-0.52 0.16-1.026 0.369-1.51 0.622 0.108 0.314 0.164 0.646 0.164 0.98 0 1.654-1.346 3-3 3-0.334 0-0.666-0.056-0.98-0.164-0.253 0.484-0.462 0.989-0.622 1.51 0.974 0.512 1.602 1.527 1.602 2.655s-0.628 2.142-1.602 2.655c0.16 0.52 0.369 1.026 0.622 1.51 0.314-0.108 0.646-0.164 0.98-0.164 1.654 0 3 1.346 3 3 0 0.334-0.056 0.666-0.164 0.98 0.484 0.253 0.989 0.462 1.51 0.622 0.512-0.974 1.527-1.602 2.655-1.602z" }),
    React__default['default'].createElement("path", { d: "M10 13c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zM10 8c-1.103 0-2 0.897-2 2s0.897 2 2 2c1.103 0 2-0.897 2-2s-0.897-2-2-2z" }))); });

var attachment = (function (props) { return (React__default['default'].createElement("svg", { className: ["h-icon-attachment", props.className].join(" "), width: props.width, height: props.height, version: "1.1", id: "Capa_1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 511.991 511.991", style: props.style, xmlSpace: "preserve" },
    React__default['default'].createElement("path", { d: "M486.241,65.831L467.49,47.079c-34.333-34.333-89.997-34.333-124.33-0.001c0,0,0,0-0.001,0.001\n\tL103.543,286.695c-24.277,24.277-24.277,63.638,0,87.915l12.501,12.501c24.728,23.163,63.187,23.163,87.915,0l176.917-176.917\n\tc4.237-4.093,4.354-10.845,0.262-15.083c-4.093-4.237-10.845-4.354-15.083-0.262c-0.089,0.086-0.176,0.173-0.262,0.262\n\tL188.876,372.028c-16.248,15.203-41.501,15.203-57.749,0l-12.501-12.501c-15.947-15.945-15.949-41.798-0.004-57.745\n\tc0.001-0.001,0.003-0.003,0.004-0.004L358.241,62.161c26.366-25.112,67.8-25.112,94.165,0l18.752,18.752\n\tc25.993,26.007,25.993,68.158,0,94.165l-267.2,267.2c-36.063,36.05-94.518,36.05-130.581,0l-25.003-24.981\n\tc-36.05-36.063-36.05-94.518,0-130.581L252.876,82.215c4.237-4.093,4.355-10.845,0.262-15.083\n\tc-4.093-4.237-10.845-4.355-15.083-0.262c-0.089,0.086-0.176,0.173-0.262,0.262L33.292,271.612\n\tC-11.097,316-11.097,387.968,33.291,432.357c0,0.001,0.001,0.001,0.001,0.001l25.003,25.003\n\tc44.388,44.389,116.356,44.39,160.745,0.002c0-0.001,0.001-0.001,0.001-0.002l267.2-267.2\n\tC520.574,155.829,520.575,100.164,486.241,65.831C486.242,65.831,486.242,65.831,486.241,65.831L486.241,65.831z" }),
    React__default['default'].createElement("path", { d: "M138.658,490.663c-30.164,0.066-59.104-11.923-80.384-33.301L33.292,432.38c-44.389-44.388-44.39-116.356-0.001-160.745\n\tc0,0,0.001-0.001,0.001-0.001L237.794,67.132c4.093-4.237,10.845-4.355,15.083-0.262c4.237,4.093,4.355,10.845,0.262,15.083\n\tc-0.086,0.089-0.173,0.176-0.262,0.262L48.375,286.695c-36.05,36.063-36.05,94.518,0,130.581l25.003,25.003\n\tc36.063,36.05,94.518,36.05,130.581,0l267.2-267.2c25.993-26.007,25.993-68.158,0-94.165l-18.752-18.752\n\tc-26.366-25.112-67.8-25.112-94.165,0L118.625,301.777c-15.947,15.945-15.949,41.798-0.004,57.745\n\tc0.001,0.001,0.003,0.003,0.004,0.004l12.501,12.501c16.248,15.203,41.501,15.203,57.749,0l176.917-176.917\n\tc4.093-4.237,10.845-4.355,15.083-0.262c4.237,4.093,4.354,10.845,0.262,15.083c-0.086,0.089-0.173,0.176-0.262,0.262\n\tL203.959,387.111c-24.728,23.163-63.187,23.163-87.915,0l-12.501-12.501c-24.277-24.277-24.277-63.638,0-87.915L343.159,47.079\n\tc34.333-34.333,89.997-34.333,124.33-0.001c0,0,0,0,0.001,0.001l18.752,18.752c34.333,34.333,34.333,89.997,0.001,124.33\n\tc0,0,0,0-0.001,0.001l-267.2,267.2C197.762,478.74,168.822,490.729,138.658,490.663z" }))); });

var send = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, id: "Capa_1", enableBackground: "new 0 0 512.005 512.005", height: props.height, viewBox: "0 0 512.005 512.005", width: props.width, xmlns: "http://www.w3.org/2000/svg" },
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("path", { d: "m511.658 51.675c2.496-11.619-8.895-21.416-20.007-17.176l-482 184c-5.801 2.215-9.638 7.775-9.65 13.984-.012 6.21 3.803 11.785 9.596 14.022l135.403 52.295v164.713c0 6.948 4.771 12.986 11.531 14.593 6.715 1.597 13.717-1.598 16.865-7.843l56.001-111.128 136.664 101.423c8.313 6.17 20.262 2.246 23.287-7.669 127.599-418.357 122.083-400.163 122.31-401.214zm-118.981 52.718-234.803 167.219-101.028-39.018zm-217.677 191.852 204.668-145.757c-176.114 185.79-166.916 176.011-167.684 177.045-1.141 1.535 1.985-4.448-36.984 72.882zm191.858 127.546-120.296-89.276 217.511-229.462z" })))); });

var pencil = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M19.104 0.896c-0.562-0.562-1.309-0.871-2.104-0.871s-1.542 0.309-2.104 0.871l-12.75 12.75c-0.052 0.052-0.091 0.114-0.116 0.183l-2 5.5c-0.066 0.183-0.021 0.387 0.116 0.524 0.095 0.095 0.223 0.146 0.354 0.146 0.057 0 0.115-0.010 0.171-0.030l5.5-2c0.069-0.025 0.131-0.065 0.183-0.116l12.75-12.75c0.562-0.562 0.871-1.309 0.871-2.104s-0.309-1.542-0.871-2.104zM5.725 17.068l-4.389 1.596 1.596-4.389 11.068-11.068 2.793 2.793-11.068 11.068zM18.396 4.396l-0.896 0.896-2.793-2.793 0.896-0.896c0.373-0.373 0.869-0.578 1.396-0.578s1.023 0.205 1.396 0.578c0.373 0.373 0.578 0.869 0.578 1.396s-0.205 1.023-0.578 1.396z" }))); });

var close = (function (props) { return (React__default['default'].createElement("svg", { style: props.style, className: props.className, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M10.707 10.5l5.646-5.646c0.195-0.195 0.195-0.512 0-0.707s-0.512-0.195-0.707 0l-5.646 5.646-5.646-5.646c-0.195-0.195-0.512-0.195-0.707 0s-0.195 0.512 0 0.707l5.646 5.646-5.646 5.646c-0.195 0.195-0.195 0.512 0 0.707 0.098 0.098 0.226 0.146 0.354 0.146s0.256-0.049 0.354-0.146l5.646-5.646 5.646 5.646c0.098 0.098 0.226 0.146 0.354 0.146s0.256-0.049 0.354-0.146c0.195-0.195 0.195-0.512 0-0.707l-5.646-5.646z" }))); });

var grid = (function (props) { return (React__default['default'].createElement("svg", { className: ["h-icon-grid", props.className].join(" "), style: props.style, height: props.height, width: props.width, version: "1.1", id: "Capa_1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 359 359", xmlSpace: "preserve" },
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M96,0H13C7.5,0,3,4.5,3,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10V10C106,4.5,101.5,0,96,0z M87,84H23V20h64V84z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M221,0h-83c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10V10C231,4.5,226.5,0,221,0z M212,84h-64V20\n\t\t\th64V84z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M96,126H13c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10v-83C106,130.5,101.5,126,96,126z M87,209H23\n\t\t\tv-63h64V209z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M221,126h-83c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10v-83C231,130.5,226.5,126,221,126z\n\t\t\t M212,209h-64v-63h64V209z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M346,0h-83c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10V10C356,4.5,351.5,0,346,0z M337,84h-64V20\n\t\t\th64V84z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M346,126h-83c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10v-83C356,130.5,351.5,126,346,126z\n\t\t\t M337,209h-64v-63h64V209z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M96,256H13c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10v-83C106,260.5,101.5,256,96,256z M87,340H23\n\t\t\tv-64h64V340z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M221,256h-83c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10v-83C231,260.5,226.5,256,221,256z\n\t\t\t M212,340h-64v-64h64V340z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M346,256h-83c-5.5,0-10,4.5-10,10v83c0,5.5,4.5,10,10,10h83c5.5,0,10-4.5,10-10v-83C356,260.5,351.5,256,346,256z\n\t\t\t M337,340h-64v-64h64V340z" }))))); });

var trash = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M15.5 2h-3.5v-0.5c0-0.827-0.673-1.5-1.5-1.5h-2c-0.827 0-1.5 0.673-1.5 1.5v0.5h-3.5c-0.827 0-1.5 0.673-1.5 1.5v1c0 0.652 0.418 1.208 1 1.414v12.586c0 0.827 0.673 1.5 1.5 1.5h10c0.827 0 1.5-0.673 1.5-1.5v-12.586c0.582-0.206 1-0.762 1-1.414v-1c0-0.827-0.673-1.5-1.5-1.5zM8 1.5c0-0.276 0.224-0.5 0.5-0.5h2c0.276 0 0.5 0.224 0.5 0.5v0.5h-3v-0.5zM14.5 19h-10c-0.276 0-0.5-0.224-0.5-0.5v-12.5h11v12.5c0 0.276-0.224 0.5-0.5 0.5zM16 4.5c0 0.276-0.224 0.5-0.5 0.5h-12c-0.276 0-0.5-0.224-0.5-0.5v-1c0-0.276 0.224-0.5 0.5-0.5h12c0.276 0 0.5 0.224 0.5 0.5v1z" }),
    React__default['default'].createElement("path", { d: "M12.5 7c-0.276 0-0.5 0.224-0.5 0.5v10c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-10c0-0.276-0.224-0.5-0.5-0.5z" }),
    React__default['default'].createElement("path", { d: "M9.5 7c-0.276 0-0.5 0.224-0.5 0.5v10c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-10c0-0.276-0.224-0.5-0.5-0.5z" }),
    React__default['default'].createElement("path", { d: "M6.5 7c-0.276 0-0.5 0.224-0.5 0.5v10c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-10c0-0.276-0.224-0.5-0.5-0.5z" }))); });

var tick = (function (props) { return (React__default['default'].createElement("svg", { style: props.style, className: props.className, height: props.height, width: props.width, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 76.887 55.552", xmlSpace: "preserve" },
    React__default['default'].createElement("g", { id: "Layer_15" },
        React__default['default'].createElement("polygon", { points: "34.373,49.541 76.887,5.889 70.739,0 28.426,43.458 6.078,20.632 0,26.585 22.488,49.557\n\t\t22.488,49.557 28.517,55.552 28.426,55.467 28.517,55.552 34.373,49.541 \t" })))); });

var user = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M9.5 11c-3.033 0-5.5-2.467-5.5-5.5s2.467-5.5 5.5-5.5 5.5 2.467 5.5 5.5-2.467 5.5-5.5 5.5zM9.5 1c-2.481 0-4.5 2.019-4.5 4.5s2.019 4.5 4.5 4.5c2.481 0 4.5-2.019 4.5-4.5s-2.019-4.5-4.5-4.5z" }),
    React__default['default'].createElement("path", { d: "M17.5 20h-16c-0.827 0-1.5-0.673-1.5-1.5 0-0.068 0.014-1.685 1.225-3.3 0.705-0.94 1.67-1.687 2.869-2.219 1.464-0.651 3.283-0.981 5.406-0.981s3.942 0.33 5.406 0.981c1.199 0.533 2.164 1.279 2.869 2.219 1.211 1.615 1.225 3.232 1.225 3.3 0 0.827-0.673 1.5-1.5 1.5zM9.5 13c-3.487 0-6.060 0.953-7.441 2.756-1.035 1.351-1.058 2.732-1.059 2.746 0 0.274 0.224 0.498 0.5 0.498h16c0.276 0 0.5-0.224 0.5-0.5-0-0.012-0.023-1.393-1.059-2.744-1.382-1.803-3.955-2.756-7.441-2.756z" }))); });

var eye = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M19.872 10.166c-0.047-0.053-1.182-1.305-2.956-2.572-1.047-0.748-2.1-1.344-3.13-1.773-1.305-0.544-2.579-0.82-3.786-0.82s-2.481 0.276-3.786 0.82c-1.030 0.429-2.083 1.026-3.13 1.773-1.774 1.267-2.909 2.52-2.956 2.572-0.171 0.19-0.171 0.479 0 0.669 0.047 0.053 1.182 1.305 2.956 2.572 1.047 0.748 2.1 1.344 3.13 1.773 1.305 0.544 2.579 0.82 3.786 0.82s2.481-0.276 3.786-0.82c1.030-0.429 2.083-1.026 3.13-1.773 1.774-1.267 2.909-2.52 2.956-2.572 0.171-0.19 0.171-0.479 0-0.669zM12.574 6.438c0.907 0.763 1.426 1.873 1.426 3.062 0 2.206-1.794 4-4 4s-4-1.794-4-4c0-1.188 0.519-2.299 1.426-3.062 0.822-0.268 1.691-0.438 2.574-0.438s1.752 0.17 2.574 0.438zM16.317 12.606c-1.533 1.092-3.873 2.394-6.317 2.394s-4.784-1.302-6.317-2.394c-1.157-0.824-2.042-1.658-2.489-2.106 0.447-0.448 1.332-1.281 2.489-2.106 0.53-0.378 1.156-0.78 1.85-1.145-0.347 0.688-0.533 1.455-0.533 2.251 0 2.757 2.243 5 5 5s5-2.243 5-5c0-0.796-0.186-1.563-0.533-2.251 0.694 0.365 1.32 0.768 1.85 1.145 1.157 0.824 2.042 1.658 2.489 2.106-0.447 0.448-1.332 1.281-2.489 2.106z" }))); });

var calendar = (function (props) { return (React__default['default'].createElement("svg", { className: [props.className, "h-icon-calendar"].join(" "), style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M18.5 2h-2.5v-0.5c0-0.276-0.224-0.5-0.5-0.5s-0.5 0.224-0.5 0.5v0.5h-10v-0.5c0-0.276-0.224-0.5-0.5-0.5s-0.5 0.224-0.5 0.5v0.5h-2.5c-0.827 0-1.5 0.673-1.5 1.5v14c0 0.827 0.673 1.5 1.5 1.5h17c0.827 0 1.5-0.673 1.5-1.5v-14c0-0.827-0.673-1.5-1.5-1.5zM1.5 3h2.5v1.5c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-1.5h10v1.5c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-1.5h2.5c0.276 0 0.5 0.224 0.5 0.5v2.5h-18v-2.5c0-0.276 0.224-0.5 0.5-0.5zM18.5 18h-17c-0.276 0-0.5-0.224-0.5-0.5v-10.5h18v10.5c0 0.276-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M7.5 10h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M10.5 10h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M13.5 10h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M16.5 10h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M4.5 12h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M7.5 12h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M10.5 12h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M13.5 12h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M16.5 12h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M4.5 14h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M7.5 14h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M10.5 14h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M13.5 14h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M16.5 14h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M4.5 16h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M7.5 16h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M10.5 16h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M13.5 16h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }),
    React__default['default'].createElement("path", { d: "M16.5 16h-1c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5h1c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5z" }))); });

var subject = (function (props) { return (React__default['default'].createElement("svg", { style: props.style, className: props.className, height: props.height, viewBox: "0 0 48 48", width: props.width, xmlns: "http://www.w3.org/2000/svg" },
    React__default['default'].createElement("path", { d: "M28 34h-20v4h20v-4zm12-16h-32v4h32v-4zm-32 12h32v-4h-32v4zm0-20v4h32v-4h-32z" }),
    React__default['default'].createElement("path", { d: "M0 0h48v48h-48z", fill: "none" }))); });

var bold = (function (props) { return (React__default['default'].createElement("svg", { style: props.style, className: props.className, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { fill: "#000000", d: "M10 9h-2.5c-0.276 0-0.5-0.224-0.5-0.5v-3c0-0.276 0.224-0.5 0.5-0.5h2.5c1.103 0 2 0.897 2 2s-0.897 2-2 2zM8 8h2c0.551 0 1-0.449 1-1s-0.449-1-1-1h-2v2z" }),
    React__default['default'].createElement("path", { fill: "#000000", d: "M11 15h-3.5c-0.276 0-0.5-0.224-0.5-0.5v-3c0-0.276 0.224-0.5 0.5-0.5h3.5c1.103 0 2 0.897 2 2s-0.897 2-2 2zM8 14h3c0.551 0 1-0.449 1-1s-0.449-1-1-1h-3v2z" }),
    React__default['default'].createElement("path", { fill: "#000000", d: "M11 18h-5.5c-0.827 0-1.5-0.673-1.5-1.5v-13c0-0.827 0.673-1.5 1.5-1.5h4.5c2.757 0 5 2.243 5 5 0 0.824-0.202 1.628-0.587 2.349 1.013 0.945 1.587 2.253 1.587 3.651 0 2.757-2.243 5-5 5zM5.5 3c-0.276 0-0.5 0.224-0.5 0.5v13c0 0.276 0.224 0.5 0.5 0.5h5.5c2.206 0 4-1.794 4-4 0-1.237-0.561-2.385-1.539-3.151-0.211-0.165-0.253-0.466-0.1-0.682 0.418-0.646 0.639-1.395 0.639-2.167 0-2.206-1.794-4-4-4h-4.5z" }))); });

var file = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M17.854 5.646l-4.5-4.5c-0.094-0.094-0.221-0.146-0.354-0.146h-9.5c-0.827 0-1.5 0.673-1.5 1.5v16c0 0.827 0.673 1.5 1.5 1.5h13c0.827 0 1.5-0.673 1.5-1.5v-12.5c0-0.133-0.053-0.26-0.146-0.354zM16.793 6h-3.293c-0.276 0-0.5-0.224-0.5-0.5v-3.293l3.793 3.793zM17 18.5c0 0.276-0.224 0.5-0.5 0.5h-13c-0.276 0-0.5-0.224-0.5-0.5v-16c0-0.276 0.224-0.5 0.5-0.5h8.5v3.5c0 0.827 0.673 1.5 1.5 1.5h3.5v11.5z" }))); });

var chat = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M0.5 19c-0.225 0-0.422-0.15-0.482-0.367s0.032-0.447 0.225-0.562c1.691-1.014 2.392-2.489 2.641-3.179-1.838-1.407-2.884-3.354-2.884-5.392 0-1.029 0.258-2.026 0.768-2.964 0.486-0.894 1.18-1.695 2.061-2.381 1.787-1.39 4.156-2.156 6.671-2.156s4.884 0.766 6.671 2.156c0.881 0.685 1.575 1.486 2.061 2.381 0.51 0.937 0.768 1.934 0.768 2.964s-0.258 2.026-0.768 2.964c-0.486 0.894-1.18 1.695-2.061 2.381-1.787 1.39-4.156 2.156-6.671 2.156-1.033 0-2.047-0.129-3.016-0.385-0.429 0.286-1.231 0.793-2.189 1.27-1.488 0.74-2.764 1.115-3.794 1.115zM9.5 3c-4.687 0-8.5 2.916-8.5 6.5 0 1.815 1.005 3.562 2.756 4.792 0.172 0.121 0.25 0.336 0.196 0.539-0.117 0.436-0.515 1.633-1.58 2.788 1.302-0.456 2.704-1.247 3.739-1.959 0.123-0.085 0.277-0.11 0.421-0.069 0.948 0.271 1.947 0.409 2.968 0.409 4.687 0 8.5-2.916 8.5-6.5s-3.813-6.5-8.5-6.5z" }))); });

var size = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, version: "1.1", id: "Capa_1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 512 512", style: props.style, width: props.width, height: props.height, xmlSpace: "preserve" },
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("polygon", { points: "472,111 472,254.716 369.754,152.47 341.469,180.754 395.716,235 115.896,235 170.143,180.754 141.857,152.47\n\t\t\t40,254.327 40,111 0,111 0,401 40,401 40,255.673 141.857,357.53 170.143,329.246 115.896,275 395.716,275 341.469,329.246\n\t\t\t369.754,357.53 472,255.284 472,401 512,401 512,111 \t\t" }))))); });

var cart = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: props.width, height: props.height, viewBox: "0 0 20 20" },
    React__default['default'].createElement("path", { d: "M8 20c-1.103 0-2-0.897-2-2s0.897-2 2-2 2 0.897 2 2-0.897 2-2 2zM8 17c-0.551 0-1 0.449-1 1s0.449 1 1 1 1-0.449 1-1-0.449-1-1-1z" }),
    React__default['default'].createElement("path", { d: "M15 20c-1.103 0-2-0.897-2-2s0.897-2 2-2 2 0.897 2 2-0.897 2-2 2zM15 17c-0.551 0-1 0.449-1 1s0.449 1 1 1 1-0.449 1-1-0.449-1-1-1z" }),
    React__default['default'].createElement("path", { d: "M17.539 4.467c-0.251-0.297-0.63-0.467-1.039-0.467h-12.243l-0.099-0.596c-0.131-0.787-0.859-1.404-1.658-1.404h-1c-0.276 0-0.5 0.224-0.5 0.5s0.224 0.5 0.5 0.5h1c0.307 0 0.621 0.266 0.671 0.569l1.671 10.027c0.131 0.787 0.859 1.404 1.658 1.404h10c0.276 0 0.5-0.224 0.5-0.5s-0.224-0.5-0.5-0.5h-10c-0.307 0-0.621-0.266-0.671-0.569l-0.247-1.48 9.965-0.867c0.775-0.067 1.483-0.721 1.611-1.489l0.671-4.027c0.067-0.404-0.038-0.806-0.289-1.102zM16.842 5.404l-0.671 4.027c-0.053 0.316-0.391 0.629-0.711 0.657l-10.043 0.873-0.994-5.962h12.076c0.117 0 0.215 0.040 0.276 0.113s0.085 0.176 0.066 0.291z" }))); });

var drum = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, width: props.width, height: props.height, version: "1.1", id: "Capa_1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 480.098 480.098", xmlSpace: "preserve" },
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M240.049,224c-61.856,0-112,50.144-112,112s50.144,112,112,112s112-50.144,112-112\n\t\t\tC351.983,274.172,301.878,224.066,240.049,224z M240.049,432c-53.019,0-96-42.981-96-96s42.981-96,96-96s96,42.981,96,96\n\t\t\tC335.992,388.996,293.045,431.943,240.049,432z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M464.049,357.6V200c0-4.418-3.582-8-8-8h-40v-86.664l52.92,22.048c4.078,1.701,8.763-0.226,10.464-4.304\n\t\t\tc1.701-4.078-0.226-8.763-4.304-10.464l-91.08-37.952V64h56c4.418,0,8-3.582,8-8c-0.026-22.08-17.92-39.974-40-40h-24V0h-16v16\n\t\t\th-24c-22.08,0.026-39.974,17.92-40,40c0,4.418,3.582,8,8,8h56v16c0,3.229,1.94,6.141,4.92,7.384l27.08,11.28V192h-24v-56\n\t\t\tc0-4.418-3.582-8-8-8h-96c-4.418,0-8,3.582-8,8v24h-48v-24c0-4.418-3.582-8-8-8h-96c-4.418,0-8,3.582-8,8v56h-24V98.664\n\t\t\tl27.08-11.28c2.98-1.243,4.92-4.155,4.92-7.384V64h56c4.418,0,8-3.582,8-8c-0.026-22.08-17.92-39.974-40-40h-24V0h-16v16h-24\n\t\t\tc-22.08,0.026-39.974,17.92-40,40c0,4.418,3.582,8,8,8h56v10.664l-91.08,37.952c-4.078,1.701-6.005,6.386-4.304,10.464\n\t\t\tc1.701,4.078,6.386,6.005,10.464,4.304l52.92-22.048V192h-40c-4.418,0-8,3.582-8,8v157.6L1.393,379.56\n\t\t\tc-0.874,1.316-1.341,2.86-1.344,4.44v80c0.039,1.421,0.465,2.804,1.232,4c-1.862,3.079-1.405,7.028,1.112,9.6\n\t\t\tc3.124,3.123,8.188,3.123,11.312,0l58.344-58.288L92.737,440l-26.344,26.344c-3.178,3.07-3.266,8.134-0.196,11.312\n\t\t\tc3.07,3.178,8.134,3.266,11.312,0.196c0.067-0.064,0.132-0.13,0.196-0.196l26.344-26.344l26.344,26.344\n\t\t\tc3.178,3.069,8.242,2.982,11.312-0.196c2.994-3.1,2.994-8.015,0-11.116L115.361,440l13.12-13.12\n\t\t\tc9.061,11.112,19.721,20.818,31.632,28.8c0,0.112-0.064,0.2-0.064,0.312v16c0,4.418,3.582,8,8,8s8-3.582,8-8v-7.2\n\t\t\tc40.262,20.257,87.738,20.257,128,0V472c0,4.418,3.582,8,8,8s8-3.582,8-8v-16c0-0.112-0.056-0.2-0.064-0.312\n\t\t\tc11.911-7.982,22.571-17.688,31.632-28.8L364.737,440l-26.344,26.344c-3.07,3.178-2.982,8.242,0.196,11.312\n\t\t\tc3.1,2.995,8.016,2.995,11.116,0l26.344-26.344l26.344,26.344c3.178,3.07,8.242,2.982,11.312-0.196\n\t\t\tc2.995-3.1,2.995-8.016,0-11.116L387.361,440l20.688-20.688l58.336,58.336c3.12,3.128,8.186,3.135,11.314,0.014\n\t\t\tc1.504-1.5,2.35-3.538,2.35-5.662v-88c-0.003-1.58-0.47-3.124-1.344-4.44L464.049,357.6z M321.417,48\n\t\t\tc3.403-9.582,12.464-15.988,22.632-16h64c10.168,0.012,19.229,6.418,22.632,16H321.417z M49.417,48\n\t\t\tc3.403-9.582,12.464-15.988,22.632-16h64c10.168,0.012,19.229,6.418,22.632,16H49.417z M64.049,404.688l-48,48V386.4l14.656-21.96\n\t\t\tc0.874-1.316,1.341-2.86,1.344-4.44v-24h32V404.688z M64.049,320h-32v-80h32V320z M64.049,224h-32v-16h32V224z M280.049,144h80v16\n\t\t\th-80V144z M280.049,176h80v16h-32c-4.418,0-8,3.582-8,8v16.352c-0.128-0.088-0.264-0.152-0.384-0.24\n\t\t\tc-3.056-2.016-6.187-3.917-9.392-5.704c-2.328-1.312-4.736-2.472-7.144-3.656c-1.128-0.552-2.248-1.12-3.4-1.64\n\t\t\tc-2.704-1.24-5.448-2.4-8.232-3.448c-0.752-0.288-1.504-0.552-2.264-0.8c-3.024-1.112-6.064-2.168-9.184-3.072V176z M248.049,176\n\t\t\th16v18.168c-5.296-0.888-10.638-1.475-16-1.76V176z M216.049,176h16v16.408c-5.362,0.284-10.704,0.872-16,1.76V176z M120.049,144\n\t\t\th80v16h-80V144z M120.049,176h80v21.768c-3.12,0.904-6.16,1.96-9.192,3.072c-0.752,0.272-1.504,0.536-2.256,0.8\n\t\t\tc-2.784,1.072-5.528,2.208-8.232,3.448c-1.144,0.52-2.272,1.088-3.4,1.64c-2.4,1.176-4.8,2.344-7.144,3.656\n\t\t\tc-3.2,1.787-6.328,3.688-9.384,5.704c-0.128,0.088-0.264,0.152-0.392,0.24V200c0-4.418-3.582-8-8-8h-32V176z M80.049,208h32h32v16\n\t\t\th-64V208z M80.049,240h52.944c-0.152,0.168-0.28,0.336-0.424,0.504c-1.92,2.152-3.792,4.296-5.584,6.608\n\t\t\tc-0.704,0.904-1.368,1.832-2.056,2.752c-2.136,2.84-4.184,5.736-6.112,8.736c-0.12,0.184-0.224,0.376-0.344,0.568\n\t\t\tC106.767,277.542,99.42,298.35,96.993,320H80.049V240z M104.049,428.688l-24-24V336h16c-0.002,27.58,7.975,54.571,22.968,77.72\n\t\t\tL104.049,428.688z M277.969,458.264c-12.28,3.805-25.064,5.739-37.92,5.736c-70.658-0.084-127.916-57.342-128-128\n\t\t\tc0-2.528,0.232-4.992,0.376-7.488v-0.04c0.256-4.368,0.723-8.677,1.4-12.928v-0.192c0.624-3.92,1.472-7.776,2.448-11.584\n\t\t\tc0.152-0.576,0.288-1.16,0.448-1.736c0.864-3.2,1.904-6.32,3.016-9.424c0.416-1.152,0.8-2.312,1.264-3.448\n\t\t\tc0.968-2.48,2.064-4.896,3.2-7.304c0.744-1.6,1.48-3.2,2.288-4.752c1.016-1.952,2.128-3.856,3.248-5.76\n\t\t\tc1.048-1.784,2.096-3.576,3.2-5.304c1.104-1.728,2.4-3.416,3.592-5.096c1.192-1.68,2.448-3.384,3.752-5.008\n\t\t\tc1.472-1.824,3.048-3.568,4.616-5.312c1.192-1.32,2.344-2.672,3.592-3.944c2.04-2.088,4.208-4.064,6.4-6.024\n\t\t\tc1.064-0.952,2.072-1.968,3.2-2.88c3.562-2.987,7.288-5.772,11.16-8.344c0.288-0.192,0.6-0.344,0.888-0.536\n\t\t\tc3.738-2.432,7.599-4.67,11.568-6.704c0.464-0.232,0.936-0.44,1.4-0.672c3.941-1.964,7.981-3.721,12.104-5.264l1.08-0.4\n\t\t\tc28.241-10.307,59.215-10.307,87.456,0l1.08,0.4c4.125,1.545,8.168,3.302,12.112,5.264c0.456,0.232,0.928,0.44,1.392,0.672\n\t\t\tc3.969,2.034,7.83,4.272,11.568,6.704c0.288,0.192,0.6,0.344,0.888,0.536c3.886,2.57,7.625,5.356,11.2,8.344\n\t\t\tc2.768,2.315,5.435,4.736,8,7.264c0.72,0.712,1.384,1.472,2.088,2.2c1.92,1.992,3.792,4,5.6,6.136\n\t\t\tc0.728,0.864,1.44,1.728,2.144,2.608c1.936,2.4,3.792,4.864,5.544,7.408c0.344,0.488,0.712,0.968,1.048,1.464\n\t\t\tc2.133,3.152,4.107,6.397,5.92,9.736c0.296,0.536,0.56,1.096,0.848,1.64c1.488,2.8,2.864,5.672,4.152,8.6\n\t\t\tc0.368,0.856,0.744,1.704,1.096,2.568c1.344,3.248,2.568,6.544,3.64,9.912c0.088,0.28,0.192,0.536,0.28,0.8\n\t\t\tC383.27,365.637,345.494,437.339,277.969,458.264z M400.049,404.688l-24,24l-14.968-14.968\n\t\t\tc21.086-32.427,28.04-72.05,19.256-109.72h19.712V404.688z M400.049,288h-24.216c-2.414-6.753-5.331-13.316-8.728-19.632\n\t\t\tc-0.328-0.616-0.664-1.224-1-1.832c-4.082-7.382-8.809-14.388-14.128-20.936c-0.544-0.664-1.072-1.328-1.6-1.992\n\t\t\tc-1.024-1.216-2.064-2.4-3.136-3.6h52.808V288z M400.049,224h-64v-16h64V224z M416.049,208h32v16h-32V208z M416.049,240h32v48h-32\n\t\t\tV240z M464.049,452.688l-48-48V304h32v56c0.003,1.58,0.47,3.124,1.344,4.44l14.656,21.96V452.688z" }))))); });

var ampGuitar = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, width: props.width, height: props.height, style: props.style, xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", version: "1.1", id: "Capa_1", x: "0px", y: "0px", viewBox: "0 0 193.757 193.757", xmlSpace: "preserve" },
    React__default['default'].createElement("path", { d: "M159.604,193.757h-21.885c-1.104,0-2-0.896-2-2v-8h-77.9v8c0,1.104-0.896,2-2,2H33.934c-1.104,0-2-0.896-2-2v-8H21.031  C13.294,183.757,7,177.463,7,169.726V14.03C7,6.294,13.294,0,21.031,0h151.694c7.737,0,14.031,6.294,14.031,14.03v155.695  c0,7.737-6.294,14.031-14.031,14.031h-11.122v8C161.604,192.861,160.708,193.757,159.604,193.757z M139.719,189.757h17.885v-6  h-17.885V189.757z M35.934,189.757h17.885v-6H35.934V189.757z M159.604,179.757h13.122c5.531,0,10.031-4.5,10.031-10.031V14.03  c0-5.53-4.5-10.03-10.031-10.03H21.031C15.5,4,11,8.5,11,14.03v155.695c0,5.531,4.5,10.031,10.031,10.031H159.604z M131.935,170.382  c-0.002,0-0.005,0-0.007,0H61.609c-0.004,0-0.01,0-0.014,0H30.531c-5.531,0-10.031-4.5-10.031-10.031v-14.345  c0-0.005,0-0.009,0-0.014V80.097c0-0.005,0-0.009,0-0.014V65.156c0-5.531,4.5-10.031,10.031-10.031h132.694  c5.531,0,10.031,4.5,10.031,10.031v95.194c0,5.531-4.5,10.031-10.031,10.031h-31.284  C131.939,170.382,131.937,170.382,131.935,170.382z M161.249,166.382h1.977c3.325,0,6.031-2.706,6.031-6.031v-13.304l-6.579-6.579  l-13.649,13.648l11.989,11.989C161.104,166.192,161.182,166.284,161.249,166.382z M136.763,166.382h18.875l-9.438-9.438  L136.763,166.382z M128.295,166.382h2.812l12.266-12.266l-13.648-13.648l-13.649,13.648l11.989,11.989  C128.15,166.192,128.228,166.284,128.295,166.382z M103.809,166.382h18.875l-9.438-9.438L103.809,166.382z M95.34,166.382h2.857  c0.067-0.098,0.145-0.189,0.231-0.276l11.989-11.989l-13.649-13.648L83.12,154.116l11.988,11.989  C95.195,166.192,95.272,166.284,95.34,166.382z M70.854,166.382h18.874l-9.438-9.437L70.854,166.382z M62.431,166.382h2.813  c0.067-0.098,0.145-0.189,0.231-0.276l11.988-11.989l-13.648-13.648l-13.649,13.648L62.431,166.382z M37.899,166.382h18.875  l-9.438-9.438L37.899,166.382z M24.5,146.827v13.523c0,3.325,2.706,6.031,6.031,6.031h1.757c0.067-0.098,0.145-0.189,0.231-0.276  l11.989-11.989l-13.649-13.648L24.5,146.827z M66.643,137.64l13.648,13.648l13.649-13.649L80.292,123.99L66.643,137.64z   M99.598,137.639l13.648,13.649l13.648-13.649l-13.648-13.648L99.598,137.639z M33.688,137.639l13.648,13.649l13.648-13.649  L47.337,123.99L33.688,137.639z M132.552,137.639l13.648,13.649l13.648-13.649L146.2,123.99L132.552,137.639z M165.506,137.639  l3.751,3.752v-7.503L165.506,137.639z M24.5,134.107v7.063l3.531-3.532L24.5,134.107z M50.165,121.162l13.648,13.648l13.649-13.649  l-13.648-13.648L50.165,121.162z M149.028,121.162l13.649,13.648l6.579-6.579V114.07c-0.064-0.05-0.126-0.104-0.186-0.164  l-6.394-6.394L149.028,121.162z M24.5,128.451l6.359,6.359l13.649-13.648l-13.649-13.649l-6.359,6.359V128.451z M116.074,121.162  l13.649,13.648l13.648-13.648l-13.649-13.649L116.074,121.162z M83.12,121.162l13.648,13.648l13.649-13.648l-13.649-13.649  L83.12,121.162z M132.552,104.685l13.648,13.649l13.649-13.649L146.2,91.035L132.552,104.685z M33.688,104.685l13.649,13.649  l13.648-13.649L47.337,91.035L33.688,104.685z M99.598,104.685l13.648,13.648l13.648-13.648l-13.648-13.649L99.598,104.685z   M66.643,104.685l13.648,13.648l13.649-13.648L80.292,91.035L66.643,104.685z M165.506,104.685l3.751,3.751v-7.502L165.506,104.685z   M24.5,101.153v7.063l3.531-3.531L24.5,101.153z M149.028,88.207l13.649,13.649l6.579-6.579v-14.14l-6.579-6.579L149.028,88.207z   M24.5,95.497l6.359,6.359l13.649-13.649L30.86,74.559l-6.36,6.359V95.497z M116.074,88.207l13.648,13.649l13.649-13.649  l-13.649-13.648L116.074,88.207z M50.165,88.207l13.649,13.648l13.648-13.648L63.814,74.558L50.165,88.207z M83.12,88.207  l13.648,13.648l13.649-13.648L96.769,74.558L83.12,88.207z M99.597,71.729l13.649,13.649l13.648-13.648l-12.542-12.543  c-0.021-0.021-0.041-0.041-0.061-0.063h-2.091L99.597,71.729z M132.552,71.729L146.2,85.379l13.648-13.649l-12.604-12.604h-2.089  L132.552,71.729z M33.688,71.73l13.648,13.648l13.649-13.649L48.382,59.125h-2.089L33.688,71.73z M66.643,71.729l13.649,13.648  L93.94,71.729L81.336,59.125h-2.091c-0.02,0.021-0.04,0.042-0.061,0.063L66.643,71.729z M165.506,71.729l3.751,3.752v-7.503  L165.506,71.729z M24.5,68.198v7.063l3.531-3.532L24.5,68.198z M24.915,62.957l5.944,5.944l9.777-9.776H30.531  C27.981,59.125,25.796,60.716,24.915,62.957z M119.946,59.125l9.777,9.776l9.776-9.776H119.946z M152.901,59.125l9.776,9.776  l6.101-6.101c-0.92-2.158-3.063-3.676-5.553-3.676H152.901z M86.992,59.125l9.776,9.776l9.776-9.776H86.992z M54.038,59.125  l9.776,9.776l9.776-9.776H54.038z M166.342,47.576h-16.612c-1.104,0-2-0.896-2-2v-30.96c0-1.104,0.896-2,2-2h16.612  c1.104,0,2,0.896,2,2v30.96C168.342,46.681,167.446,47.576,166.342,47.576z M151.729,43.576h12.612v-26.96h-12.612V43.576z   M132.199,47.576c-4.146,0-7.52-3.373-7.52-7.52s3.373-7.52,7.52-7.52s7.52,3.373,7.52,7.52S136.346,47.576,132.199,47.576z   M132.199,36.537c-1.94,0-3.52,1.579-3.52,3.52s1.579,3.52,3.52,3.52s3.52-1.579,3.52-3.52S134.14,36.537,132.199,36.537z   M109.335,40.014c-5.468,0-9.917-4.449-9.917-9.917s4.449-9.917,9.917-9.917s9.917,4.449,9.917,9.917S114.803,40.014,109.335,40.014  z M109.335,24.18c-3.263,0-5.917,2.654-5.917,5.917s2.654,5.917,5.917,5.917s5.917-2.654,5.917-5.917S112.598,24.18,109.335,24.18z   M83.868,40.014c-5.468,0-9.917-4.449-9.917-9.917s4.449-9.917,9.917-9.917s9.917,4.449,9.917,9.917S89.336,40.014,83.868,40.014z   M83.868,24.18c-3.263,0-5.917,2.654-5.917,5.917s2.654,5.917,5.917,5.917s5.917-2.654,5.917-5.917S87.131,24.18,83.868,24.18z   M58.401,40.014c-5.468,0-9.917-4.449-9.917-9.917s4.449-9.917,9.917-9.917s9.917,4.449,9.917,9.917S63.869,40.014,58.401,40.014z   M58.401,24.18c-3.263,0-5.917,2.654-5.917,5.917s2.654,5.917,5.917,5.917s5.917-2.654,5.917-5.917S61.664,24.18,58.401,24.18z   M32.935,37.616c-4.146,0-7.52-3.373-7.52-7.52s3.373-7.52,7.52-7.52s7.52,3.373,7.52,7.52S37.081,37.616,32.935,37.616z   M32.935,26.577c-1.94,0-3.52,1.579-3.52,3.52s1.579,3.52,3.52,3.52s3.52-1.579,3.52-3.52S34.875,26.577,32.935,26.577z   M132.199,27.655c-4.146,0-7.52-3.373-7.52-7.52s3.373-7.52,7.52-7.52s7.52,3.373,7.52,7.52S136.346,27.655,132.199,27.655z   M132.199,16.616c-1.94,0-3.52,1.579-3.52,3.52s1.579,3.52,3.52,3.52s3.52-1.579,3.52-3.52S134.14,16.616,132.199,16.616z" }))); });

var ampBass = (function (props) { return (React__default['default'].createElement("svg", { version: "1.1", id: "Capa_1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", viewBox: "0 0 463.654 463.654", className: props.className, style: props.style, height: props.height, width: props.width, xmlSpace: "preserve" },
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M167.827,127.654c-13.255,0-24,10.745-24,24s10.745,24,24,24s24-10.745,24-24S181.082,127.654,167.827,127.654z\n\t\t\t M167.827,159.654c-4.418,0-8-3.582-8-8s3.582-8,8-8s8,3.582,8,8S172.245,159.654,167.827,159.654z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M231.827,127.654c-13.255,0-24,10.745-24,24s10.745,24,24,24s24-10.745,24-24S245.082,127.654,231.827,127.654z\n\t\t\t M231.827,159.654c-4.418,0-8-3.582-8-8s3.582-8,8-8s8,3.582,8,8S236.245,159.654,231.827,159.654z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M295.827,127.654c-13.255,0-24,10.745-24,24s10.745,24,24,24s24-10.745,24-24S309.082,127.654,295.827,127.654z\n\t\t\t M295.827,159.654c-4.418,0-8-3.582-8-8s3.582-8,8-8s8,3.582,8,8S300.245,159.654,295.827,159.654z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M359.827,127.654c-13.255,0-24,10.745-24,24s10.745,24,24,24s24-10.745,24-24S373.082,127.654,359.827,127.654z\n\t\t\t M359.827,159.654c-4.418,0-8-3.582-8-8s3.582-8,8-8s8,3.582,8,8S364.245,159.654,359.827,159.654z" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "79.827", y: "143.654", width: "16", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "111.827", y: "143.654", width: "16", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "79.827", y: "223.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "159.827", y: "223.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "239.827", y: "223.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "319.827", y: "223.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "79.827", y: "255.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "159.827", y: "255.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "239.827", y: "255.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "319.827", y: "255.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "79.827", y: "287.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "159.827", y: "287.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "239.827", y: "287.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "319.827", y: "287.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "79.827", y: "319.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "159.827", y: "319.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "239.827", y: "319.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "319.827", y: "319.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "79.827", y: "351.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "159.827", y: "351.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "239.827", y: "351.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "319.827", y: "351.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "79.827", y: "383.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "159.827", y: "383.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "239.827", y: "383.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("rect", { x: "319.827", y: "383.654", width: "64", height: "16" }))),
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("g", null,
            React__default['default'].createElement("path", { d: "M424.739,63.654h-32.912v-16c0-13.255-10.745-24-24-24h-46.112l-10.536-5.264c-50.06-24.521-108.644-24.521-158.704,0\n\t\t\tl-10.536,5.264H95.827c-13.255,0-24,10.745-24,24v16H38.915c-12.744,0.018-23.07,10.344-23.088,23.088v352.912\n\t\t\tc0,13.255,10.745,24,24,24h384c13.255,0,24-10.745,24-24V86.742C447.81,73.999,437.483,63.672,424.739,63.654z M327.827,39.654h40\n\t\t\tc4.418,0,8,3.582,8,8v16h-48V39.654z M151.827,36.598l7.808-3.896c45.542-22.312,98.842-22.312,144.384,0l7.808,3.896v14.12\n\t\t\tl-0.648-0.328c-50.06-24.521-108.644-24.521-158.704,0l-0.648,0.328V36.598z M301.755,63.654H161.899\n\t\t\tC206.187,42.806,257.467,42.806,301.755,63.654z M87.827,47.654c0-4.418,3.582-8,8-8h40v24h-48V47.654z M31.827,207.654h16v176\n\t\t\th-16V207.654z M79.827,447.654h-40c-4.418,0-8-3.582-8-8v-40h16v24c0,4.418,3.582,8,8,8h24V447.654z M63.827,415.654v-208h336v208\n\t\t\th-312H63.827z M63.827,191.654v-80h336v80H63.827z M367.827,447.654h-272v-16h272V447.654z M431.827,439.654c0,4.418-3.582,8-8,8\n\t\t\th-40v-16h24c4.418,0,8-3.582,8-8v-24h16V439.654z M431.827,383.654h-16v-176h16V383.654z M431.827,191.654h-16v-88\n\t\t\tc0-4.418-3.582-8-8-8h-352c-4.418,0-8,3.582-8,8v88h-16v-104c0-4.418,3.582-8,8-8h40h344c4.418,0,8,3.582,8,8V191.654z" }))))); });

var mixer = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, enableBackground: "new 0 0 512 512", height: props.height, viewBox: "0 0 512 512", width: props.width, xmlns: "http://www.w3.org/2000/svg" },
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("path", { d: "m474.5 12.807h-92.781c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h92.781c12.406 0 22.5 10.094 22.5 22.5v74.538h-482v-74.538c0-12.406 10.094-22.5 22.5-22.5h309.219c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-309.219c-20.678 0-37.5 16.822-37.5 37.5v82.038 150.634c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-143.134h482v321.849c0 12.406-10.094 22.5-22.5 22.5h-437c-12.406 0-22.5-10.094-22.5-22.5v-143.715c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v143.715c0 20.678 16.822 37.5 37.5 37.5h437c20.678 0 37.5-16.822 37.5-37.5v-329.349-82.038c0-20.678-16.822-37.5-37.5-37.5z" }),
        React__default['default'].createElement("path", { d: "m59.733 76.325c0 17.893 14.557 32.449 32.448 32.449 17.893 0 32.449-14.557 32.449-32.449s-14.557-32.448-32.449-32.448c-17.891 0-32.448 14.557-32.448 32.448zm49.898 0c0 9.621-7.828 17.449-17.449 17.449s-17.448-7.828-17.448-17.449 7.827-17.448 17.448-17.448 17.449 7.827 17.449 17.448z" }),
        React__default['default'].createElement("path", { d: "m150.536 76.325c0 17.893 14.557 32.449 32.449 32.449s32.448-14.557 32.448-32.449-14.557-32.448-32.449-32.448c-17.891 0-32.448 14.557-32.448 32.448zm49.898 0c0 9.621-7.827 17.449-17.448 17.449h-.001c-9.621 0-17.448-7.828-17.448-17.449s7.828-17.448 17.449-17.448 17.448 7.827 17.448 17.448z" }),
        React__default['default'].createElement("path", { d: "m255.295 57.634v37.384c0 8.418 6.849 15.266 15.266 15.266h180.551c8.417 0 15.266-6.848 15.266-15.266v-37.384c0-8.418-6.849-15.266-15.266-15.266h-180.551c-8.417 0-15.266 6.848-15.266 15.266zm196.082 0v37.384c0 .146-.119.266-.266.266h-180.55c-.146 0-.266-.119-.266-.266v-37.384c0-.146.119-.266.266-.266h180.551c.146 0 .265.119.265.266z" }),
        React__default['default'].createElement("path", { d: "m92.182 166.193c-12.563 0-22.784 10.222-22.784 22.785v10.404c-13.107.743-23.544 11.639-23.544 24.929s10.437 24.186 23.544 24.929v185.82c0 12.563 10.221 22.784 22.784 22.784s22.785-10.221 22.785-22.784v-185.82c13.107-.744 23.543-11.64 23.543-24.929s-10.436-24.185-23.543-24.929v-10.404c0-12.563-10.222-22.785-22.785-22.785zm-7.785 22.786c0-4.293 3.492-7.785 7.784-7.785 4.293 0 7.785 3.492 7.785 7.785v10.36h-15.569zm15.57 246.081c0 4.292-3.492 7.784-7.785 7.784-4.292 0-7.784-3.492-7.784-7.784v-185.776h15.569zm23.543-210.748c0 5.499-4.474 9.973-9.973 9.973-9.431 0-33.295 0-42.711 0-5.499 0-9.973-4.474-9.973-9.973s4.474-9.973 9.973-9.973h36.641 6.07c5.499 0 9.973 4.474 9.973 9.973z" }),
        React__default['default'].createElement("path", { d: "m201.395 166.193c-12.563 0-22.785 10.222-22.785 22.785v98.505c-12.805 1.056-22.904 11.808-22.904 24.88s10.1 23.824 22.904 24.88v97.816c0 12.563 10.222 22.784 22.785 22.784s22.784-10.221 22.784-22.784v-97.744c13.405-.42 24.183-11.448 24.183-24.953s-10.778-24.533-24.183-24.953v-98.432c0-12.562-10.221-22.784-22.784-22.784zm-7.786 22.786c0-4.293 3.492-7.785 7.785-7.785 4.292 0 7.784 3.492 7.784 7.785v98.412h-15.569zm15.57 246.081c0 4.292-3.492 7.784-7.784 7.784-4.293 0-7.785-3.492-7.785-7.784v-97.724h15.569zm24.182-122.697c0 5.499-4.474 9.973-9.973 9.973-8.673 0-34.088 0-42.711 0-5.499 0-9.973-4.474-9.973-9.973s4.474-9.973 9.973-9.973h42.711c5.5.001 9.973 4.474 9.973 9.973z" }),
        React__default['default'].createElement("path", { d: "m310.605 166.193c-12.563 0-22.784 10.222-22.784 22.785v169.653c-13.107.744-23.543 11.64-23.543 24.929s10.436 24.185 23.543 24.929v26.57c0 12.563 10.221 22.784 22.784 22.784s22.785-10.221 22.785-22.784v-26.57c13.107-.743 23.544-11.639 23.544-24.929s-10.437-24.186-23.544-24.929v-169.652c.001-12.564-10.221-22.786-22.785-22.786zm-7.784 22.786c0-4.293 3.492-7.785 7.784-7.785 4.293 0 7.785 3.492 7.785 7.785v169.609h-15.569zm15.57 246.081c0 4.292-3.492 7.784-7.785 7.784-4.292 0-7.784-3.492-7.784-7.784v-26.526h15.569zm23.544-51.499c0 5.499-4.474 9.973-9.973 9.973-9.431 0-33.294 0-42.711 0-5.499 0-9.973-4.474-9.973-9.973s4.474-9.973 9.973-9.973h42.711c5.499 0 9.973 4.474 9.973 9.973z" }),
        React__default['default'].createElement("path", { d: "m419.818 166.193c-12.563 0-22.785 10.222-22.785 22.785v43.08c-13.107.744-23.543 11.64-23.543 24.929s10.436 24.185 23.543 24.929v153.144c0 12.563 10.222 22.784 22.785 22.784s22.784-10.221 22.784-22.784v-153.144c13.107-.743 23.544-11.639 23.544-24.929s-10.437-24.186-23.544-24.929v-43.08c.001-12.563-10.22-22.785-22.784-22.785zm-7.785 22.786c0-4.293 3.492-7.785 7.785-7.785 4.292 0 7.784 3.492 7.784 7.785v43.035h-15.569zm15.57 246.081c0 4.292-3.492 7.784-7.784 7.784-4.293 0-7.785-3.492-7.785-7.784v-153.1h15.569zm23.543-178.073c0 5.499-4.474 9.973-9.973 9.973-3.65 0-36.945 0-42.711 0-5.499 0-9.973-4.474-9.973-9.973s4.474-9.973 9.973-9.973h42.711c5.5.001 9.973 4.474 9.973 9.973z" })))); });

var microphone = (function (props) { return (React__default['default'].createElement("svg", { className: props.className, style: props.style, enableBackground: "new 0 0 511.961 511.961", height: props.height, viewBox: "0 0 511.961 511.961", width: props.width, xmlns: "http://www.w3.org/2000/svg" },
    React__default['default'].createElement("g", null,
        React__default['default'].createElement("path", { d: "m292.519 221.626c6.246-6.248 6.22-16.436 0-22.659l-9.406-9.407c-6.154-6.15-16.334-6.324-22.66 0-2.036 2.036-53.994 53.994-56.245 56.245-6.249 6.249-6.25 16.41.001 22.659l9.406 9.407c6.249 6.249 16.411 6.248 22.659 0 20.172-20.172 36.488-36.487 56.245-56.245zm-32.708 11.494c-.238.235-.521.285-.718.285-.198 0-.484-.05-.724-.289l-9.406-9.406c-.384-.385-.385-1.06-.001-1.445l22.098-22.098c.192-.192.457-.289.723-.289s.53.097.723.289l9.406 9.407c.386.385.386 1.061 0 1.446zm-34.145 34.145c-.386.385-1.06.384-1.445 0l-9.406-9.407c-.386-.385-.386-1.061 0-1.446l22.856-22.856c.225.255.442.515.686.759l9.406 9.407c.243.243.503.462.758.688z" }),
        React__default['default'].createElement("path", { d: "m185.903 285.571-8.522 8.522c-2.93 2.929-2.93 7.677-.001 10.606 1.465 1.465 3.384 2.197 5.304 2.197 1.919 0 3.839-.732 5.303-2.197l8.522-8.522c2.93-2.929 2.93-7.677.001-10.606-2.93-2.928-7.679-2.929-10.607 0z" }),
        React__default['default'].createElement("path", { d: "m43.995 495.393c18.612 18.612 48.986 18.704 67.71.203l91.886-90.788c12.829-12.675 33.638-12.61 46.388.14 12.914 12.913 12.853 33.831-.14 46.668l-48.085 47.51c-2.946 2.911-2.975 7.66-.063 10.606 2.91 2.946 7.659 2.976 10.606.063l48.085-47.51c18.916-18.691 19.004-49.142.204-67.944-18.566-18.566-48.861-18.656-67.538-.203l-91.886 90.788c-12.874 12.722-33.761 12.659-46.561-.14-12.906-12.908-12.906-33.794.001-46.701l27.696-27.697c7.569 6.829 19.088 6.477 26.225-.658l19.477-19.478c9.994 5.633 22.665 4.423 31.446-3.503l86.819-78.386c3.074-2.776 3.316-7.519.54-10.593-2.775-3.075-7.519-3.315-10.593-.541l-86.819 78.386c-4.783 4.32-12.101 4.134-16.66-.425l-.134-.134c-.001-.002-.003-.003-.004-.005l-25.565-25.566c-.003-.003-.007-.006-.01-.009l-.129-.129c-4.558-4.558-4.745-11.876-.426-16.661l161.136-178.472c.441.532 59.698 59.789 60.23 60.234.013.01.023.023.036.033l-65.641 59.264c-3.074 2.776-3.316 7.519-.54 10.593 2.776 3.075 7.519 3.315 10.593.541l72.006-65.011c5.795-.324 11.188-2.722 15.306-6.839l9.372-9.372c3.186 1.236 6.602 1.894 10.119 1.902h.236c27.014 0 52.515-10.388 71.828-29.264 35.023-34.231 40.959-88.852 14.112-129.877-2.269-3.466-6.917-4.438-10.382-2.169-3.466 2.268-4.438 6.917-2.169 10.383 22.933 35.045 17.867 81.701-12.046 110.936-16.495 16.122-38.271 24.992-61.345 24.992-.066 0-.136 0-.202 0-3.588-.008-6.854-1.451-9.246-3.844l-74.501-74.501c-2.387-2.384-3.837-5.648-3.845-9.243-.054-23.527 9.078-45.646 25.714-62.281 30.768-30.768 78.819-33.924 113.132-9.322 3.364 2.414 8.052 1.642 10.466-1.725 2.413-3.367 1.641-8.052-1.726-10.465-40.311-28.905-96.544-25.031-132.48 10.903-19.477 19.478-30.169 45.375-30.106 72.922.008 3.516.666 6.93 1.902 10.114l-9.373 9.373c-4.244 4.245-6.501 9.72-6.823 15.289l-166.898 184.854c-7.98 8.84-9.087 21.538-3.503 31.446l-19.478 19.477c-7.197 7.197-7.401 18.752-.657 26.224l-27.697 27.697c-18.724 18.725-18.724 49.191 0 67.915zm235.664-362.295 7.689-7.69 69.324 69.324-7.69 7.69c-3.279 3.28-8.673 3.331-12.014.081-.029-.028-.061-.052-.089-.081l-57.22-57.22c-.01-.01-.019-.021-.029-.032-3.293-3.329-3.298-8.746.029-12.072zm-196.702 251.066 18.768-18.768 14.959 14.959-18.768 18.768c-1.582 1.582-4.155 1.582-5.739 0-3.434-3.434-5.791-5.792-9.22-9.22-1.584-1.582-1.584-4.156 0-5.739z" })))); });

var dashboard = (function (props) { return (React__default['default'].createElement("svg", { style: props.style, className: props.className, height: props.height, viewBox: "0 0 512 512", width: props.width, xmlns: "http://www.w3.org/2000/svg" },
    React__default['default'].createElement("path", { d: "m197.332031 170.667969h-160c-20.585937 0-37.332031-16.746094-37.332031-37.335938v-96c0-20.585937 16.746094-37.332031 37.332031-37.332031h160c20.589844 0 37.335938 16.746094 37.335938 37.332031v96c0 20.589844-16.746094 37.335938-37.335938 37.335938zm-160-138.667969c-2.941406 0-5.332031 2.390625-5.332031 5.332031v96c0 2.945313 2.390625 5.335938 5.332031 5.335938h160c2.945313 0 5.335938-2.390625 5.335938-5.335938v-96c0-2.941406-2.390625-5.332031-5.335938-5.332031zm0 0" }),
    React__default['default'].createElement("path", { d: "m197.332031 512h-160c-20.585937 0-37.332031-16.746094-37.332031-37.332031v-224c0-20.589844 16.746094-37.335938 37.332031-37.335938h160c20.589844 0 37.335938 16.746094 37.335938 37.335938v224c0 20.585937-16.746094 37.332031-37.335938 37.332031zm-160-266.667969c-2.941406 0-5.332031 2.390625-5.332031 5.335938v224c0 2.941406 2.390625 5.332031 5.332031 5.332031h160c2.945313 0 5.335938-2.390625 5.335938-5.332031v-224c0-2.945313-2.390625-5.335938-5.335938-5.335938zm0 0" }),
    React__default['default'].createElement("path", { d: "m474.667969 512h-160c-20.589844 0-37.335938-16.746094-37.335938-37.332031v-96c0-20.589844 16.746094-37.335938 37.335938-37.335938h160c20.585937 0 37.332031 16.746094 37.332031 37.335938v96c0 20.585937-16.746094 37.332031-37.332031 37.332031zm-160-138.667969c-2.945313 0-5.335938 2.390625-5.335938 5.335938v96c0 2.941406 2.390625 5.332031 5.335938 5.332031h160c2.941406 0 5.332031-2.390625 5.332031-5.332031v-96c0-2.945313-2.390625-5.335938-5.332031-5.335938zm0 0" }),
    React__default['default'].createElement("path", { d: "m474.667969 298.667969h-160c-20.589844 0-37.335938-16.746094-37.335938-37.335938v-224c0-20.585937 16.746094-37.332031 37.335938-37.332031h160c20.585937 0 37.332031 16.746094 37.332031 37.332031v224c0 20.589844-16.746094 37.335938-37.332031 37.335938zm-160-266.667969c-2.945313 0-5.335938 2.390625-5.335938 5.332031v224c0 2.945313 2.390625 5.335938 5.335938 5.335938h160c2.941406 0 5.332031-2.390625 5.332031-5.335938v-224c0-2.941406-2.390625-5.332031-5.332031-5.332031zm0 0" }))); });

var icons = {
    alarm: alarm,
    cart: cart,
    menu: menu,
    more_vert: more_vert,
    size: size,
    favorite: favorite,
    share: share,
    arrow: arrowBottom,
    uncheck: uncheck,
    check: check,
    radio: radio,
    radioCircle: radioCircle,
    bold: bold,
    plus: plus,
    phone: phone,
    camera: camera,
    setting: setting,
    dashboard: dashboard,
    attachment: attachment,
    close: close,
    pencil: pencil,
    grid: grid,
    send: send,
    trash: trash,
    tick: tick,
    user: user,
    calendar: calendar,
    eye: eye,
    subject: subject,
    file: file,
    chat: chat,
    arrowBottom: arrowBottom,
    drum: drum,
    microphone: microphone,
    ampGuitar: ampGuitar,
    ampBass: ampBass,
    mixer: mixer,
};
function IconComponent(props) {
    if (!(props.icon in icons))
        return null;
    var Component = icons[props.icon];
    var bm = new BEM("Icon-component", {});
    bm.Append(props.className);
    return (React.createElement(Component, { className: bm.toString(), style: props.style, height: props.height || 20, width: props.width || 20, src: icons[props.icon], alt: props.title, title: props.title }));
}

___$insertStyle(".Container-component {\n  width: 100%;\n  display: block;\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 16px;\n  padding-right: 16px;\n}\n@media (min-width: 600px) {\n  .Container-component .MuiContainer-root {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n}\n.Container-component--disable-gutters {\n  padding-left: 0;\n  padding-right: 0;\n}\n@media (min-width: 600px) {\n  .Container-component--fixed {\n    max-width: 600px;\n  }\n}\n@media (min-width: 960px) {\n  .Container-component--fixed {\n    max-width: 960px;\n  }\n}\n@media (min-width: 1280px) {\n  .Container-component--fixed {\n    max-width: 1280px;\n  }\n}\n@media (min-width: 1920px) {\n  .Container-component--fixed {\n    max-width: 1920px;\n  }\n}\n@media (min-width: 0px) {\n  .Container-component--maxWidth-xs {\n    max-width: 444px;\n  }\n}\n@media (min-width: 600px) {\n  .Container-component--maxWidth-sm {\n    max-width: 600px;\n  }\n}\n@media (min-width: 960px) {\n  .Container-component--maxWidth-md {\n    max-width: 960px;\n  }\n}\n@media (min-width: 1280px) {\n  .Container-component--maxWidth-lg {\n    max-width: 1280px;\n  }\n}\n@media (min-width: 1920px) {\n  .Container-component--maxWidth-xl {\n    max-width: 1920px;\n  }\n}");

function ContainerComponent(props) {
    var bm = new BEM("Container-component", {
        "disable-gutters": props.disableGutters,
        fixed: props.fixed,
        maxWidth: props.maxWidth,
    });
    return (React.createElement("div", { className: bm.toString() }, props.children));
}

___$insertStyle(".Boxx-component {\n  margin: auto;\n  display: flex;\n  outline: 0;\n  position: relative;\n  justify-content: center;\n  padding: 24px;\n  background-color: #333;\n}\n@media (min-width: 600px) {\n  .Boxx-component {\n    border-radius: 4px;\n  }\n}");

function BoxxComponent(props) {
    var bm = new BEM("Boxx-component", {});
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Paper-component {\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n}\n.Paper-component--rounded {\n  border-radius: 4px;\n}\n.Paper-component--outlined {\n  border: 1px solid rgba(255, 255, 255, 0.12);\n}\n.Paper-component--elevation {\n  box-shadow: none;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}");

function PaperComponent(props) {
    var _a;
    var bm = new BEM("Paper-component", (_a = {
            rounded: !props.square,
            elevation: (props.elevation || 0).toString()
        },
        _a[props.variant] = !!props.variant,
        _a));
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".Grid-component--zeroMinWidth {\n  min-width: 0;\n}\n.Grid-component--direction-column {\n  flex-direction: column;\n}\n.Grid-component--direction-column-reverse {\n  flex-direction: column-reverse;\n}\n.Grid-component--direction-row-reverse {\n  flex-direction: row-reverse;\n}\n.Grid-component--wrap-nowrap {\n  flex-wrap: nowrap;\n}\n.Grid-component--wrap-wrap-reverse {\n  flex-wrap: wrap-reverse;\n}\n.Grid-component--align-items-center {\n  align-items: center;\n}\n.Grid-component--align-items-flex-start {\n  align-items: flex-start;\n}\n.Grid-component--align-items-flex-end {\n  align-items: flex-end;\n}\n.Grid-component--align-items-baseline {\n  align-items: baseline;\n}\n.Grid-component--align-content-center {\n  align-content: center;\n}\n.Grid-component--align-content-flex-start {\n  align-content: flex-start;\n}\n.Grid-component--align-content-flex-end {\n  align-content: flex-end;\n}\n.Grid-component--align-content-space-between {\n  align-content: space-between;\n}\n.Grid-component--align-content-space-around {\n  align-content: space-around;\n}\n.Grid-component--justify-center {\n  justify-content: center;\n}\n.Grid-component--justify-flex-end {\n  justify-content: flex-end;\n}\n.Grid-component--justify-space-between {\n  justify-content: space-between;\n}\n.Grid-component--justify-space-around {\n  justify-content: space-around;\n}\n.Grid-component--justify-space-evenly {\n  justify-content: space-evenly;\n}\n.Grid-component--spacing-1 {\n  width: calc(100% + 8px);\n  margin: -4px;\n}\n.Grid-component--spacing-1 > .Grid-item {\n  padding: 4px;\n}\n.Grid-component--spacing-2 {\n  width: calc(100% + 16px);\n  margin: -8px;\n}\n.Grid-component--spacing-2 > .Grid-item {\n  padding: 8px;\n}\n.Grid-component--spacing-3 {\n  width: calc(100% + 24px);\n  margin: -12px;\n}\n.Grid-component--spacing-3 > .Grid-item {\n  padding: 12px;\n}\n.Grid-component--spacing-4 {\n  width: calc(100% + 32px);\n  margin: -16px;\n}\n.Grid-component--spacing-4 > .Grid-item {\n  padding: 16px;\n}\n.Grid-component--spacing-5 {\n  width: calc(100% + 40px);\n  margin: -20px;\n}\n.Grid-component--spacing-5 > .Grid-item {\n  padding: 20px;\n}\n.Grid-component--spacing-6 {\n  width: calc(100% + 48px);\n  margin: -24px;\n}\n.Grid-component--spacing-6 > .Grid-item {\n  padding: 24px;\n}\n.Grid-component--spacing-7 {\n  width: calc(100% + 56px);\n  margin: -28px;\n}\n.Grid-component--spacing-7 > .Grid-item {\n  padding: 28px;\n}\n.Grid-component--spacing-8 {\n  width: calc(100% + 64px);\n  margin: -32px;\n}\n.Grid-component--spacing-8 > .Grid-item {\n  padding: 32px;\n}\n.Grid-component--spacing-9 {\n  width: calc(100% + 72px);\n  margin: -36px;\n}\n.Grid-component--spacing-9 > .Grid-item {\n  padding: 36px;\n}\n.Grid-component--spacing-10 {\n  width: calc(100% + 80px);\n  margin: -40px;\n}\n.Grid-component--spacing-10 > .Grid-item {\n  padding: 40px;\n}\n.Grid-component--xs-auto {\n  flex-grow: 0;\n  max-width: none;\n  flex-basis: auto;\n}\n.Grid-component--xs-true {\n  flex-grow: 1;\n  max-width: 100%;\n  flex-basis: 0;\n}\n.Grid-component--xs-1 {\n  flex-grow: 0;\n  max-width: 8.333333%;\n  flex-basis: 8.333333%;\n}\n.Grid-component--xs-2 {\n  flex-grow: 0;\n  max-width: 16.666667%;\n  flex-basis: 16.666667%;\n}\n.Grid-component--xs-3 {\n  flex-grow: 0;\n  max-width: 25%;\n  flex-basis: 25%;\n}\n.Grid-component--xs-4 {\n  flex-grow: 0;\n  max-width: 33.333333%;\n  flex-basis: 33.333333%;\n}\n.Grid-component--xs-5 {\n  flex-grow: 0;\n  max-width: 41.666667%;\n  flex-basis: 41.666667%;\n}\n.Grid-component--xs-6 {\n  flex-grow: 0;\n  max-width: 50%;\n  flex-basis: 50%;\n}\n.Grid-component--xs-7 {\n  flex-grow: 0;\n  max-width: 58.333333%;\n  flex-basis: 58.333333%;\n}\n.Grid-component--xs-8 {\n  flex-grow: 0;\n  max-width: 66.666667%;\n  flex-basis: 66.666667%;\n}\n.Grid-component--xs-9 {\n  flex-grow: 0;\n  max-width: 75%;\n  flex-basis: 75%;\n}\n.Grid-component--xs-10 {\n  flex-grow: 0;\n  max-width: 83.333333%;\n  flex-basis: 83.333333%;\n}\n.Grid-component--xs-11 {\n  flex-grow: 0;\n  max-width: 91.666667%;\n  flex-basis: 91.666667%;\n}\n.Grid-component--xs-12 {\n  flex-grow: 0;\n  max-width: 100%;\n  flex-basis: 100%;\n}\n@media (min-width: 600px) {\n  .Grid-component--sm-auto {\n    flex-grow: 0;\n    max-width: none;\n    flex-basis: auto;\n  }\n  .Grid-component--sm-true {\n    flex-grow: 1;\n    max-width: 100%;\n    flex-basis: 0;\n  }\n  .Grid-component--sm-1 {\n    flex-grow: 0;\n    max-width: 8.333333%;\n    flex-basis: 8.333333%;\n  }\n  .Grid-component--sm-2 {\n    flex-grow: 0;\n    max-width: 16.666667%;\n    flex-basis: 16.666667%;\n  }\n  .Grid-component--sm-3 {\n    flex-grow: 0;\n    max-width: 25%;\n    flex-basis: 25%;\n  }\n  .Grid-component--sm-4 {\n    flex-grow: 0;\n    max-width: 33.333333%;\n    flex-basis: 33.333333%;\n  }\n  .Grid-component--sm-5 {\n    flex-grow: 0;\n    max-width: 41.666667%;\n    flex-basis: 41.666667%;\n  }\n  .Grid-component--sm-6 {\n    flex-grow: 0;\n    max-width: 50%;\n    flex-basis: 50%;\n  }\n  .Grid-component--sm-7 {\n    flex-grow: 0;\n    max-width: 58.333333%;\n    flex-basis: 58.333333%;\n  }\n  .Grid-component--sm-8 {\n    flex-grow: 0;\n    max-width: 66.666667%;\n    flex-basis: 66.666667%;\n  }\n  .Grid-component--sm-9 {\n    flex-grow: 0;\n    max-width: 75%;\n    flex-basis: 75%;\n  }\n  .Grid-component--sm-10 {\n    flex-grow: 0;\n    max-width: 83.333333%;\n    flex-basis: 83.333333%;\n  }\n  .Grid-component--sm-11 {\n    flex-grow: 0;\n    max-width: 91.666667%;\n    flex-basis: 91.666667%;\n  }\n  .Grid-component--sm-12 {\n    flex-grow: 0;\n    max-width: 100%;\n    flex-basis: 100%;\n  }\n}\n@media (min-width: 960px) {\n  .Grid-component--md-auto {\n    flex-grow: 0;\n    max-width: none;\n    flex-basis: auto;\n  }\n  .Grid-component--md-true {\n    flex-grow: 1;\n    max-width: 100%;\n    flex-basis: 0;\n  }\n  .Grid-component--md-1 {\n    flex-grow: 0;\n    max-width: 8.333333%;\n    flex-basis: 8.333333%;\n  }\n  .Grid-component--md-2 {\n    flex-grow: 0;\n    max-width: 16.666667%;\n    flex-basis: 16.666667%;\n  }\n  .Grid-component--md-3 {\n    flex-grow: 0;\n    max-width: 25%;\n    flex-basis: 25%;\n  }\n  .Grid-component--md-4 {\n    flex-grow: 0;\n    max-width: 33.333333%;\n    flex-basis: 33.333333%;\n  }\n  .Grid-component--md-5 {\n    flex-grow: 0;\n    max-width: 41.666667%;\n    flex-basis: 41.666667%;\n  }\n  .Grid-component--md-6 {\n    flex-grow: 0;\n    max-width: 50%;\n    flex-basis: 50%;\n  }\n  .Grid-component--md-7 {\n    flex-grow: 0;\n    max-width: 58.333333%;\n    flex-basis: 58.333333%;\n  }\n  .Grid-component--md-8 {\n    flex-grow: 0;\n    max-width: 66.666667%;\n    flex-basis: 66.666667%;\n  }\n  .Grid-component--md-9 {\n    flex-grow: 0;\n    max-width: 75%;\n    flex-basis: 75%;\n  }\n  .Grid-component--md-10 {\n    flex-grow: 0;\n    max-width: 83.333333%;\n    flex-basis: 83.333333%;\n  }\n  .Grid-component--md-11 {\n    flex-grow: 0;\n    max-width: 91.666667%;\n    flex-basis: 91.666667%;\n  }\n  .Grid-component--md-12 {\n    flex-grow: 0;\n    max-width: 100%;\n    flex-basis: 100%;\n  }\n}\n@media (min-width: 1280px) {\n  .Grid-component--lg-auto {\n    flex-grow: 0;\n    max-width: none;\n    flex-basis: auto;\n  }\n  .Grid-component--lg-true {\n    flex-grow: 1;\n    max-width: 100%;\n    flex-basis: 0;\n  }\n  .Grid-component--lg-1 {\n    flex-grow: 0;\n    max-width: 8.333333%;\n    flex-basis: 8.333333%;\n  }\n  .Grid-component--lg-2 {\n    flex-grow: 0;\n    max-width: 16.666667%;\n    flex-basis: 16.666667%;\n  }\n  .Grid-component--lg-3 {\n    flex-grow: 0;\n    max-width: 25%;\n    flex-basis: 25%;\n  }\n  .Grid-component--lg-4 {\n    flex-grow: 0;\n    max-width: 33.333333%;\n    flex-basis: 33.333333%;\n  }\n  .Grid-component--lg-5 {\n    flex-grow: 0;\n    max-width: 41.666667%;\n    flex-basis: 41.666667%;\n  }\n  .Grid-component--lg-6 {\n    flex-grow: 0;\n    max-width: 50%;\n    flex-basis: 50%;\n  }\n  .Grid-component--lg-7 {\n    flex-grow: 0;\n    max-width: 58.333333%;\n    flex-basis: 58.333333%;\n  }\n  .Grid-component--lg-8 {\n    flex-grow: 0;\n    max-width: 66.666667%;\n    flex-basis: 66.666667%;\n  }\n  .Grid-component--lg-9 {\n    flex-grow: 0;\n    max-width: 75%;\n    flex-basis: 75%;\n  }\n  .Grid-component--lg-10 {\n    flex-grow: 0;\n    max-width: 83.333333%;\n    flex-basis: 83.333333%;\n  }\n  .Grid-component--lg-11 {\n    flex-grow: 0;\n    max-width: 91.666667%;\n    flex-basis: 91.666667%;\n  }\n  .Grid-component--lg-12 {\n    flex-grow: 0;\n    max-width: 100%;\n    flex-basis: 100%;\n  }\n}\n@media (min-width: 1920px) {\n  .Grid-component--xl-auto {\n    flex-grow: 0;\n    max-width: none;\n    flex-basis: auto;\n  }\n  .Grid-component--xl-true {\n    flex-grow: 1;\n    max-width: 100%;\n    flex-basis: 0;\n  }\n  .Grid-component--xl-1 {\n    flex-grow: 0;\n    max-width: 8.333333%;\n    flex-basis: 8.333333%;\n  }\n  .Grid-component--xl-2 {\n    flex-grow: 0;\n    max-width: 16.666667%;\n    flex-basis: 16.666667%;\n  }\n  .Grid-component--xl-3 {\n    flex-grow: 0;\n    max-width: 25%;\n    flex-basis: 25%;\n  }\n  .Grid-component--xl-4 {\n    flex-grow: 0;\n    max-width: 33.333333%;\n    flex-basis: 33.333333%;\n  }\n  .Grid-component--xl-5 {\n    flex-grow: 0;\n    max-width: 41.666667%;\n    flex-basis: 41.666667%;\n  }\n  .Grid-component--xl-6 {\n    flex-grow: 0;\n    max-width: 50%;\n    flex-basis: 50%;\n  }\n  .Grid-component--xl-7 {\n    flex-grow: 0;\n    max-width: 58.333333%;\n    flex-basis: 58.333333%;\n  }\n  .Grid-component--xl-8 {\n    flex-grow: 0;\n    max-width: 66.666667%;\n    flex-basis: 66.666667%;\n  }\n  .Grid-component--xl-9 {\n    flex-grow: 0;\n    max-width: 75%;\n    flex-basis: 75%;\n  }\n  .Grid-component--xl-10 {\n    flex-grow: 0;\n    max-width: 83.333333%;\n    flex-basis: 83.333333%;\n  }\n  .Grid-component--xl-11 {\n    flex-grow: 0;\n    max-width: 91.666667%;\n    flex-basis: 91.666667%;\n  }\n  .Grid-component--xl-12 {\n    flex-grow: 0;\n    max-width: 100%;\n    flex-basis: 100%;\n  }\n}\n\n.Grid-container {\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n}\n\n.Grid-item {\n  margin: 0;\n  box-sizing: border-box;\n}");

function GridComponent(props) {
    var bm = new BEM("Grid-component", {
        direction: props.direction,
        spacing: (props.spacing || 0).toString(),
        xs: props.xs ? props.xs.toString() : false,
        sm: props.sm ? props.sm.toString() : false,
        md: props.md ? props.md.toString() : false,
        lg: props.lg ? props.lg.toString() : false,
        xl: props.xl ? props.xl.toString() : false,
        justify: props.justify,
        'align-content': props.alignContent,
        'align-items': props.alignItems,
        'zeroMinWidth': props.zeroMinWidth,
        wrap: props.wrap,
    });
    var bmContainer = new BEM("Grid-container", {});
    var bmItem = new BEM("Grid-item", {});
    bm.Append(props.className);
    var classNames = [bm.toString()];
    if (props.container) {
        classNames.push(bmContainer.toString());
    }
    if (props.item) {
        classNames.push(bmItem.toString());
    }
    return (React.createElement("div", { className: classNames.join(" ") }, props.children));
}

___$insertStyle(".Typography-component {\n  margin: 0;\n}\n.Typography-component--body2 {\n  font-size: 0.875rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0.01071em;\n}\n.Typography-component--body1 {\n  font-size: 1rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0.00938em;\n}\n.Typography-component--caption {\n  font-size: 0.75rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0.03333em;\n}\n.Typography-component--button {\n  font-size: 0.875rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 500;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n}\n.Typography-component--h1 {\n  font-size: 6rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 300;\n  letter-spacing: -0.01562em;\n}\n.Typography-component--h2 {\n  font-size: 3.75rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 300;\n  letter-spacing: -0.00833em;\n}\n.Typography-component--h3 {\n  font-size: 3rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0em;\n}\n.Typography-component--h4 {\n  font-size: 2.125rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0.00735em;\n}\n.Typography-component--h5 {\n  font-size: 1.5rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0em;\n}\n.Typography-component--h6 {\n  font-size: 1.25rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 500;\n  letter-spacing: 0.0075em;\n}\n.Typography-component--subtitle1 {\n  font-size: 1rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0.00938em;\n}\n.Typography-component--subtitle2 {\n  font-size: 0.875rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 500;\n  letter-spacing: 0.00714em;\n}\n.Typography-component--overline {\n  font-size: 0.75rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  letter-spacing: 0.08333em;\n  text-transform: uppercase;\n}\n.Typography-component--sr-only {\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n}\n.Typography-component--align-left {\n  text-align: left;\n}\n.Typography-component--align-center {\n  text-align: center;\n}\n.Typography-component--align-right {\n  text-align: right;\n}\n.Typography-component--align-justify {\n  text-align: justify;\n}\n.Typography-component--no-wrap {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n.Typography-component--gutter-bottom {\n  margin-bottom: 0.35em;\n}\n.Typography-component--paragraph {\n  margin-bottom: 16px;\n}\n.Typography-component--color-inherit {\n  color: inherit;\n}\n.Typography-component--color-primary {\n  color: #90caf9;\n}\n.Typography-component--color-secondary {\n  color: #f48fb1;\n}\n.Typography-component--color-text-primary {\n  color: #fff;\n}\n.Typography-component--color-text-secondary {\n  color: rgba(0, 0, 0, 0.7);\n}\n.Typography-component--color-error {\n  color: #f44336;\n}\n.Typography-component--display-inline {\n  display: inline;\n}\n.Typography-component--display-block {\n  display: block;\n}\n.Typography-component--color-white {\n  color: white;\n}\n.Typography-component--color-gray {\n  color: gray;\n}");

function TypographyComponent(props) {
    var _a;
    var mapping = {
        h1: 'h1',
        h2: 'h2',
        h3: 'h3',
        h4: 'h4',
        h5: 'h5',
        h6: 'h6',
        subtitle1: 'h6',
        subtitle2: 'h6',
        body1: 'p',
        body2: 'p',
        div: 'div',
        a: 'a',
        span: 'span'
    };
    var bm = new BEM("Typography-component", (_a = {
            'gutter-bottom': props.gutterBottom,
            'no-wrap': props.noWrap,
            'color': props.color,
            display: props.display,
            align: props.align
        },
        _a[props.variant || "div"] = !!props.variant,
        _a));
    var Component = props.component || props.variant || "div";
    Component = mapping[Component] || "div";
    bm.Append(props.className);
    return (React.createElement(Component, { onClick: props.onClick, style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".Avatar-component {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  overflow: hidden;\n  position: relative;\n  font-size: 1.25rem;\n  align-items: center;\n  flex-shrink: 0;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  user-select: none;\n  border-radius: 50%;\n  justify-content: center;\n  color: #121212;\n  background-color: #757575;\n}\n.Avatar-component img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n.Avatar-component__status {\n  bottom: 0;\n  right: -3px;\n  position: absolute;\n}\n.Avatar-component--status {\n  overflow: initial;\n}\n.Avatar-component--mini {\n  width: 24px;\n  height: 24px;\n  font-size: 10px;\n}\n.Avatar-component--big {\n  cursor: pointer;\n  height: 80px;\n  position: relative;\n  width: 80px;\n}\n\n.Avatar-user-component {\n  display: flex;\n  align-items: center;\n}\n.Avatar-user-component__name {\n  margin-left: 10px;\n  color: white;\n}");

function useId(idOverride) {
    var _a = React.useState(idOverride), defaultId = _a[0], setDefaultId = _a[1];
    var id = idOverride || defaultId;
    React.useEffect(function () {
        if (defaultId == null) {
            // Fallback to this default id when possible.
            // Use the random value for client-side rendering only.
            // We can't use it server-side.
            setDefaultId("ui-" + Math.round(Math.random() * 1e5));
        }
    }, [defaultId]);
    return id;
}

function createChainedFunction() {
    var funcs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        funcs[_i] = arguments[_i];
    }
    return funcs.reduce(function (acc, func) {
        if (func == null) {
            return acc;
        }
        if (process.env.NODE_ENV !== 'production') {
            if (typeof func !== 'function') {
                console.error('UI-Component: Invalid Argument Type, must only provide functions, undefined, or null.');
            }
        }
        return function chainedFunction() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            acc.apply(this, args);
            func.apply(this, args);
        };
    }, function () {
    });
}

exports.doc = typeof document === "object" ? document : null;
var isUndef = function (v) {
    return typeof v === "undefined";
};
var isFun = function (v) {
    return typeof v === "function";
};
var isNum = function (v) {
    return typeof v === "number";
};
var _dbgSetDocument = function (v) {
    if (v === null || v instanceof HTMLDocument) {
        return (exports.doc = v);
    }
    throw new TypeError("override value expected to be an instance of HTMLDocument or null, got " + typeof v);
};
/**
 * @description Return current document node
 */
var _dbgGetDocument = function () { return exports.doc; };

var renderDivWithRenderer = function (props, elementRef) {
    if (isFun(props.renderer)) {
        props.elementRef = elementRef;
        var renderer = props.renderer;
        delete props.renderer;
        return renderer(props);
    }
    delete props.elementRef;
    return React.createElement("div", __assign({}, props, { ref: elementRef }));
};

var getInnerSize = function (el, dimension, padding1, padding2) {
    var styles = getComputedStyle(el);
    if (styles.boxSizing === "border-box") {
        return Math.max(0, (parseFloat(styles[dimension]) || 0) -
            (parseFloat(styles[padding1]) || 0) -
            (parseFloat(styles[padding2]) || 0));
    }
    return parseFloat(styles[dimension]) || 0;
};
/**
 * @description Return element's height without padding
 */
var getInnerHeight = function (el) {
    return getInnerSize(el, "height", "paddingTop", "paddingBottom");
};
/**
 * @description Return element's width without padding
 */
var getInnerWidth = function (el) {
    return getInnerSize(el, "width", "paddingLeft", "paddingRight");
};

/**
 * @description Return unique UUID v4
 */
var uuid = function () {
    var uuid = "";
    for (var i = 0; i < 32; i++) {
        if (i === 8 || i === 20) {
            uuid += "-" + ((Math.random() * 16) | 0).toString(16);
        }
        else if (i === 12) {
            uuid += "-4";
        }
        else if (i === 16) {
            uuid += "-" + ((Math.random() * 16) | (0 & 3) | 8).toString(16);
        }
        else {
            uuid += ((Math.random() * 16) | 0).toString(16);
        }
    }
    return uuid;
};

/**
 * @description Calculate thumb size for given viewport and track parameters
 *
 * @param {number} contentSize - Scrollable content size
 * @param {number} viewportSize - Viewport size
 * @param {number} trackSize - Track size thumb can move
 * @param {number} minimalSize - Minimal thumb's size
 * @param {number} maximalSize - Maximal thumb's size
 */
var calcThumbSize = function (contentSize, viewportSize, trackSize, minimalSize, maximalSize) {
    if (viewportSize >= contentSize) {
        return 0;
    }
    var thumbSize = (viewportSize / contentSize) * trackSize;
    isNum(maximalSize) && (thumbSize = Math.min(maximalSize, thumbSize));
    isNum(minimalSize) && (thumbSize = Math.max(minimalSize, thumbSize));
    return thumbSize;
};
/**
 * @description Calculate thumb offset for given viewport, track and thumb parameters
 *
 * @param {number} contentSize - Scrollable content size
 * @param {number} viewportSize - Viewport size
 * @param {number} trackSize - Track size thumb can move
 * @param {number} thumbSize - Thumb size
 * @param {number} scroll - Scroll value to represent
 */
var calcThumbOffset = function (contentSize, viewportSize, trackSize, thumbSize, scroll) {
    if (!scroll || !thumbSize || viewportSize >= contentSize) {
        return 0;
    }
    return ((trackSize - thumbSize) * scroll) / (contentSize - viewportSize);
};
/**
 * @description Calculate scroll for given viewport, track and thumb parameters
 *
 * @param {number} contentSize - Scrollable content size
 * @param {number} viewportSize - Viewport size
 * @param {number} trackSize - Track size thumb can move
 * @param {number} thumbSize - Thumb size
 * @param {number} thumbOffset - Thumb's offset representing the scroll
 */
var calcScrollForThumbOffset = function (contentSize, viewportSize, trackSize, thumbSize, thumbOffset) {
    if (!thumbOffset || !thumbSize || viewportSize >= contentSize) {
        return 0;
    }
    return (thumbOffset * (contentSize - viewportSize)) / (trackSize - thumbSize);
};

/**
 * @description Returns scrollbar width specific for current environment. Can return undefined if DOM is not ready yet.
 */
var getScrollbarWidth = function (force) {
    if (force === void 0) { force = false; }
    if (!exports.doc) {
        return (getScrollbarWidth._cache = 0);
    }
    if (!force && !isUndef(getScrollbarWidth._cache)) {
        return getScrollbarWidth._cache;
    }
    var el = exports.doc.createElement("div");
    el.setAttribute("style", "position:absolute;width:100px;height:100px;top:-999px;left:-999px;overflow:scroll;");
    exports.doc.body.appendChild(el);
    /* istanbul ignore next */
    if (el.clientWidth === 0) {
        // Do not even cache this value because there is no calculations. Issue https://github.com/xobotyi/react-scrollbars-custom/issues/123
        exports.doc.body.removeChild(el);
        return;
    }
    getScrollbarWidth._cache = 100 - el.clientWidth;
    exports.doc.body.removeChild(el);
    return getScrollbarWidth._cache;
};
/**
 * @description Detect need of horizontal scroll reverse while RTL.
 */
var shouldReverseRtlScroll = function (force) {
    if (force === void 0) { force = false; }
    if (!force && !isUndef(shouldReverseRtlScroll._cache)) {
        return shouldReverseRtlScroll._cache;
    }
    if (!exports.doc) {
        return (shouldReverseRtlScroll._cache = false);
    }
    var el = exports.doc.createElement("div");
    var child = exports.doc.createElement("div");
    el.appendChild(child);
    el.setAttribute("style", "position:absolute;width:100px;height:100px;top:-999px;left:-999px;overflow:scroll;direction:rtl");
    child.setAttribute("style", "width:1000px;height:1000px");
    exports.doc.body.appendChild(el);
    el.scrollLeft = -50;
    shouldReverseRtlScroll._cache = el.scrollLeft === -50;
    exports.doc.body.removeChild(el);
    return shouldReverseRtlScroll._cache;
};

function alphabet() {
    var arr = ['a', 'z'];
    var res = [];
    for (var i = arr[0].charCodeAt(0); i <= arr[1].charCodeAt(0); i++) {
        res.push(String.fromCharCode(i));
    }
    return res;
}

function rand(min, max) {
    return Math.floor(Math.random() * (max - min)) + min;
}
function randIncluded(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function AvatarComponent(props) {
    var bm = new BEM("Avatar-component", {
        mini: props.mini,
        status: !!props.status,
        big: props.big,
        user: props.user,
    });
    bm.Append(props.className);
    var avatar = (React.createElement("div", { style: props.style, className: bm.toString() },
        props.src ? (React.createElement("img", { src: props.src, alt: props.children.toString(), title: props.children.toString() })) : props.children,
        !isUndef(props.status) && (React.createElement(StatusComponent, { className: bm.Children("status"), status: props.status }))));
    if (!props.user) {
        return avatar;
    }
    return (React.createElement("div", { className: "Avatar-user-component" },
        avatar,
        React.createElement(TypographyComponent, { className: "Avatar-user-component__name", component: "span" }, props.children)));
}

___$insertStyle(".GridList-component {\n  display: flex;\n  padding: 0;\n  flex-wrap: wrap;\n  list-style: none;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}");

function GridListComponent(props) {
    var cellHeight = props.cellHeight || 180;
    var cols = props.cols || 2;
    var Component = props.component || "ul";
    var spacing = props.spacing || 4;
    var bm = new BEM("GridList-component", {});
    return (
    // @ts-ignore
    React.createElement(Component, { style: __assign({ margin: -spacing / 2 }, props.style), className: bm.toString() }, React.Children.map(props.children, function (child) {
        if (!React.isValidElement(child)) {
            return null;
        }
        var childCols = child.props.cols || 1;
        var childRows = child.props.rows || 1;
        return React.cloneElement(child, {
            style: __assign({ width: (100 / cols) * childCols + "%", height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing, padding: spacing / 2 }, child.props.style),
        });
    })));
}

___$insertStyle(".GridListTile-component {\n  box-sizing: border-box;\n  flex-shrink: 0;\n}\n.GridListTile-component__image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}");

function GridListTileComponent(props) {
    var bm = new BEM("GridListTile-component", {});
    var Component = props.component || "li";
    var cols = props.cols || 1;
    var rows = props.rows || 1;
    var classes = {
        root: {
            boxSizing: 'border-box',
            flexShrink: 0,
        },
        /* Styles applied to the `div` element that wraps the children. */
        tile: {
            position: 'relative',
            display: 'block',
            height: '100%',
            overflow: 'hidden',
        },
        /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */
        imgFullHeight: {
            height: '100%',
            transform: 'translateX(-50%)',
            position: 'relative',
            left: '50%',
        },
        /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */
        imgFullWidth: {
            width: '100%',
            position: 'relative',
            transform: 'translateY(-50%)',
            top: '50%',
        },
    };
    return (
    // @ts-ignore
    React.createElement(Component, { className: bm.toString(), style: props.style },
        React.createElement("div", { style: classes.tile }, React.Children.map(props.children, function (child) {
            if (!React.isValidElement(child)) {
                return null;
            }
            if (child.type === 'img') {
                return React.cloneElement(child, {
                    className: "GridListTile-component__image",
                });
            }
            return child;
        }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ButtonGroup-component {\n  display: inline-flex;\n  border-radius: 4px;\n}");

function ButtonGroupComponent(props) {
    var classNames = ["ButtonGroup-component"];
    return (React.createElement("div", { className: classNames.join(" ") }, React.Children.map(props.children, function (Child, index) {
        // @ts-ignore
        return React.cloneElement(Child, {
            grouped: true,
            onClick: function (e) { return props.onClick(e, index); },
        });
    })));
}

___$insertStyle("@charset \"UTF-8\";\n.InputField-component {\n  color: #fff;\n  cursor: text;\n  display: inline-flex;\n  font-size: 1rem;\n  box-sizing: border-box;\n  align-items: center;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  line-height: 1.1876em;\n  letter-spacing: 0.00938em;\n  position: relative;\n}\n.InputField-component:before {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  content: \" \";\n  position: absolute;\n  transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.7);\n  pointer-events: none;\n}\n.InputLabel-component + .InputField-component {\n  margin-top: 16px;\n}\n.InputField-component__input {\n  font: inherit;\n  color: currentColor;\n  width: 100%;\n  border: 0;\n  height: 1.1876em;\n  margin: 0;\n  display: block;\n  padding: 6px 0 7px;\n  min-width: 0;\n  background: none;\n  box-sizing: content-box;\n  animation-name: mui-auto-fill-cancel;\n  letter-spacing: inherit;\n  animation-duration: 10ms;\n  -webkit-tap-highlight-color: transparent;\n}\n.InputField-component__input:focus {\n  outline: 0;\n}");

function InputFieldComponent(props) {
    var bm = new BEM("InputField-component", {});
    bm.Append(props.className);
    var Component = props.multiline ? "textarea" : "input";
    return (React.createElement("div", { className: bm.toString() },
        React.createElement(Component, { id: props.id, value: props.value, 
            // @ts-ignore
            onChange: props.onChange, placeholder: props.placeholder, type: props.type || "text", style: props.style, 
            // @ts-ignore
            onFocus: props.onFocus, 
            // @ts-ignore
            onBlur: props.onBlur, className: "InputField-component__input", required: props.required, 
            // @ts-ignore
            autoComplete: props.autoComplete, autoFocus: props.autoFocus })));
}

___$insertStyle(".InputLabel-component {\n  display: block;\n  transform-origin: top left;\n  transition: color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms, transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;\n}\n.InputLabel-component.TextField-component__label-form-control {\n  top: 0;\n  left: 0;\n  position: absolute;\n  transform: translate(0, 24px) scale(1);\n}\n.InputLabel-component.TextField-component__label {\n  color: rgba(255, 255, 255, 0.7);\n  padding: 0;\n  font-size: 16px;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  line-height: 1;\n  letter-spacing: 0.00938em;\n}\n.InputLabel-component--isUp {\n  color: #90caf9;\n  transform: translate(0, 1.5px) scale(0.75) !important;\n  transform-origin: top left !important;\n}\n.InputLabel-component:focus {\n  color: red;\n}");

function InputLabelComponent(props) {
    var bm = new BEM("InputLabel-component", {
        isUp: props.isUp,
    });
    bm.Append(props.className);
    return (React.createElement("label", { htmlFor: props.htmlFor, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.TextField-component {\n  outline: 0;\n}\n.TextField-component--outline input {\n  display: block;\n  width: 100%;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #495057;\n  background-clip: padding-box;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  background-color: #fbfbfb;\n  border: 1px solid #e3e3e3;\n  border-radius: 4px;\n  height: 46px;\n  box-sizing: border-box;\n}");

/**
 * @ignore - internal component.
 */
var FormLayoutContext = React.createContext({});
FormLayoutContext.displayName = 'FormLayoutContext';

function useFormLayout() {
    return React.useContext(FormLayoutContext);
}

function TextFieldComponent(props) {
    var bm = new BEM("TextField-component", {
        outline: props.outline,
    });
    bm.Append(props.className);
    var label = props.label;
    var _a = React.useState(false), isUp = _a[0], setIsUp = _a[1];
    var _b = React.useState(false), focus = _b[0], setFocus = _b[1];
    var _c = React.useState(false), content = _c[0], setContent = _c[1];
    var _d = React.useState(false), initial = _d[0], setInitial = _d[1];
    var value;
    if (props.type !== "file") {
        value = props.value;
    }
    var use = useFormLayout();
    if (use) {
        if (props.type !== "file") {
            if (use.values && props.id in use.values) {
                value = isUndef(use.values[props.id]) ? props.value : use.values[props.id];
            }
        }
    }
    React.useEffect(function () {
        if (props.type != "file" && !initial && use && use.values) {
            use.addValue(props.id, isUndef(use.values[props.id]) ? props.value : use.values[props.id], props);
            setInitial(true);
        }
    });
    var onFocus = function (e) {
        setIsUp(true);
        setFocus(true);
        props.onFocus && props.onFocus(e);
    };
    var onBlur = function (e) {
        if (!content) {
            setIsUp(false);
        }
        setFocus(false);
        props.onBlur && props.onBlur(e);
    };
    var onChange = function (e) {
        setContent(!!e.target.value);
        var value = e.target.value;
        if (props.type == "file") {
            GetFile(e, function (d, url) {
                use.addValue && use.addValue(props.id, {
                    file: d,
                    url: url,
                }, props);
                props.onChange && props.onChange(e);
            });
        }
        else {
            if (use) {
                if (use.addValue)
                    use.addValue(props.id, value, props);
            }
            props.onChange && props.onChange(e);
        }
    };
    var InputElement = (React.createElement(InputFieldComponent, { required: props.required, "aria-describedby": props.helperTextId, autoComplete: props.autoComplete, autoFocus: props.autoFocus, value: value, fullWidth: props.fullWidth, multiline: props.multiline, name: props.name, rows: props.rows, rowsMax: props.rowsMax, type: props.type, id: props.id, onBlur: onBlur, onChange: onChange, onFocus: onFocus, placeholder: props.placeholder }));
    return (React.createElement(FormControlComponent, { className: bm.toString(), focus: focus },
        label && (React.createElement(InputLabelComponent, { isUp: isUp, htmlFor: props.id, className: "TextField-component__label TextField-component__label-form-control" }, label + " " + (props.required ? " *" : ""))),
        InputElement));
}

___$insertStyle(".FormControl-component {\n  border: 0;\n  margin: 0;\n  display: inline-flex;\n  padding: 0;\n  position: relative;\n  min-width: 0;\n  flex-direction: column;\n  vertical-align: top;\n  width: 100%;\n}\n.FormControl-component--focus .InputLabel-component {\n  color: #90caf9;\n}\n.FormControl-component--focus .InputField-component__input {\n  border-bottom: 1px solid #90caf9;\n}");

function FormControlComponent(props) {
    var bm = new BEM("FormControl-component", {});
    var classNames = [bm.toString()];
    if (props.className)
        classNames.push(props.className);
    if (props.focus)
        classNames.push("FormControl-component--focus");
    var Component = props.component || "div";
    return (
    // @ts-ignore
    React.createElement(Component, { className: classNames.join(" ") }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.AppBar-component {\n  width: 100%;\n  display: flex;\n  z-index: 1100;\n  box-sizing: border-box;\n  flex-shrink: 0;\n  flex-direction: column;\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.AppBar-component--position-static {\n  position: static;\n}\n.AppBar-component--color-primary {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #90caf9;\n}");

function AppBarComponent(props) {
    var bm = new BEM("AppBar-component", {
        position: props.position,
        color: props.color || "primary",
    });
    bm.Append(props.className);
    return (React.createElement("header", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Toolbar-component {\n  display: flex;\n  position: relative;\n  align-items: center;\n}\n.Toolbar-component--gutters {\n  padding-left: 16px;\n  padding-right: 16px;\n}\n@media (min-width: 600px) {\n  .Toolbar-component--gutters {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n}\n.Toolbar-component--regular {\n  min-height: 56px;\n}\n@media (min-width: 0px) and (orientation: landscape) {\n  .Toolbar-component--regular {\n    min-height: 48px;\n  }\n}\n@media (min-width: 600px) {\n  .Toolbar-component--regular {\n    min-height: 64px;\n  }\n}");

function ToolbarComponent(props) {
    var bm = new BEM("Toolbar-component", {
        gutters: props.gutters != undefined ? props.gutters : true,
        regular: props.regular != undefined ? props.regular : true,
    });
    bm.Append(props.className);
    return (React.createElement("section", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ButtonIcon-component {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n  flex: 0 0 auto;\n  color: #fff;\n  padding: 12px;\n  overflow: visible;\n  font-size: 1.5rem;\n  text-align: center;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  border-radius: 50%;\n}\n.ButtonIcon-component:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n.ButtonIcon-component:hover {\n  background-color: rgba(255, 255, 255, 0.08);\n  cursor: pointer;\n}\n.ButtonIcon-component--hover:hover {\n  background-color: rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n}\n.ButtonIcon-component--action {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 100%;\n  display: inline-flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  -webkit-transition: all 300ms ease;\n  -moz-transition: all 300ms ease;\n  -ms-transition: all 300ms ease;\n  -o-transition: all 300ms ease;\n  transition: all 300ms ease;\n  height: 24px;\n  width: 24px;\n}\n.ButtonIcon-component--action .Icon-component {\n  width: 12px;\n  height: 12px;\n}\n.ButtonIcon-component--action + .ButtonIcon-component--action {\n  margin-left: 5px;\n}");

function ButtonIconComponent(props) {
    var bm = new BEM("ButtonIcon-component", {
        hover: props.hover,
        action: props.action,
    });
    var Component = props.component || "button";
    bm.Append(props.className);
    return (
    // @ts-ignore
    React.createElement(Component, { onClick: props.onClick, style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".InputSearch-component {\n  width: 100%;\n  position: relative;\n  margin-left: 0;\n  margin-right: 16px;\n  border-radius: 4px;\n  background-color: rgba(255, 255, 255, 0.15);\n}\n@media (min-width: 600px) {\n  .InputSearch-component {\n    width: auto;\n    margin-left: 24px;\n  }\n}\n.InputSearch-component__icon {\n  height: 100%;\n  display: flex;\n  padding: 0px 16px;\n  position: absolute;\n  align-items: center;\n  pointer-events: none;\n  justify-content: center;\n}\n.InputSearch-component__icon svg {\n  fill: currentColor;\n  width: 1em;\n  height: 1em;\n  display: inline-block;\n  font-size: 1.5rem;\n  transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  flex-shrink: 0;\n  user-select: none;\n}\n.InputSearch-component__input {\n  font: inherit;\n  color: currentColor;\n  cursor: text;\n  display: inline-flex;\n  position: relative;\n  font-size: 1rem;\n  box-sizing: border-box;\n  align-items: center;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  line-height: 1.1876em;\n  letter-spacing: 0.00938em;\n}\n.InputSearch-component__input .InputField-component:before {\n  border: 0;\n}\n.InputSearch-component__input input {\n  color: black;\n  padding: 8px 8px 8px 0px;\n  transition: width 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  padding-left: calc(1em + 32px);\n}\n@media (min-width: 960px) {\n  .InputSearch-component__input input {\n    width: 20ch;\n  }\n}\n.InputSearch-component--outlined {\n  background-color: #f7f7f7;\n  border: 1px solid #e3e3e3;\n  border-radius: 50px;\n}\n.InputSearch-component--outlined .InputSearch-component__input {\n  width: 100%;\n}\n.InputSearch-component--outlined .InputSearch-component__input input {\n  font-size: 14px;\n}\n.InputSearch-component--custom {\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 50px;\n  color: #fff;\n  height: 40px;\n  padding: 10px 50px 10px 15px;\n  display: flex;\n  align-items: center;\n}");

function InputSearchComponent(props) {
    var bm = new BEM("InputSearch-component", {
        outlined: props.outlined,
        custom: props.custom,
    });
    var className = props.className, onChange = props.onChange, rest = __rest(props, ["className", "onChange"]);
    bm.Append(className);
    return (React.createElement("div", { className: bm.toString() },
        React.createElement("div", { className: "InputSearch-component__icon" },
            React.createElement("svg", { className: "MuiSvgIcon-root", focusable: "false", viewBox: "0 0 24 24", "aria-hidden": "true" },
                React.createElement("path", { d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" }))),
        React.createElement("div", { className: "InputSearch-component__input" },
            React.createElement(InputFieldComponent, __assign({ onChange: onChange }, rest)))));
}

___$insertStyle(".FlexGrow-component {\n  flex-grow: 1;\n}");

function FlexGrowComponent(props) {
    var bm = new BEM("FlexGrow-component", {});
    return (React.createElement("div", { className: bm.toString() }));
}

___$insertStyle(".Badge-component {\n  display: inline-flex;\n  position: relative;\n  flex-shrink: 0;\n  vertical-align: middle;\n}\n.Badge-component__badge {\n  height: 20px;\n  display: flex;\n  padding: 0 6px;\n  z-index: 1;\n  position: absolute;\n  flex-wrap: wrap;\n  font-size: 0.75rem;\n  min-width: 20px;\n  box-sizing: border-box;\n  transition: transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  align-items: center;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 500;\n  line-height: 1;\n  align-content: center;\n  border-radius: 10px;\n  flex-direction: row;\n  justify-content: center;\n}\n.Badge-component--relative .Badge-component__badge {\n  position: relative;\n}\n.Badge-component--right .Badge-component__badge {\n  top: 0;\n  right: 0;\n  transform: scale(1) translate(50%, -50%);\n  transform-origin: 100% 0%;\n}\n.Badge-component--color-secondary .Badge-component__badge {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #f48fb1;\n}");

function BadgeComponent(props) {
    var bm = new BEM("Badge-component", {
        right: props.right != undefined ? props.right : !!props.children,
        color: props.theme ? props.theme : "secondary",
        relative: !props.children,
    });
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        props.children,
        React.createElement("span", { className: "Badge-component__badge" }, props.badgeContent)));
}

___$insertStyle(".CardMedia-component {\n  display: block;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  height: 0;\n  padding-top: 56.25%;\n}");

function CardMediaComponent(props) {
    var bm = new BEM("CardMedia-component", {});
    return (React.createElement("div", { style: {
            backgroundImage: "url(" + props.image + ")"
        }, className: bm.toString(), title: props.title }));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Menu-component {\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  outline: 0;\n  position: absolute;\n  max-width: calc(100% - 32px);\n  min-width: 16px;\n  min-height: 16px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  z-index: 4;\n}\n.Menu-component--open {\n  opacity: 1;\n  transform: none;\n  transition: opacity 251ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 167ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  transform-origin: 0px 26px;\n}\n.Menu-component--close {\n  opacity: 0;\n  transform: scale(0.75, 0.5625);\n  transition: opacity 251ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 167ms cubic-bezier(0.4, 0, 0.2, 1) 84ms;\n  transform-origin: 0px 26px;\n}\n.Menu-component--static {\n  position: relative;\n}\n.Menu-component--absolute {\n  position: absolute;\n}\n\n.Menu-parent-component {\n  position: relative;\n}");

var MenuComponent = /** @class */ (function (_super) {
    __extends(MenuComponent, _super);
    function MenuComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.onClickOutside = function (e) {
            if (_this.wrapperRef && !_this.wrapperRef.current.contains(e.target)) {
                _this.props.onClose();
            }
        };
        _this.wrapperRef = React.createRef();
        return _this;
    }
    MenuComponent.prototype.componentDidMount = function () {
        document.addEventListener("mousedown", this.onClickOutside);
    };
    MenuComponent.prototype.componentWillUnmount = function () {
        document.removeEventListener('mousedown', this.onClickOutside);
    };
    MenuComponent.prototype.render = function () {
        var bm = new BEM("Menu-component", {
            open: this.props.open,
            close: !this.props.open,
            static: this.props.static,
            absolute: !this.props.static,
        });
        if (!this.props.keepMounted) {
            if (!this.props.open)
                return null;
        }
        return (React.createElement("div", { className: "Menu-parent-component", ref: this.wrapperRef, style: this.props.style },
            this.props.trigger,
            React.createElement("div", { style: this.props.PaperProps && this.props.PaperProps.style, className: bm.toString() },
                React.createElement(MenuListComponent, { padding: true }, this.props.children))));
    };
    return MenuComponent;
}(React.Component));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.MenuItem-component {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n  display: flex;\n  position: relative;\n  box-sizing: border-box;\n  text-align: left;\n  align-items: center;\n  justify-content: flex-start;\n  text-decoration: none;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  width: auto;\n  overflow: hidden;\n  font-size: 1rem;\n  min-height: 48px;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  padding-top: 6px;\n  white-space: nowrap;\n  letter-spacing: 0.00938em;\n  padding-bottom: 6px;\n}\n.MenuItem-component:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n@media (min-width: 600px) {\n  .MenuItem-component {\n    min-height: auto;\n  }\n}\n.MenuItem-component--gutters {\n  padding-left: 16px;\n  padding-right: 16px;\n}\n.MenuItem-component:hover {\n  text-decoration: none;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n.MenuItem-component--selected, .MenuItem-component--selected:hover {\n  background-color: rgba(255, 255, 255, 0.16);\n}\n.MenuItem-component--disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n.MenuItem-component--disabled:hover {\n  cursor: default;\n}");

function MenuItemComponent(props) {
    var bm = new BEM("MenuItem-component", {
        gutters: props.gutters != undefined ? props.gutters : true,
        selected: props.selected,
        disabled: props.disabled,
    });
    var onClick = function (e) {
        if (props.disabled)
            return;
        props.onClick(e);
    };
    return (React.createElement("li", { onClick: onClick, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.MenuList-component {\n  margin: 0;\n  padding: 0;\n  position: relative;\n  list-style: none;\n  outline: 0;\n}\n.MenuList-component--padding {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}");

function MenuListComponent(props) {
    var bm = new BEM("MenuList-component", {
        padding: props.padding,
    });
    return (React.createElement("ul", { className: bm.toString() }, props.children));
}

___$insertStyle(".List-component {\n  margin: 0;\n  width: 100%;\n  padding: 0;\n  position: relative;\n  list-style: none;\n}\n.List-component--padding {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.List-component--horizontal {\n  display: flex;\n  flex-grow: 1;\n}");

function ListComponent(props) {
    var bm = new BEM("List-component", {
        padding: props.padding != undefined ? props.padding : true,
        horizontal: props.horizontal,
    });
    var Component = props.component || "div";
    bm.Append(props.className);
    return (
    // @ts-ignore
    React.createElement(Component, { style: props.style, id: props.id, "aria-label": props.ariaLabel, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ListItem-component {\n  width: 100%;\n  display: flex;\n  position: relative;\n  box-sizing: border-box;\n  text-align: left;\n  align-items: center;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  justify-content: flex-start;\n  text-decoration: none;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n}\n.ListItem-component--button {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n}\n.ListItem-component--button:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n.ListItem-component--gutters {\n  padding-left: 16px;\n  padding-right: 16px;\n}");

function ListItemComponent(props) {
    var bm = new BEM("ListItem-component", {
        button: props.button,
        gutters: props.gutters != undefined ? props.gutters : true,
    });
    var Component = props.component || "div";
    bm.Append(props.className);
    return (
    // @ts-ignore
    React.createElement(Component, { "aria-haspopup": props.ariaHasPopup, "aria-controls": props.ariaControl, "aria-label": props.ariaLabel, onClick: props.onClick, className: bm.toString() }, props.children));
}

___$insertStyle(".ListItemText-component {\n  flex: 1 1 auto;\n  min-width: 0;\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\n.ListItemText-component--multiline {\n  margin-top: 6px;\n  margin-bottom: 6px;\n}");

function ListItemTextComponent(props) {
    var bm = new BEM("ListItemText-component", {
        multiline: !!(props.primary && props.secondary),
    });
    return (React.createElement("div", { className: bm.toString() },
        React.createElement(TypographyComponent, { className: "ListItemText-component__primary", variant: "body1", component: "span", color: "text-primary" }, props.primary),
        props.secondary && (React.createElement(TypographyComponent, { className: "ListItemText-component__secondary", variant: "body2", component: "p", color: "text-secondary" }, props.secondary))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Checkbox-component {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n  flex: 0 0 auto;\n  color: #fff;\n  padding: 12px;\n  overflow: visible;\n  font-size: 1.5rem;\n  text-align: center;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  border-radius: 50%;\n  color: black;\n  justify-content: flex-start;\n}\n.Checkbox-component:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n.Checkbox-component:hover {\n  background-color: rgba(255, 255, 255, 0.08);\n  cursor: pointer;\n}\n.Checkbox-component--hover:hover {\n  background-color: rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n}\n.Checkbox-component--default {\n  color: #e0e0e0;\n}\n.Checkbox-component--success {\n  color: #26a69a;\n}\n.Checkbox-component--primary {\n  color: #90caf9;\n}\n.Checkbox-component--secondary {\n  color: #f48fb1;\n}\n.Checkbox-component--info {\n  color: #328cd6;\n}\n.Checkbox-component--white {\n  color: white;\n}\n.Checkbox-component--orange {\n  color: #ff9b44;\n}\n.Checkbox-component--danger {\n  color: #f62d51;\n}\n.Checkbox-component--disabled {\n  color: rgba(255, 255, 255, 0.12);\n}\n.Checkbox-component--gray {\n  color: gray;\n}\n.Checkbox-component--mixPurple {\n  color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.Checkbox-component__content {\n  width: 100%;\n  display: flex;\n  align-items: inherit;\n  justify-content: inherit;\n}\n.Checkbox-component__content input {\n  top: 0;\n  left: 0;\n  width: 100%;\n  cursor: inherit;\n  height: 100%;\n  margin: 0;\n  opacity: 0;\n  padding: 0;\n  z-index: 1;\n  position: absolute;\n}");

function CheckboxComponent(props) {
    var _a;
    var _b = React.useState(false), initial = _b[0], setInitial = _b[1];
    var use = useFormLayout();
    var bm = new BEM("Checkbox-component", (_a = {},
        _a[props.color] = !!props.color,
        _a));
    var value = !!props.checked;
    if (use) {
        if (use.values && props.id in use.values) {
            value = isUndef(use.values[props.id]) ? !!props.checked : !!use.values[props.id];
        }
    }
    React.useEffect(function () {
        if (!initial && use && use.values) {
            use.addValue && use.addValue(props.id, isUndef(use.values[props.id]) ? !!props.checked : !!use.values[props.id], props);
            setInitial(true);
        }
    });
    var onChange = function (e) {
        if (use && use.addValue)
            use.addValue(props.id, e.target.checked, props);
        props.onChange && props.onChange(e.target.checked, e);
    };
    return (React.createElement("span", { className: bm.toString() },
        React.createElement("span", { className: "Checkbox-component__content" },
            React.createElement("input", { type: "checkbox", name: props.inputProps && props.inputProps.name || props.name, id: props.inputProps && props.inputProps.id, checked: value, onChange: onChange }),
            React.createElement(IconComponent, { icon: value ? "check" : "uncheck" }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.FormGroup-component {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n}\n.FormGroup-component--row {\n  flex-direction: row;\n}\n.FormGroup-component--form {\n  margin-bottom: 20px;\n}\n.FormGroup-component .InputLabel-component {\n  margin-bottom: 10px;\n}");

function FormGroupComponent(props) {
    var bm = new BEM("FormGroup-component", {
        row: props.row,
        form: props.form,
    });
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".FormControlLabel-component {\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  margin-left: -11px;\n  margin-right: 16px;\n  vertical-align: middle;\n  -webkit-tap-highlight-color: transparent;\n}");

function FormControlLabelComponent(props) {
    var bm = new BEM("FormControlLabel-component", {});
    return (React.createElement("label", { className: bm.toString() },
        React.cloneElement(props.control, {
            value: props.value,
        }),
        React.createElement(TypographyComponent, { color: props.color, variant: "body1", component: "span" }, props.label)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.RadioGroup-component {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n}\n.RadioGroup-component--row {\n  flex-direction: row;\n}");

/**
 * @ignore - internal component.
 */
var RadioGroupContext = React.createContext("");
RadioGroupContext.displayName = 'RadioGroupContext';

function RadioGroupComponent(props) {
    var bm = new BEM("RadioGroup-component", {});
    var _a = React.useState(props.value), value = _a[0], setValue = _a[1];
    var handleChange = function (event) {
        setValue(event.target.value);
        props.onChange && props.onChange(event);
    };
    var name = useId(props.name);
    return (
    // @ts-ignore
    React.createElement(RadioGroupContext.Provider, { value: { name: name, onChange: handleChange, value: value } },
        React.createElement("div", { className: bm.toString() }, props.children)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Radio-component {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n  flex: 0 0 auto;\n  color: #fff;\n  padding: 12px;\n  overflow: visible;\n  font-size: 1.5rem;\n  text-align: center;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  border-radius: 50%;\n}\n.Radio-component:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n.Radio-component:hover {\n  background-color: rgba(255, 255, 255, 0.08);\n  cursor: pointer;\n}\n.Radio-component--hover:hover {\n  background-color: rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n}\n.Radio-component--default {\n  color: #e0e0e0;\n}\n.Radio-component--success {\n  color: #26a69a;\n}\n.Radio-component--primary {\n  color: #90caf9;\n}\n.Radio-component--secondary {\n  color: #f48fb1;\n}\n.Radio-component--info {\n  color: #328cd6;\n}\n.Radio-component--white {\n  color: white;\n}\n.Radio-component--orange {\n  color: #ff9b44;\n}\n.Radio-component--danger {\n  color: #f62d51;\n}\n.Radio-component--disabled {\n  color: rgba(255, 255, 255, 0.12);\n}\n.Radio-component--gray {\n  color: gray;\n}\n.Radio-component--mixPurple {\n  color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.Radio-component__content {\n  width: 100%;\n  display: flex;\n  align-items: inherit;\n  justify-content: inherit;\n}\n.Radio-component__content input {\n  top: 0;\n  left: 0;\n  width: 100%;\n  cursor: inherit;\n  height: 100%;\n  margin: 0;\n  opacity: 0;\n  padding: 0;\n  z-index: 1;\n  position: absolute;\n}");

function useRadioGroup() {
    return React.useContext(RadioGroupContext);
}

function RadioComponent(props) {
    var _a;
    var checkedProp = props.checked, _b = props.color, nameProp = props.name, onChangeProp = props.onChange, other = __rest(props, ["checked", "color", "name", "onChange"]);
    var checked = checkedProp;
    var name = nameProp;
    var bm = new BEM("Radio-component", (_a = {},
        _a[props.color] = !!props.color,
        _a));
    var style = {
        transform: "scale(1)",
        transition: "transform 150ms cubic-bezier(0.0, 0, 0.2, 1) 0ms",
    };
    var radioGroup = useRadioGroup();
    if (radioGroup) {
        if (typeof checked === 'undefined') {
            // @ts-ignore
            checked = radioGroup.value === props.value;
        }
        if (typeof name === 'undefined') {
            // @ts-ignore
            name = radioGroup.name;
        }
    }
    var onChange = function () {
    };
    // @ts-ignore
    if (onChangeProp || (radioGroup && radioGroup.onChange)) {
        // @ts-ignore
        onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);
    }
    return (React.createElement("span", { className: bm.toString() },
        React.createElement("span", { className: "Radio-component__content" },
            React.createElement("input", { type: "radio", name: name, id: props.inputProps && props.inputProps.id, checked: checked, onChange: onChange, value: props.value }),
            React.createElement(IconComponent, { icon: "radio" }),
            React.createElement(IconComponent, { style: __assign({ position: "absolute", transform: "scale(0)", transition: "transform 150ms cubic-bezier(0.4, 0, 1, 1) 0ms" }, checked ? style : {}), icon: "radioCircle" }))));
}

___$insertStyle(".FormLabel-component {\n  color: rgba(255, 255, 255, 0.7);\n  padding: 0;\n  font-size: 1rem;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 400;\n  line-height: 1;\n  letter-spacing: 0.00938em;\n}");

function FormLabelComponent(props) {
    var bm = new BEM("FormLabel-component", {});
    var Component = props.component || "div";
    return (
    // @ts-ignore
    React.createElement(Component, { className: bm.toString() }, props.children));
}

___$insertStyle(".Editor-component {\n  position: relative;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  z-index: 1;\n  background-color: #fff;\n  min-height: 100vh;\n}\n.Editor-component__redactor {\n  padding-bottom: 300px;\n}\n@media (min-width: 651px) {\n  .Editor-component__redactor {\n    margin-right: 50px;\n  }\n}\n.Editor-component__icon {\n  position: absolute;\n  right: 0;\n  top: 0px;\n  opacity: 0;\n}\n.Editor-component__icon svg {\n  fill: currentColor;\n  vertical-align: middle;\n  max-height: 100%;\n}\n.Editor-component__icon > span {\n  display: flex;\n  color: #707684;\n  cursor: pointer;\n}\n.Editor-component__icon > span svg {\n  padding: 0px;\n  width: 20px;\n}\n.Editor-component__icon--open {\n  opacity: 1;\n}\n.Editor-component__add {\n  width: 100%;\n  position: relative;\n  max-width: 650px;\n  margin: auto;\n}\n.Editor-component__add .ce-toolbar__plus {\n  color: #707684;\n  cursor: pointer;\n  width: 34px;\n  height: 34px;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n  margin-left: -10px;\n}\n.Editor-component__add .ce-toolbar__plus svg {\n  fill: currentColor;\n  vertical-align: middle;\n  max-height: 100%;\n  height: 14px;\n}\n.Editor-component__actions {\n  width: 100%;\n  position: relative;\n  max-width: 650px;\n  margin: auto;\n  margin-top: 50px;\n  text-align: center;\n}\n.Editor-component__actions button {\n  max-width: 300px;\n  width: 100%;\n  height: 45px;\n}");

___$insertStyle(".ce-Header {\n  padding: 1em 0;\n  margin: 0 0 -0.9em;\n  line-height: 1.5em;\n  outline: none;\n}\n\n.ce-Paragraph {\n  line-height: 1.6em;\n  outline: none;\n  padding: 0.7em 0;\n}\n\n.ce-List {\n  margin: 0;\n  padding-left: 40px;\n  outline: none;\n}\n.ce-List--unordered {\n  list-style: disc;\n}\n.ce-List--ordered {\n  list-style: decimal;\n}\n\n.ce-ListItem {\n  display: list-item;\n  padding: 5.5px 0 5.5px 3px;\n  line-height: 1.6em;\n}\n\n.ce-InlineCode {\n  background: rgba(251, 241, 241, 0.78);\n  color: #C44545;\n  padding: 4px 6px;\n  border-radius: 2px;\n  margin: 0 2px;\n  font-family: Menlo, Monaco, Consolas, Courier New, monospace;\n  font-size: 0.9em;\n}\n\n.ce-Marker {\n  background: rgba(245, 235, 111, 0.29);\n  padding: 3px 0;\n}\n\n.ce-ActionIcons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n}\n.ce-ActionIcons svg {\n  fill: currentColor;\n  vertical-align: middle;\n  max-height: 100%;\n  width: 14px;\n  height: 14px;\n  margin: auto;\n}\n\n.ce-settings__button, .ce-inline-tool {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  width: 34px;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 !important;\n  text-align: center;\n  border-radius: 3px;\n  cursor: pointer;\n  border: 0;\n  outline: none;\n  background-color: transparent;\n  vertical-align: bottom;\n  color: #707684;\n}\n.ce-settings__button:hover, .ce-inline-tool:hover {\n  background-color: #eff2f5;\n}\n\n.ce-toolbox {\n  -webkit-transition: opacity 0.1s ease;\n  transition: opacity 0.1s ease;\n  will-change: opacity;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  background: #fff;\n  z-index: 2;\n}\n\n.ce-toolbox__button {\n  color: #707684;\n  cursor: pointer;\n  width: 34px;\n  height: 34px;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n}\n.ce-toolbox__button:hover {\n  color: #388ae5;\n}");

var EditorData = /** @class */ (function () {
    function EditorData(type, data) {
        this.type = type;
        this.data = data;
    }
    return EditorData;
}());
var EditorDataImage = /** @class */ (function () {
    function EditorDataImage(url, caption) {
        if (caption === void 0) { caption = ""; }
        this.file = { url: url };
        this.caption = caption;
        this.stretched = true;
        this.withBackground = false;
        this.withBorder = false;
    }
    return EditorDataImage;
}());
var EditorDataData = /** @class */ (function () {
    function EditorDataData() {
    }
    return EditorDataData;
}());
var EditorDataLink = /** @class */ (function () {
    function EditorDataLink() {
    }
    return EditorDataLink;
}());
var EditorDataCode = /** @class */ (function () {
    function EditorDataCode() {
    }
    return EditorDataCode;
}());
var EditorDataList = /** @class */ (function () {
    function EditorDataList() {
    }
    return EditorDataList;
}());
var EditorDataTable = /** @class */ (function () {
    function EditorDataTable() {
    }
    return EditorDataTable;
}());
(function (EditorDataEnum) {
    EditorDataEnum[EditorDataEnum["CHECKLIST"] = 0] = "CHECKLIST";
    EditorDataEnum[EditorDataEnum["QUOTE"] = 1] = "QUOTE";
    EditorDataEnum[EditorDataEnum["RAW"] = 2] = "RAW";
    EditorDataEnum[EditorDataEnum["LINK"] = 3] = "LINK";
    EditorDataEnum[EditorDataEnum["CODE"] = 4] = "CODE";
    EditorDataEnum[EditorDataEnum["WARNING"] = 5] = "WARNING";
    EditorDataEnum[EditorDataEnum["TABLE"] = 6] = "TABLE";
    EditorDataEnum[EditorDataEnum["PARAGRAPH"] = 7] = "PARAGRAPH";
    EditorDataEnum[EditorDataEnum["HEADER"] = 8] = "HEADER";
    //TABLE,
    EditorDataEnum[EditorDataEnum["LIST"] = 9] = "LIST";
    EditorDataEnum[EditorDataEnum["DELIMITER"] = 10] = "DELIMITER";
    EditorDataEnum[EditorDataEnum["IMAGE"] = 11] = "IMAGE";
})(exports.EditorDataEnum || (exports.EditorDataEnum = {}));

___$insertStyle(".EditorBlock-component:first-of-type {\n  margin-top: 0;\n}\n.EditorBlock-component__content {\n  position: relative;\n  max-width: 650px;\n  margin: 0 auto;\n  -webkit-transition: background-color 0.15s ease;\n  transition: background-color 0.15s ease;\n}\n.EditorBlock-component--focused {\n  background-image: linear-gradient(17deg, rgba(243, 248, 255, 0.03) 63.45%, rgba(207, 214, 229, 0.27) 98%);\n  border-radius: 3px;\n}\n@media (min-width: 651px) {\n  .EditorBlock-component--focused {\n    margin-right: -50px;\n    padding-right: 50px;\n  }\n}");

function EditorBlockComponent(props) {
    var use = useEditorContext();
    var bm = new BEM("EditorBlock-component", {
        focused: use.editor.getFocus() == props.index,
    });
    var onClick = function (e) {
        use.onClick(props.index, {
            top: e.currentTarget.offsetTop,
        });
    };
    return (React.createElement("div", { onClick: onClick, className: bm.toString() },
        React.createElement("div", { className: "EditorBlock-component__content" }, props.children)));
}

___$insertStyle(".Code-component {\n  margin-top: 0px;\n  margin-bottom: 20px;\n  padding: 15px 15px 15px 3.8em;\n  border-top: 0px solid #3d7e9a;\n  border-bottom: 0px solid #3d7e9a;\n  border-left: 5px solid #3d7e9a;\n  border-right-style: solid;\n  border-right-color: #3d7e9a;\n  border-image: initial;\n  font-size: 16px;\n  background: #eeeeee;\n  color: #333333;\n  position: relative;\n  font-family: consolas, monaco, \"Andale Mono\", monospace;\n  line-height: 1.5;\n  overflow: auto;\n  tab-size: 4;\n  hyphens: none;\n  width: 1014px;\n  max-width: 100%;\n  text-shadow: none;\n  word-break: normal;\n  overflow-wrap: normal;\n  counter-reset: linenumber 0;\n  letter-spacing: -0.04448px;\n  border-right-width: 0px !important;\n  direction: ltr !important;\n}\n.Code-component code {\n  margin: 0px;\n  padding: 0px;\n  border: 0px;\n  font-weight: inherit;\n  background: 0px 0px transparent;\n  border-radius: 2px;\n  font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n  overflow-wrap: normal;\n  text-shadow: none;\n  font-size: 1em;\n  white-space: inherit;\n  word-spacing: normal;\n  word-break: normal;\n  line-height: 1.5;\n  tab-size: 4;\n  hyphens: none;\n  position: relative;\n}");

function CodeComponent(props) {
    var bm = new BEM("Code-component", {});
    return (React.createElement("pre", { className: bm.toString() },
        React.createElement("code", null, props.children)));
}

var EditorContext = React.createContext(null);
var useEditorContext = function () {
    return React.useContext(EditorContext);
};
var Editor = /** @class */ (function () {
    function Editor(data, on) {
        this.focus = null;
        this.focusTop = 0;
        this.data = data;
        this.onInput = on.onInput;
        this.isEditor = on.isEditor;
    }
    Editor.prototype.types = function (type, data) {
        var _this = this;
        switch (type) {
            case exports.EditorDataEnum.PARAGRAPH: {
                var editor = data;
                return (React.createElement(TypographyComponent, { className: "ce-Paragraph", component: "div" },
                    React.createElement("span", { dangerouslySetInnerHTML: { __html: editor.text }, contentEditable: this.isEditor, suppressContentEditableWarning: true, onBlur: function (ee) { return _this.onInput(ee, exports.EditorDataEnum.PARAGRAPH); } })));
            }
            case exports.EditorDataEnum.DELIMITER: {
                return (React.createElement(DelimiterComponent, null));
            }
            case exports.EditorDataEnum.HEADER: {
                var editor = data;
                return (React.createElement(TypographyComponent, { className: "ce-Header", component: "h" + editor.level },
                    React.createElement("span", { dangerouslySetInnerHTML: { __html: editor.text }, contentEditable: this.isEditor, suppressContentEditableWarning: true, onBlur: function (ee) { return _this.onInput(ee, exports.EditorDataEnum.HEADER); } })));
            }
            case exports.EditorDataEnum.LIST: {
                var editor = data;
                return (React.createElement("div", { contentEditable: this.isEditor, suppressContentEditableWarning: true, key: editor.items.length, onBlur: function (e) {
                        var items = [];
                        var dt = e.currentTarget.childNodes[0].childNodes;
                        dt.forEach(function (value, key) {
                            items.push(value.textContent);
                        });
                        _this.onInput(items, exports.EditorDataEnum.LIST);
                    } },
                    React.createElement(ListComponent, { component: "ul", className: "ce-List ce-List--" + editor.style }, editor.items.map(function (item, index) { return (React.createElement(ListItemComponent, { className: "ce-ListItem", component: "li", key: index }, item)); }))));
            }
            case exports.EditorDataEnum.IMAGE: {
                var editor = data;
                return (React.createElement(ImageToolComponent, { hover: true, onClick: function () {
                        if (_this.isEditor) {
                            _this.onInput(null, exports.EditorDataEnum.IMAGE);
                        }
                    }, caption: editor.caption, image: editor.file.url }));
            }
            case exports.EditorDataEnum.CODE: {
                var editor = data;
                return (React.createElement("span", { key: editor.text, contentEditable: this.isEditor, suppressContentEditableWarning: true, onBlur: function (ee) { return _this.onInput(ee, exports.EditorDataEnum.CODE); } },
                    React.createElement(CodeComponent, null, editor.text)));
            }
            case exports.EditorDataEnum.LINK: {
                var editor = data;
                return (React.createElement(LinkToolComponent, { error: true, editor: this.isEditor, placeholder: "LINK" }, editor.text));
            }
        }
        return null;
    };
    Editor.prototype.render = function () {
        var _this = this;
        return this.data.map(function (item, index) {
            return (React.createElement(EditorBlockComponent, { index: index.toString(), key: index }, _this.types(item.type, item.data)));
        });
    };
    Editor.prototype.button = function (onClick) {
        return (React.createElement("svg", { style: {
                padding: 20,
            }, onClick: onClick, id: "dots", viewBox: "0 0 18 4" },
            React.createElement("g", { fillRule: "evenodd" },
                React.createElement("circle", { cx: "9", cy: "2", r: "2" }),
                React.createElement("circle", { cx: "2", cy: "2", r: "2" }),
                React.createElement("circle", { cx: "16", cy: "2", r: "2" }))));
    };
    Editor.prototype._actionSymbols = function () {
        return (React.createElement("div", { style: {
                display: "none"
            } },
            React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg" },
                React.createElement("symbol", { id: "arrow-down", viewBox: "0 0 14 14" },
                    React.createElement("path", { transform: "matrix(1 0 0 -1 0 14)", d: "M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z" })),
                React.createElement("symbol", { id: "arrow-up", viewBox: "0 0 14 14" },
                    React.createElement("path", { d: "M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z" })),
                React.createElement("symbol", { id: "bold" },
                    React.createElement("path", { d: "M5.997 14H1.72c-.618 0-1.058-.138-1.323-.415C.132 13.308 0 12.867 0 12.262V1.738C0 1.121.135.676.406.406.676.136 1.114 0 1.719 0h4.536c.669 0 1.248.041 1.738.124.49.083.93.242 1.318.478a3.458 3.458 0 0 1 1.461 1.752c.134.366.2.753.2 1.16 0 1.401-.7 2.426-2.1 3.075 1.84.586 2.76 1.726 2.76 3.42 0 .782-.2 1.487-.602 2.114a3.61 3.61 0 0 1-1.623 1.39 5.772 5.772 0 0 1-1.471.377c-.554.073-1.2.11-1.939.11zm-.21-6.217h-2.95v4.087h3.046c1.916 0 2.874-.69 2.874-2.072 0-.707-.248-1.22-.745-1.537-.496-.319-1.238-.478-2.225-.478zM2.837 2.13v3.619h2.597c.707 0 1.252-.067 1.638-.2.385-.134.68-.389.883-.765.16-.267.239-.566.239-.897 0-.707-.252-1.176-.755-1.409-.503-.232-1.27-.348-2.301-.348H2.836z" })),
                React.createElement("symbol", { id: "cross", viewBox: "0 0 237 237" },
                    React.createElement("path", { transform: "rotate(45 280.675 51.325)", d: "M191 191V73c0-5.523 4.477-10 10-10h25c5.523 0 10 4.477 10 10v118h118c5.523 0 10 4.477 10 10v25c0 5.523-4.477 10-10 10H236v118c0 5.523-4.477 10-10 10h-25c-5.523 0-10-4.477-10-10V236H73c-5.523 0-10-4.477-10-10v-25c0-5.523 4.477-10 10-10h118z" })),
                React.createElement("symbol", { id: "dots", viewBox: "0 0 18 4" },
                    React.createElement("g", { fillRule: "evenodd" },
                        React.createElement("circle", { cx: "9", cy: "2", r: "2" }),
                        React.createElement("circle", { cx: "2", cy: "2", r: "2" }),
                        React.createElement("circle", { cx: "16", cy: "2", r: "2" }))),
                React.createElement("symbol", { id: "italic" },
                    React.createElement("path", { d: "M19.211 15.326l-1.44 7.108c-.1.493-.305.865-.615 1.117a1.64 1.64 0 0 1-1.064.379c-.4 0-.697-.13-.894-.388-.197-.258-.247-.627-.15-1.108l1.426-7.036c.098-.486.297-.853.597-1.1.299-.245.648-.368 1.047-.368.399 0 .703.123.912.369.21.246.27.588.181 1.027zm-.831-2.663c-.38 0-.682-.116-.909-.35-.227-.232-.301-.561-.223-.987.07-.385.266-.703.588-.952.322-.25.665-.374 1.03-.374.353 0 .645.113.876.34.232.225.308.554.229.986-.077.42-.27.747-.58.983-.308.236-.646.354-1.011.354z" })),
                React.createElement("symbol", { id: "link" },
                    React.createElement("path", { d: "M15.439 21.153a4.202 4.202 0 0 0 2.72.63l-.985.986a4.202 4.202 0 1 1-5.943-5.945l2.093-2.093a4.202 4.202 0 0 1 5.934-.009l-1.655 1.656a5.886 5.886 0 0 1-.02.019 1.835 1.835 0 0 0-2.585.009l-2.093 2.093a1.836 1.836 0 0 0 2.534 2.654zm3.122-8.306a4.202 4.202 0 0 0-2.72-.63l.985-.986a4.202 4.202 0 1 1 5.943 5.945l-2.093 2.093a4.202 4.202 0 0 1-5.934.009l1.655-1.656.02-.019a1.835 1.835 0 0 0 2.585-.009l2.093-2.093a1.836 1.836 0 0 0-2.534-2.654z" })),
                React.createElement("symbol", { id: "plus", viewBox: "0 0 14 14" },
                    React.createElement("path", { d: "M8.05 5.8h4.625a1.125 1.125 0 0 1 0 2.25H8.05v4.625a1.125 1.125 0 0 1-2.25 0V8.05H1.125a1.125 1.125 0 0 1 0-2.25H5.8V1.125a1.125 1.125 0 0 1 2.25 0V5.8z" })),
                React.createElement("symbol", { id: "sad-face", viewBox: "0 0 52 52" },
                    React.createElement("path", { fill: "#D76B6B", fillRule: "nonzero", d: "M26 52C11.64 52 0 40.36 0 26S11.64 0 26 0s26 11.64 26 26-11.64 26-26 26zm0-3.25c12.564 0 22.75-10.186 22.75-22.75S38.564 3.25 26 3.25 3.25 13.436 3.25 26 13.436 48.75 26 48.75zM15.708 33.042a2.167 2.167 0 1 1 0-4.334 2.167 2.167 0 0 1 0 4.334zm23.834 0a2.167 2.167 0 1 1 0-4.334 2.167 2.167 0 0 1 0 4.334zm-15.875 5.452a1.083 1.083 0 1 1-1.834-1.155c1.331-2.114 3.49-3.179 6.334-3.179 2.844 0 5.002 1.065 6.333 3.18a1.083 1.083 0 1 1-1.833 1.154c-.913-1.45-2.366-2.167-4.5-2.167s-3.587.717-4.5 2.167z" })),
                React.createElement("symbol", { id: "unlink", viewBox: "0 0 16 18" },
                    React.createElement("path", { transform: "rotate(-45 8.358 11.636)", d: "M9.14 9.433c.008-.12-.087-.686-.112-.81a1.4 1.4 0 0 0-1.64-1.106l-3.977.772a1.4 1.4 0 0 0 .535 2.749l.935-.162s.019 1.093.592 2.223l-1.098.148A3.65 3.65 0 1 1 2.982 6.08l3.976-.773c1.979-.385 3.838.919 4.28 2.886.51 2.276-1.084 2.816-1.073 2.935.011.12-.394-1.59-1.026-1.696zm3.563-.875l2.105 3.439a3.65 3.65 0 0 1-6.19 3.868L6.47 12.431c-1.068-1.71-.964-2.295-.49-3.07.067-.107 1.16-1.466 1.48-.936-.12.036.9 1.33.789 1.398-.656.41-.28.76.13 1.415l2.145 3.435a1.4 1.4 0 0 0 2.375-1.484l-1.132-1.941c.42-.435 1.237-1.054.935-2.69zm1.88-2.256h3.4a1.125 1.125 0 0 1 0 2.25h-3.4a1.125 1.125 0 0 1 0-2.25zM11.849.038c.62 0 1.125.503 1.125 1.125v3.4a1.125 1.125 0 0 1-2.25 0v-3.4c0-.622.503-1.125 1.125-1.125z" })))));
    };
    Editor.prototype.actions = function (obj) {
        return (React.createElement(React.Fragment, null,
            this._actionSymbols(),
            React.createElement("div", { className: "ce-ActionIcons" },
                React.createElement("div", { className: "ce-settings__default-zone" },
                    React.createElement("div", { className: "ce-settings__button ce-tune-move-up", onClick: obj.up },
                        React.createElement("svg", { className: "icon icon--arrow-up", width: "14px", height: "14px" },
                            React.createElement("use", { xmlnsXlink: "http://www.w3.org/1999/xlink", xlinkHref: "#arrow-up" }))),
                    React.createElement("div", { className: "ce-settings__button ce-settings__button--delete", onClick: obj.close },
                        React.createElement("svg", { className: "icon icon--cross", width: "12px", height: "12px" },
                            React.createElement("use", { xmlnsXlink: "http://www.w3.org/1999/xlink", xlinkHref: "#cross" }))),
                    React.createElement("div", { className: "ce-settings__button ce-tune-move-down", onClick: obj.down },
                        React.createElement("svg", { className: "icon icon--arrow-down", width: "14px", height: "14px" },
                            React.createElement("use", { xmlnsXlink: "http://www.w3.org/1999/xlink", xlinkHref: "#arrow-down" })))))));
    };
    Editor.prototype.setFocus = function (focus) {
        this.focus = focus;
    };
    Editor.prototype.getFocus = function () {
        return this.focus;
    };
    Editor.prototype.setFocusTop = function (top) {
        this.focusTop = top;
    };
    Editor.prototype.getFocusTop = function () {
        return this.focusTop;
    };
    Editor.prototype.componentDidMount = function (callback) {
        var _this = this;
        document.addEventListener("keydown", function (e) { return _this.onScape(e, callback); });
    };
    Editor.prototype.componentWillUnmount = function () {
        // @ts-ignore
        document.removeEventListener("keydown", this.onScape);
    };
    Editor.prototype.onScape = function (evt, callback) {
        // @ts-ignore
        evt = evt || window.event;
        if (evt.keyCode == 27) {
            callback();
        }
    };
    Editor.prototype.close = function () {
        var _this = this;
        this.data = this.data.filter(function (item, index) { return index != _this.focus; });
    };
    Editor.prototype.down = function () {
        if (this.focus != this.data.length - 1) {
            this.data.splice(Number(this.focus) + 1, 0, this.data.splice(Number(this.focus), 1)[0]);
            this.focus = null;
        }
    };
    Editor.prototype.up = function () {
        if (this.focus != "0") {
            this.data.splice(Number(this.focus) - 1, 0, this.data.splice(Number(this.focus), 1)[0]);
            this.focus = null;
        }
    };
    Editor.prototype.setText = function (innerHTML) {
        var a = this.data[this.focus].data;
        a.text = innerHTML;
    };
    Editor.prototype.actionPlus = function (onClick) {
        return (React.createElement("svg", { onClick: onClick, className: "icon icon--plus", width: "14px", height: "14px" },
            React.createElement("use", { xmlnsXlink: "http://www.w3.org/1999/xlink", xlinkHref: "#plus" })));
    };
    Editor.prototype.actionsPlus = function (onClick) {
        var data = [
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.PARAGRAPH },
                React.createElement("svg", { enableBackground: "new 0 0 458.353 458.353", viewBox: "0 0 458.353 458.353", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "m200.529 0c-78.975 0-143.235 64.26-143.235 143.235s64.26 143.235 143.235 143.235h57.294v171.882h28.647v-429.705h57.294v429.706h28.647v-429.706h28.647v-28.647zm57.295 257.824h-57.294c-63.183 0-114.588-51.391-114.588-114.588s51.404-114.589 114.587-114.589h57.294v229.177z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.TABLE },
                React.createElement("svg", { width: "18", height: "14" },
                    React.createElement("path", { d: "M2.833 8v1.95a1.7 1.7 0 0 0 1.7 1.7h3.45V8h-5.15zm0-2h5.15V2.35h-3.45a1.7 1.7 0 0 0-1.7 1.7V6zm12.3 2h-5.15v3.65h3.45a1.7 1.7 0 0 0 1.7-1.7V8zm0-2V4.05a1.7 1.7 0 0 0-1.7-1.7h-3.45V6h5.15zM4.533.1h8.9a3.95 3.95 0 0 1 3.95 3.95v5.9a3.95 3.95 0 0 1-3.95 3.95h-8.9a3.95 3.95 0 0 1-3.95-3.95v-5.9A3.95 3.95 0 0 1 4.533.1z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.LIST },
                React.createElement("svg", { width: "17", height: "13", viewBox: "0 0 17 13", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "M5.625 4.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm0-4.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm0 9.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm-4.5-5a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25zm0-4.85a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25zm0 9.85a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.WARNING },
                React.createElement("svg", { width: "16", height: "17", viewBox: "0 0 320 294", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink" },
                    React.createElement("path", { d: "M160.5 97c12.426 0 22.5 10.074 22.5 22.5v28c0 12.426-10.074 22.5-22.5 22.5S138 159.926 138 147.5v-28c0-12.426 10.074-22.5 22.5-22.5zm0 83c14.636 0 26.5 11.864 26.5 26.5S175.136 233 160.5 233 134 221.136 134 206.5s11.864-26.5 26.5-26.5zm-.02-135c-6.102 0-14.05 8.427-23.842 25.28l-74.73 127.605c-12.713 21.444-17.806 35.025-15.28 40.742 2.527 5.717 8.519 9.175 17.974 10.373h197.255c5.932-1.214 10.051-4.671 12.357-10.373 2.307-5.702-1.812-16.903-12.357-33.603L184.555 70.281C174.608 53.427 166.583 45 160.48 45zm154.61 165.418c2.216 6.027 3.735 11.967 4.393 18.103.963 8.977.067 18.035-3.552 26.98-7.933 19.612-24.283 33.336-45.054 37.586l-4.464.913H61.763l-2.817-.357c-10.267-1.3-19.764-4.163-28.422-9.16-11.051-6.377-19.82-15.823-25.055-27.664-4.432-10.03-5.235-19.952-3.914-29.887.821-6.175 2.486-12.239 4.864-18.58 3.616-9.64 9.159-20.55 16.718-33.309L97.77 47.603c6.469-11.125 12.743-20.061 19.436-27.158 4.62-4.899 9.562-9.07 15.206-12.456C140.712 3.01 150.091 0 160.481 0c10.358 0 19.703 2.99 27.989 7.933 5.625 3.356 10.563 7.492 15.193 12.354 6.735 7.072 13.08 15.997 19.645 27.12l.142.24 76.986 134.194c6.553 10.46 11.425 19.799 14.654 28.577z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.CODE },
                React.createElement("svg", { width: "14", height: "14", viewBox: "0 -1 14 14", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "M3.177 6.852c.205.253.347.572.427.954.078.372.117.844.117 1.417 0 .418.01.725.03.92.02.18.057.314.107.396.046.075.093.117.14.134.075.027.218.056.42.083a.855.855 0 0 1 .56.297c.145.167.215.38.215.636 0 .612-.432.934-1.216.934-.457 0-.87-.087-1.233-.262a1.995 1.995 0 0 1-.853-.751 2.09 2.09 0 0 1-.305-1.097c-.014-.648-.029-1.168-.043-1.56-.013-.383-.034-.631-.06-.733-.064-.263-.158-.455-.276-.578a2.163 2.163 0 0 0-.505-.376c-.238-.134-.41-.256-.519-.371C.058 6.76 0 6.567 0 6.315c0-.37.166-.657.493-.846.329-.186.56-.342.693-.466a.942.942 0 0 0 .26-.447c.056-.2.088-.42.097-.658.01-.25.024-.85.043-1.802.015-.629.239-1.14.672-1.522C2.691.19 3.268 0 3.977 0c.783 0 1.216.317 1.216.921 0 .264-.069.48-.211.643a.858.858 0 0 1-.563.29c-.249.03-.417.076-.498.126-.062.04-.112.134-.139.291-.031.187-.052.562-.061 1.119a8.828 8.828 0 0 1-.112 1.378 2.24 2.24 0 0 1-.404.963c-.159.212-.373.406-.64.583.25.163.454.342.612.538zm7.34 0c.157-.196.362-.375.612-.538a2.544 2.544 0 0 1-.641-.583 2.24 2.24 0 0 1-.404-.963 8.828 8.828 0 0 1-.112-1.378c-.009-.557-.03-.932-.061-1.119-.027-.157-.077-.251-.14-.29-.08-.051-.248-.096-.496-.127a.858.858 0 0 1-.564-.29C8.57 1.401 8.5 1.185 8.5.921 8.5.317 8.933 0 9.716 0c.71 0 1.286.19 1.72.574.432.382.656.893.671 1.522.02.952.033 1.553.043 1.802.009.238.041.458.097.658a.942.942 0 0 0 .26.447c.133.124.364.28.693.466a.926.926 0 0 1 .493.846c0 .252-.058.446-.183.58-.109.115-.281.237-.52.371-.21.118-.377.244-.504.376-.118.123-.212.315-.277.578-.025.102-.045.35-.06.733-.013.392-.027.912-.042 1.56a2.09 2.09 0 0 1-.305 1.097c-.2.323-.486.574-.853.75a2.811 2.811 0 0 1-1.233.263c-.784 0-1.216-.322-1.216-.934 0-.256.07-.47.214-.636a.855.855 0 0 1 .562-.297c.201-.027.344-.056.418-.083.048-.017.096-.06.14-.134a.996.996 0 0 0 .107-.396c.02-.195.031-.502.031-.92 0-.573.039-1.045.117-1.417.08-.382.222-.701.427-.954z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.LINK },
                React.createElement("svg", { width: "13", height: "14", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "M8.567 13.629c.728.464 1.581.65 2.41.558l-.873.873A3.722 3.722 0 1 1 4.84 9.794L6.694 7.94a3.722 3.722 0 0 1 5.256-.008L10.484 9.4a5.209 5.209 0 0 1-.017.016 1.625 1.625 0 0 0-2.29.009l-1.854 1.854a1.626 1.626 0 0 0 2.244 2.35zm2.766-7.358a3.722 3.722 0 0 0-2.41-.558l.873-.873a3.722 3.722 0 1 1 5.264 5.266l-1.854 1.854a3.722 3.722 0 0 1-5.256.008L9.416 10.5a5.2 5.2 0 0 1 .017-.016 1.625 1.625 0 0 0 2.29-.009l1.854-1.854a1.626 1.626 0 0 0-2.244-2.35z", transform: "translate(-3.667 -2.7)" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.IMAGE },
                React.createElement("svg", { width: "17", height: "15", viewBox: "0 0 336 276", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "M291 150.242V79c0-18.778-15.222-34-34-34H79c-18.778 0-34 15.222-34 34v42.264l67.179-44.192 80.398 71.614 56.686-29.14L291 150.242zm-.345 51.622l-42.3-30.246-56.3 29.884-80.773-66.925L45 174.187V197c0 18.778 15.222 34 34 34h178c17.126 0 31.295-12.663 33.655-29.136zM79 0h178c43.63 0 79 35.37 79 79v118c0 43.63-35.37 79-79 79H79c-43.63 0-79-35.37-79-79V79C0 35.37 35.37 0 79 0z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.RAW },
                React.createElement("svg", { width: "19", height: "13" },
                    React.createElement("path", { d: "M18.004 5.794c.24.422.18.968-.18 1.328l-4.943 4.943a1.105 1.105 0 1 1-1.562-1.562l4.162-4.162-4.103-4.103A1.125 1.125 0 1 1 12.97.648l4.796 4.796c.104.104.184.223.239.35zm-15.142.547l4.162 4.162a1.105 1.105 0 1 1-1.562 1.562L.519 7.122c-.36-.36-.42-.906-.18-1.328a1.13 1.13 0 0 1 .239-.35L5.374.647a1.125 1.125 0 0 1 1.591 1.591L2.862 6.341z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.HEADER },
                React.createElement("svg", { width: "11", height: "14", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink" },
                    React.createElement("path", { d: "M7.6 8.15H2.25v4.525a1.125 1.125 0 0 1-2.25 0V1.125a1.125 1.125 0 1 1 2.25 0V5.9H7.6V1.125a1.125 1.125 0 0 1 2.25 0v11.55a1.125 1.125 0 0 1-2.25 0V8.15z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.QUOTE },
                React.createElement("svg", { width: "15", height: "14", viewBox: "0 0 15 14", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "M13.53 6.185l.027.025a1.109 1.109 0 0 1 0 1.568l-5.644 5.644a1.109 1.109 0 1 1-1.569-1.568l4.838-4.837L6.396 2.23A1.125 1.125 0 1 1 7.986.64l5.52 5.518.025.027zm-5.815 0l.026.025a1.109 1.109 0 0 1 0 1.568l-5.644 5.644a1.109 1.109 0 1 1-1.568-1.568l4.837-4.837L.58 2.23A1.125 1.125 0 0 1 2.171.64L7.69 6.158l.025.027z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.CHECKLIST },
                React.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "M7.5 15a7.5 7.5 0 1 1 0-15 7.5 7.5 0 0 1 0 15zm0-2.394a5.106 5.106 0 1 0 0-10.212 5.106 5.106 0 0 0 0 10.212zm-.675-4.665l2.708-2.708 1.392 1.392-2.708 2.708-1.392 1.391-2.971-2.971L5.245 6.36l1.58 1.58z" }))),
            React.createElement("li", { className: "ce-toolbox__button", "data-tool": exports.EditorDataEnum.DELIMITER },
                React.createElement("svg", { width: "19", height: "4", viewBox: "0 0 19 4", xmlns: "http://www.w3.org/2000/svg" },
                    React.createElement("path", { d: "M1.25 0H7a1.25 1.25 0 1 1 0 2.5H1.25a1.25 1.25 0 1 1 0-2.5zM11 0h5.75a1.25 1.25 0 0 1 0 2.5H11A1.25 1.25 0 0 1 11 0z" })))
        ];
        return (React.createElement("div", { className: "ce-toolbox" }, data.map(function (item, index) {
            return React.cloneElement(item, {
                key: index,
                onClick: function (e) {
                    var data = e.currentTarget.getAttribute("data-tool");
                    onClick(data);
                }
            });
        })));
    };
    Editor.prototype.addNewElement = function (e) {
        var element = null;
        switch (e) {
            case exports.EditorDataEnum.PARAGRAPH: {
                element = new EditorData(e, {
                    text: "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                });
                break;
            }
            case exports.EditorDataEnum.DELIMITER: {
                element = new EditorData(e, {});
                break;
            }
            case exports.EditorDataEnum.HEADER: {
                element = new EditorData(e, {
                    text: "What does it mean clean data output",
                    level: 2,
                });
                break;
            }
            case exports.EditorDataEnum.IMAGE: {
                element = new EditorData(e, {
                    file: {
                        url: "https://www.gettyimages.pt/gi-resources/images/Homepage/Hero/PT/PT_hero_42_153645159.jpg"
                    },
                    caption: "",
                });
                break;
            }
            case exports.EditorDataEnum.LIST: {
                element = new EditorData(e, {
                    style: "unordered",
                    items: [
                        "It is a block-styled editor",
                        "It returns clean data output in JSON",
                        "Designed to be extendable and pluggable with a simple API"
                    ]
                });
                break;
            }
            case exports.EditorDataEnum.LINK: {
                element = new EditorData(e, {
                    text: "https://github.com/softlightwebinfo/codeunic-library-sass-react-ts"
                });
                break;
            }
            case exports.EditorDataEnum.CODE: {
                element = new EditorData(exports.EditorDataEnum.CODE, {
                    text: "const para = document.querySelector('p');\n" +
                        "para.addEventListener('click', updateName);\n" +
                        "function updateName() {\n" +
                        "  let name = prompt('Ingresa un nuevo nombre');\n" +
                        "  para.textContent = 'Player 1: ' + name;\n" +
                        "}"
                });
                break;
            }
        }
        if (element) {
            if (this.focus) {
                this.data.splice(Number(this.focus) + 1, 0, element);
            }
            else {
                this.data.push(element);
            }
        }
    };
    Editor.prototype.setList = function (items) {
        var a = this.data[this.focus].data;
        a.items = items;
    };
    Editor.prototype.setImage = function (text) {
        var a = this.data[this.focus].data;
        a.file.url = text;
    };
    return Editor;
}());

var TableMessageAvatar = /** @class */ (function () {
    function TableMessageAvatar(name, title, subTitle, avatar) {
        this.name = name;
        this.title = title;
        this.subTitle = subTitle;
        this.src = avatar;
    }
    return TableMessageAvatar;
}());
var TableGroupSmall = /** @class */ (function () {
    function TableGroupSmall(name, data) {
        if (data === void 0) { data = []; }
        this.name = name;
        this.data = data;
    }
    return TableGroupSmall;
}());
var TableProgress = /** @class */ (function () {
    function TableProgress(value, color) {
        this.value = value;
        this.color = color;
    }
    return TableProgress;
}());
var TableLabel = /** @class */ (function () {
    function TableLabel(name, theme) {
        if (theme === void 0) { theme = "danger"; }
        this.name = name;
        this.theme = theme;
    }
    return TableLabel;
}());

var SidebarMenuItemHeader = /** @class */ (function () {
    function SidebarMenuItemHeader(name, icon) {
        this.name = name;
        this.icon = icon;
    }
    return SidebarMenuItemHeader;
}());
var SidebarMenuItemTitle = /** @class */ (function () {
    function SidebarMenuItemTitle(name, onClick) {
        this.name = name;
        this.onClick = onClick;
    }
    return SidebarMenuItemTitle;
}());
var SidebarMenuItemGroup = /** @class */ (function () {
    function SidebarMenuItemGroup(name, icon) {
        this.name = name;
        this.icon = icon;
    }
    return SidebarMenuItemGroup;
}());
var SidebarMenuItemChat = /** @class */ (function () {
    function SidebarMenuItemChat(name, icon, online, number, active) {
        if (active === void 0) { active = false; }
        this.name = name;
        this.icon = icon;
        this.online = online;
        this.number = number;
        this.active = active;
    }
    return SidebarMenuItemChat;
}());

var FormComponentModel = /** @class */ (function () {
    function FormComponentModel() {
    }
    FormComponentModel.prototype.setterProps = function (props) {
        var _this = this;
        Object.keys(props).forEach(function (value) {
            _this[value] = props[value];
        });
    };
    return FormComponentModel;
}());

var FormGroup = /** @class */ (function (_super) {
    __extends(FormGroup, _super);
    function FormGroup(props) {
        if (props === void 0) { props = {}; }
        var _this = _super.call(this) || this;
        _this.components = [];
        _this.setterProps(props);
        return _this;
    }
    FormGroup.prototype.Add = function (component) {
        this.components.push(component);
        return this;
    };
    FormGroup.prototype.render = function (index) {
        return (React__default['default'].createElement(FormGroupComponent, __assign({ key: index }, this), this.components.map(function (item, index) { return (item.render(index.toString())); })));
    };
    return FormGroup;
}(FormComponentModel));

var FormInput = /** @class */ (function (_super) {
    __extends(FormInput, _super);
    function FormInput(props) {
        var _this = _super.call(this) || this;
        _this.value = "";
        _this.setterProps(props);
        return _this;
    }
    FormInput.prototype.render = function (index) {
        return (React.createElement(TextFieldComponent, __assign({ key: index }, this)));
    };
    return FormInput;
}(FormComponentModel));

var FormLabel = /** @class */ (function (_super) {
    __extends(FormLabel, _super);
    function FormLabel(props) {
        if (props === void 0) { props = {}; }
        var _this = _super.call(this) || this;
        _this.setterProps(props);
        return _this;
    }
    FormLabel.prototype.render = function (index) {
        return (React.createElement(InputLabelComponent, __assign({ key: index }, this), this.children));
    };
    return FormLabel;
}(FormComponentModel));

var FormButton = /** @class */ (function (_super) {
    __extends(FormButton, _super);
    function FormButton(props) {
        var _this = _super.call(this) || this;
        _this.setterProps(props);
        return _this;
    }
    FormButton.prototype.render = function (index) {
        return (React.createElement(ButtonComponent, __assign({ key: index }, this), this.children));
    };
    return FormButton;
}(FormComponentModel));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Select-component {\n  display: block;\n  width: 100%;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #495057;\n  background-clip: padding-box;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  background-color: #fbfbfb;\n  border: 1px solid #e3e3e3;\n  border-radius: 4px;\n  height: 46px;\n  box-sizing: border-box;\n}");

function SelectComponent(props) {
    var _a = React.useState(false), initial = _a[0], setInitial = _a[1];
    var bm = new BEM("Select-component", {});
    bm.Append(props.className);
    var use = useFormLayout();
    var value = props.value;
    if (use) {
        value = use.values[props.id];
    }
    React.useEffect(function () {
        if (!initial) {
            use.addValue(props.id, isUndef(use.values[props.id]) ? props.value : use.values[props.id], props);
            setInitial(true);
        }
    });
    var onChange = function (e) {
        if (use) {
            use.addValue(props.id, e.target.value, props);
        }
        props.onChange && props.onChange(e);
    };
    return (React.createElement("select", { onChange: onChange, style: props.style, value: value, className: bm.toString() }, props.options.map(function (value, index) { return (React.createElement("option", { key: index, value: value.value }, value.label)); })));
}

var FormSelect = /** @class */ (function (_super) {
    __extends(FormSelect, _super);
    function FormSelect(props) {
        var _this = _super.call(this) || this;
        _this.setterProps(props);
        return _this;
    }
    FormSelect.prototype.render = function (key) {
        return (React.createElement(SelectComponent, __assign({}, this, { key: key })));
    };
    return FormSelect;
}(FormComponentModel));

var FormCheckbox = /** @class */ (function (_super) {
    __extends(FormCheckbox, _super);
    function FormCheckbox(props, label) {
        var _this = _super.call(this) || this;
        _this.setterProps(props);
        _this.label = label;
        return _this;
    }
    FormCheckbox.prototype.render = function (key) {
        var component = (React.createElement(CheckboxComponent, __assign({}, this, { key: key })));
        if (this.label) {
            return (React.createElement(FormControlLabelComponent, { control: component, label: this.label, key: key }));
        }
        return component;
    };
    return FormCheckbox;
}(FormComponentModel));

var FormComponent = /** @class */ (function () {
    function FormComponent() {
    }
    FormComponent.prototype.Input = function (props) {
        return new FormInput(props);
    };
    FormComponent.prototype.FormLabel = function (props) {
        return new FormLabel(props);
    };
    FormComponent.prototype.Button = function (props) {
        return new FormButton(props);
    };
    FormComponent.prototype.Select = function (props) {
        return new FormSelect(props);
    };
    FormComponent.prototype.Checkbox = function (props, label) {
        return new FormCheckbox(props, label);
    };
    return FormComponent;
}());

var Form = /** @class */ (function (_super) {
    __extends(Form, _super);
    function Form(id, props) {
        if (props === void 0) { props = {}; }
        var _this = _super.call(this) || this;
        _this.components = [];
        _this.id = id;
        _this.setterProps(props);
        return _this;
    }
    Form.prototype.Add = function (component) {
        this.components.push(component);
        return this;
    };
    Form.prototype.Group = function (props) {
        return new FormGroup(props);
    };
    Form.prototype.Component = function () {
        return new FormComponent();
    };
    Form.prototype.getId = function () {
        return this.id;
    };
    Form.prototype.getComponents = function () {
        return this.components;
    };
    return Form;
}(FormComponentModel));

var EditorComponent = /** @class */ (function (_super) {
    __extends(EditorComponent, _super);
    function EditorComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            text: "",
            isEditor: _this.props.isEditor,
            editor: new Editor(_this.props.data, {
                isEditor: _this.props.isEditor,
                onInput: function (e, type) {
                    if (type == exports.EditorDataEnum.CODE || type == exports.EditorDataEnum.HEADER || type == exports.EditorDataEnum.PARAGRAPH) {
                        _this.state.editor.setText(e.currentTarget.innerText);
                    }
                    else if (type == exports.EditorDataEnum.LIST) {
                        _this.state.editor.setList(e);
                    }
                    else if (type == exports.EditorDataEnum.IMAGE) {
                        _this.setState({
                            openModalImage: true,
                        });
                    }
                    _this.setState({
                        editor: _this.state.editor,
                    });
                }
            }),
            onInput: function (ee, type) {
                switch (type) {
                    case exports.EditorDataEnum.LINK: {
                        _this.state.editor.setText(ee.currentTarget.innerHTML);
                        break;
                    }
                }
                _this.setState({
                    editor: _this.state.editor,
                });
            },
            openMenu: false,
            openMenuPlus: false,
            openModalImage: false,
            onClick: function (e, obj) {
                if (!_this.props.isEditor) {
                    return;
                }
                _this.state.editor.setFocus(e);
                _this.state.editor.setFocusTop(obj.top);
                _this.setState({
                    editor: _this.state.editor,
                    openMenu: false,
                });
            }
        };
        _this.onClickAction = function (e) {
            _this.state.editor.addNewElement(Number(e));
            _this.setState({
                editor: _this.state.editor,
            });
        };
        _this.handleClose = function () { return _this.setState({ openModalImage: false }); };
        return _this;
    }
    EditorComponent.prototype.componentDidMount = function () {
        var _this = this;
        this.state.editor.componentDidMount(function () {
            _this.state.editor.setFocus(null);
            _this.state.editor.setFocusTop(0);
            _this.setState({
                editor: _this.state.editor,
                openMenu: false,
            });
        });
    };
    EditorComponent.prototype.componentWillUnmount = function () {
        this.state.editor.componentWillUnmount();
    };
    EditorComponent.prototype.plus = function (direction) {
        var _a;
        var _this = this;
        return (React.createElement("div", { className: "Editor-component__add" },
            React.createElement("div", { className: "ce-toolbar__plus" },
                React.createElement(MenuComponent, { style: {
                        maxWidth: "auto"
                    }, PaperProps: {
                        style: (_a = {
                                backgroundColor: "white"
                            },
                            _a[direction] = 0,
                            _a.minWidth = 114,
                            _a.maxWidth = 'initial',
                            _a)
                    }, keepMounted: true, id: "menu", open: this.state.openMenuPlus, trigger: this.state.editor.actionPlus(function () {
                        _this.setState({
                            openMenuPlus: true,
                        });
                    }), onClose: function () {
                        _this.setState({
                            openMenuPlus: false,
                        });
                    } }, this.state.editor.actionsPlus(function (e) {
                    if (direction == "left") {
                        _this.state.editor.setFocus(null);
                    }
                    _this.onClickAction(e);
                })))));
    };
    EditorComponent.prototype.render = function () {
        var _this = this;
        var bm = new BEM("Editor-component", {});
        return (React.createElement(EditorContext.Provider, { value: this.state },
            React.createElement("div", { className: bm.toString() },
                React.createElement("div", { className: "Editor-component__redactor" },
                    this.state.editor.render(),
                    this.props.isEditor && (React.createElement(React.Fragment, null,
                        this.plus("left"),
                        React.createElement("div", { className: "Editor-component__actions" },
                            React.createElement(ButtonComponent, { onClick: function () { return _this.props.onSave(_this.state.editor); } }, "Save"))))),
                this.props.isEditor && (React.createElement("div", { className: "Editor-component__icon " + (this.state.editor.getFocus() != null && "Editor-component__icon--open"), style: {
                        top: this.state.editor.getFocusTop(),
                    } },
                    React.createElement("span", null,
                        this.plus("right"),
                        React.createElement(MenuComponent, { PaperProps: {
                                style: {
                                    backgroundColor: "white",
                                    right: 0,
                                    minWidth: 114,
                                }
                            }, keepMounted: true, id: "menu", open: this.state.openMenu, trigger: this.state.editor.button(function () {
                                _this.setState({
                                    openMenu: true,
                                });
                            }), onClose: function () {
                                _this.setState({
                                    openMenu: false,
                                });
                            } }, this.state.editor.actions({
                            down: function () {
                                _this.state.editor.down();
                                _this.setState({
                                    editor: _this.state.editor,
                                    openMenu: false,
                                });
                            },
                            close: function () {
                                _this.state.editor.close();
                                _this.setState({
                                    editor: _this.state.editor,
                                    openMenu: false,
                                });
                            },
                            up: function () {
                                _this.state.editor.up();
                                _this.setState({
                                    editor: _this.state.editor,
                                    openMenu: false,
                                });
                            }
                        }))))),
                this.props.isEditor && (React.createElement(DialogComponent, { open: this.state.openModalImage, onClose: this.handleClose, portal: true },
                    React.createElement(DialogTitleComponent, null, "Image settings"),
                    React.createElement(DialogContentComponent, null,
                        React.createElement(DialogContentTextComponent, null, "To subscribe to this website, please enter your email address here. We will send updates occasionally."),
                        React.createElement(TextFieldComponent, { placeholder: "Url image", id: "eedit", value: this.state.text, onChange: function (e) { return _this.setState({ text: e.target.value }); } })),
                    React.createElement(DialogActionsComponent, null,
                        React.createElement(ButtonComponent, { variant: "color", onClick: this.handleClose, theme: "primary" }, "Cancel"),
                        React.createElement(ButtonComponent, { variant: "color", onClick: function () {
                                _this.state.editor.setImage(_this.state.text);
                                _this.setState({ text: "", editor: _this.state.editor });
                                _this.handleClose();
                            }, theme: "primary" }, "Save")))),
                ";")));
    };
    return EditorComponent;
}(React.Component));

___$insertStyle(".Delimiter-component {\n  line-height: 1.6em;\n  width: 100%;\n  text-align: center;\n  padding: 0.7em 0;\n}\n.Delimiter-component:before {\n  display: inline-block;\n  content: \"***\";\n  font-size: 30px;\n  line-height: 65px;\n  height: 30px;\n  letter-spacing: 0.2em;\n}");

function DelimiterComponent(props) {
    var bm = new BEM("Delimiter-component", {});
    return (React.createElement("div", { className: bm.toString() }));
}

___$insertStyle(".Preloader-component {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-size: cover;\n  margin: auto;\n  position: relative;\n  background-color: var(--bg-color);\n  background-position: center center;\n}\n.Preloader-component:before {\n  content: \"\";\n  position: absolute;\n  z-index: 3;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  border: 2px solid var(--bg-color);\n  border-top-color: var(--front-color);\n  left: 50%;\n  top: 50%;\n  margin-top: -30px;\n  margin-left: -30px;\n  animation: image-preloader-spin 2s infinite linear;\n  box-sizing: border-box;\n}\n\n@keyframes image-preloader-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    -moz-transform: rotate(360deg);\n    -ms-transform: rotate(360deg);\n    -o-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}");

function PreloaderComponent(props) {
    var bm = new BEM("Preloader-component", {});
    return (React.createElement("div", { className: bm.toString() }));
}

___$insertStyle(".ImageTool-component {\n  --bg-color: #CDD1E0;\n  --front-color: #388AE5;\n  --border-color: #E8E8EB;\n  padding: 0.7em 0;\n}\n.ImageTool-component__caption {\n  border: 1px solid rgba(201, 201, 204, 0.48);\n  -webkit-box-shadow: inset 0 1px 2px 0 rgba(35, 44, 72, 0.06);\n  box-shadow: inset 0 1px 2px 0 rgba(35, 44, 72, 0.06);\n  border-radius: 3px;\n  padding: 10px 12px;\n  outline: none;\n  width: 100%;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.ImageTool-component__image {\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 10px;\n}\n.ImageTool-component__picture {\n  max-width: 100%;\n  vertical-align: bottom;\n  display: block;\n}\n.ImageTool-component .Preloader-component {\n  display: none;\n}\n.ImageTool-component--loading .ImageTool-component__image {\n  min-height: 200px;\n  display: flex;\n  border: 1px solid var(--border-color);\n  background-color: #fff;\n}\n.ImageTool-component--loading .ImageTool-component__caption {\n  display: none;\n}\n.ImageTool-component--loading .ImageTool-component__picture {\n  display: none;\n}\n.ImageTool-component--loading .Preloader-component {\n  display: block;\n}\n.ImageTool-component--hover:hover {\n  cursor: pointer;\n}");

function ImageToolComponent(props) {
    var _a = React.useState(true), loading = _a[0], setLoading = _a[1];
    var bm = new BEM("ImageTool-component", {
        loading: loading,
        hover: props.hover,
    });
    var onLoad = function () {
        setLoading(false);
    };
    return (React.createElement("div", { onClick: props.onClick, className: bm.toString() },
        React.createElement("div", { className: "ImageTool-component__image" },
            React.createElement(PreloaderComponent, null),
            React.createElement("img", { onLoad: onLoad, className: "ImageTool-component__picture", src: props.image, alt: props.caption })),
        props.caption && (React.createElement("div", { className: "ImageTool-component__caption" }, props.caption))));
}

___$insertStyle(".DashStats-component {\n  align-items: center;\n  display: flex;\n  flex-flow: column wrap;\n  flex-grow: 1;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n.DashStats-component + .DashStats-component {\n  border-left: 1px solid #e7e7e7;\n}");

function DashStatsComponent(props) {
    var bm = new BEM("DashStats-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { className: bm.toString(), style: props.style },
        React.createElement(TypographyComponent, { component: "h4", variant: "h4" }, props.title.toString()),
        React.createElement(TypographyComponent, { component: "p", color: "gray" }, props.subTitle)));
}

___$insertStyle(".DashCard-component {\n  background-color: #fff;\n  border: 1px solid #eaeaea;\n  border-radius: 8px;\n  color: #575757;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  height: auto;\n  padding: 15px;\n}\n.DashCard-component__container {\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  align-items: center;\n}");

function DashCardComponent(props) {
    var bm = new BEM("DashCard-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: "DashCard-component__container" }, props.children)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.TextNumber-component--default {\n  color: #e0e0e0;\n}\n.TextNumber-component--success {\n  color: #26a69a;\n}\n.TextNumber-component--primary {\n  color: #90caf9;\n}\n.TextNumber-component--secondary {\n  color: #f48fb1;\n}\n.TextNumber-component--info {\n  color: #328cd6;\n}\n.TextNumber-component--white {\n  color: white;\n}\n.TextNumber-component--orange {\n  color: #ff9b44;\n}\n.TextNumber-component--danger {\n  color: #f62d51;\n}\n.TextNumber-component--disabled {\n  color: rgba(255, 255, 255, 0.12);\n}\n.TextNumber-component--gray {\n  color: gray;\n}\n.TextNumber-component--mixPurple {\n  color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}");

function TextNumberComponent(props) {
    var bm = new BEM("TextNumber-component", {
        danger: props.number <= 0,
        success: props.number > 0,
    });
    return (React.createElement(TypographyComponent, { variant: "body2", component: "span", style: props.style, className: bm.toString() }, (props.data && props.data(props)) || props.number.toString()));
}

___$insertStyle(".Progress-component {\n  display: -ms-flexbox;\n  display: flex;\n  overflow: hidden;\n  font-size: 0.75rem;\n  background-color: #e9ecef;\n  border-radius: 0.25rem;\n  margin-bottom: 0.5rem;\n  height: 5px;\n}\n.Progress-component__bar {\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -ms-flex-pack: center;\n  justify-content: center;\n  color: #fff;\n  text-align: center;\n  white-space: nowrap;\n  transition: width 0.6s ease;\n  height: inherit;\n}\n.Progress-component--multiple {\n  height: auto;\n  min-height: 5px;\n}\n.Progress-component__is-multiple {\n  padding: 2px;\n}");

function ProgressBarComponent(props) {
    var bm = new BEM("Progress-component", {});
    var _a = props.color, color = _a === void 0 ? "primary" : _a;
    return (React.createElement("div", { style: { width: props.value + "%" }, className: [bm.Children("bar", "h-bg--" + color), props.className].join(" ") }, props.isMultiple ? (React.createElement(TypographyComponent, { component: "span", variant: "caption" }, props.value + "%")) : null));
}
function ProgressComponent(props) {
    var bm = new BEM("Progress-component", {
        multiple: !!props.data,
    });
    var data = props.data;
    var getData = function () {
        if (data == undefined) {
            return React.createElement(ProgressBarComponent, { value: props.value, color: props.color });
        }
        return data.map(function (item, index) { return (React.createElement(ProgressBarComponent, { isMultiple: true, className: bm.Children("is-multiple"), key: index, value: item.value, color: item.color })); });
    };
    return (React.createElement("div", { style: props.style, className: bm.toString() }, getData()));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.StatsInfo-component {\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  padding: 15px;\n  text-align: center;\n}\n.StatsInfo-component__top {\n  margin: 0;\n  color: black;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n.StatsInfo-component .Progress-component {\n  margin-bottom: 0;\n}\n.StatsInfo-component + .StatsInfo-component {\n  margin-top: 5px;\n}");

function StatsInfoComponent(props) {
    var bm = new BEM("StatsInfo-component", {});
    bm.Append(props.className);
    var getStat = function () { return (React.createElement(React.Fragment, null,
        React.createElement("b", null, props.value),
        ' / ',
        React.createElement("small", null, props.total))); };
    var getValue = function () { return (((props.value / props.total) * 100).toFixed(2)); };
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("p", { className: bm.Children("top") },
            React.createElement(TypographyComponent, { component: "span", variant: "body1" }, props.title),
            React.createElement("span", null, getStat())),
        React.createElement(ProgressComponent, { value: Number(getValue()) })));
}

___$insertStyle(".StatBox-component {\n  background-color: #f9f9f9;\n  border: 1px solid #e3e3e3;\n  padding: 20px;\n  text-align: center;\n}");

function StatBoxComponent(props) {
    var bm = new BEM("StatBox-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(TypographyComponent, { component: "p", variant: "body1" }, props.title),
        React.createElement(TypographyComponent, { component: "h3", variant: "h4" }, props.value.toString())));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Dot-component {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  border: 2px solid #90caf9;\n  display: inline-flex;\n  position: relative;\n}\n.Dot-component:before {\n  content: \"\";\n  border: 2px solid #90caf9;\n  border-radius: 50%;\n  width: 2px;\n  height: 2px;\n  margin: auto;\n  background-color: #90caf9;\n}\n.Dot-component--color-default {\n  border-color: #e0e0e0;\n}\n.Dot-component--color-default:before {\n  border-color: #e0e0e0;\n  background-color: #e0e0e0;\n}\n.Dot-component--color-success {\n  border-color: #26a69a;\n}\n.Dot-component--color-success:before {\n  border-color: #26a69a;\n  background-color: #26a69a;\n}\n.Dot-component--color-primary {\n  border-color: #90caf9;\n}\n.Dot-component--color-primary:before {\n  border-color: #90caf9;\n  background-color: #90caf9;\n}\n.Dot-component--color-secondary {\n  border-color: #f48fb1;\n}\n.Dot-component--color-secondary:before {\n  border-color: #f48fb1;\n  background-color: #f48fb1;\n}\n.Dot-component--color-info {\n  border-color: #328cd6;\n}\n.Dot-component--color-info:before {\n  border-color: #328cd6;\n  background-color: #328cd6;\n}\n.Dot-component--color-white {\n  border-color: white;\n}\n.Dot-component--color-white:before {\n  border-color: white;\n  background-color: white;\n}\n.Dot-component--color-orange {\n  border-color: #ff9b44;\n}\n.Dot-component--color-orange:before {\n  border-color: #ff9b44;\n  background-color: #ff9b44;\n}\n.Dot-component--color-danger {\n  border-color: #f62d51;\n}\n.Dot-component--color-danger:before {\n  border-color: #f62d51;\n  background-color: #f62d51;\n}\n.Dot-component--color-disabled {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.Dot-component--color-disabled:before {\n  border-color: rgba(255, 255, 255, 0.12);\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.Dot-component--color-gray {\n  border-color: gray;\n}\n.Dot-component--color-gray:before {\n  border-color: gray;\n  background-color: gray;\n}\n.Dot-component--color-mixPurple {\n  border-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.Dot-component--color-mixPurple:before {\n  border-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n  background-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}");

function DotComponent(props) {
    var bm = new BEM("Dot-component", {
        color: props.color,
    });
    bm.Append(props.className);
    return (React.createElement("span", { style: props.style, className: bm.toString() }));
}

___$insertStyle(".Table-component {\n  border-collapse: collapse;\n  width: 100%;\n  color: #333;\n}\n.Table-component-responsive {\n  display: block;\n  width: 100%;\n  overflow-x: auto;\n}");

function TableComponent(props) {
    var bm = new BEM("Table-component", {});
    bm.Append(props.className);
    var header = [];
    var footer = [];
    var body = [];
    React.Children.forEach(props.children, function (child, index) {
        if (child.type.displayName == "TableRowComponent") {
            if (child.props.header) {
                header.push(child);
                return;
            }
            else if (child.props.footer) {
                footer.push(child);
                return;
            }
        }
        body.push(child);
        return;
    });
    return (React.createElement("div", { className: "Table-component-responsive" },
        React.createElement("table", { style: props.style, className: bm.toString() },
            header,
            React.createElement("tbody", null, body),
            footer)));
}

___$insertStyle(".TableRow-component {\n  background-color: #fff;\n  box-shadow: 0 0 3px #e5e5e5;\n}");

function TableRowComponent(props) {
    var bm = new BEM("TableRow-component", {
        header: props.header,
    });
    bm.Append(props.className);
    var Content = function (_a) {
        var children = _a.children;
        return (React.createElement("tr", { style: props.style, className: bm.toString() }, children));
    };
    if (props.header) {
        return (React.createElement("thead", null,
            React.createElement(Content, null, React.Children.map(props.children, function (child) {
                // @ts-ignore
                return React.cloneElement(child, {
                    header: true
                });
            }))));
    }
    if (props.footer) {
        return (React.createElement("tfoot", null,
            React.createElement(Content, null, React.Children.map(props.children, function (child) {
                // @ts-ignore
                return React.cloneElement(child, {
                    header: true
                });
            }))));
    }
    return React.createElement(Content, null, props.children);
}
TableRowComponent.displayName = "TableRowComponent";

___$insertStyle(".TableCol-component {\n  padding: 0.75rem;\n  vertical-align: top;\n  border-top: 1px solid #dee2e6;\n  white-space: nowrap;\n  text-align: left;\n}\n.TableRow-component--header .TableCol-component, .TableRow-component--header .TableCol-component {\n  border-bottom: 2px solid #dee2e6;\n  letter-spacing: 0.05em;\n  padding: 10px 8px;\n  vertical-align: middle;\n}\n.TableCol-component:first-child {\n  padding-left: 15px;\n}\ntbody .TableCol-component {\n  padding: 10px 8px;\n  vertical-align: middle;\n}\n.TableCol-component--align-left {\n  text-align: left;\n}\n.TableCol-component--align-justify {\n  text-align: justify;\n}\n.TableCol-component--align-center {\n  text-align: center;\n}\n.TableCol-component--align-right {\n  text-align: right;\n}");

function TableColComponent(props) {
    var bm = new BEM("TableCol-component", {
        align: props.align,
    });
    var Component = props.header ? "th" : "td";
    return (React.createElement(Component, { style: props.style, className: bm.toString() }, props.children));
}
TableColComponent.displayName = "TableColComponent";

___$insertStyle(".MessageAvatar-component {\n  display: flex;\n  align-items: center;\n}\n.MessageAvatar-component__avatar {\n  margin-right: 10px;\n}");

function MessageAvatarComponent(props) {
    var bm = new BEM("MessageAvatar-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(AvatarComponent, { mini: props.mini, src: props.src, className: bm.Children("avatar") }, props.name),
        React.createElement("div", { className: bm.Children("right") },
            React.createElement(TypographyComponent, { variant: "body1" }, props.title),
            React.createElement(TypographyComponent, { variant: "caption", color: "gray" }, props.subTitle))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Dropdown-component {\n  position: relative;\n  display: inline-flex;\n}\n.Dropdown-component__trigger {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  color: #333;\n  display: inline-flex;\n  min-width: 100px;\n  border-radius: 50px;\n  padding: 4px;\n}\n.Dropdown-component__trigger:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}\n.Dropdown-component__trigger::after {\n  display: inline-block;\n  margin-left: 0.255em;\n  vertical-align: 0.255em;\n  content: \"\";\n  border-top: 0.3em solid;\n  border-right: 0.3em solid transparent;\n  border-bottom: 0;\n  border-left: 0.3em solid transparent;\n}\n.Dropdown-component__trigger:hover {\n  background-color: #f7f7f7;\n}\n.Dropdown-component__trigger-custom:hover {\n  opacity: 0.7;\n  cursor: pointer;\n}\n.Dropdown-component__icon {\n  margin-right: 5px;\n}\n.Dropdown-component__menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  left: auto;\n}");

function useComponentVisible(initialIsVisible) {
    var _a = React.useState(initialIsVisible), isComponentVisible = _a[0], setIsComponentVisible = _a[1];
    var ref = React.useRef(null);
    var handleHideDropdown = function (event) {
        if (event.key === 'Escape') {
            setIsComponentVisible(false);
        }
    };
    var handleClickOutside = function (event) {
        if (ref.current && !ref.current.contains(event.target)) {
            setIsComponentVisible(false);
        }
    };
    React.useEffect(function () {
        document.addEventListener('keydown', handleHideDropdown, true);
        document.addEventListener('click', handleClickOutside, true);
        return function () {
            document.removeEventListener('keydown', handleHideDropdown, true);
            document.removeEventListener('click', handleClickOutside, true);
        };
    });
    return { ref: ref, isComponentVisible: isComponentVisible, setIsComponentVisible: setIsComponentVisible };
}

function DropdownComponent(props) {
    var _a = useComponentVisible(false), ref = _a.ref, isComponentVisible = _a.isComponentVisible, setIsComponentVisible = _a.setIsComponentVisible;
    var bm = new BEM("Dropdown-component", {
        open: props.open,
    });
    bm.Append(props.className);
    var onClick = function (e) {
        setIsComponentVisible(!isComponentVisible);
    };
    var onSelected = function (e) {
        setIsComponentVisible(false);
        props.onChange && props.onChange(e);
    };
    var getValue = function () {
        var value = props.data.find(function (i) { return i.value == props.value; });
        if (value) {
            return (React.createElement(React.Fragment, null,
                // @ts-ignore
                React.cloneElement(value.icon, {
                    className: bm.Children("icon"),
                }),
                value.label));
        }
        return "-- Select --";
    };
    var Menu = null;
    if (props.menu) {
        Menu = React.cloneElement(props.menu(this), {
            onClick: onSelected,
            className: bm.Children("menu"),
            open: isComponentVisible,
        });
    }
    return (React.createElement("div", { ref: ref, style: props.style, className: bm.toString() },
        !props.trigger && (React.createElement("span", { className: bm.Children("trigger"), onClick: onClick }, getValue())),
        props.trigger && (React.createElement("span", { className: bm.Children("trigger-custom"), onClick: onClick }, props.trigger)),
        props.menu ? Menu : (React.createElement(DropdownMenuComponent, { onClick: onSelected, className: bm.Children("menu"), open: isComponentVisible, data: props.data }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.DropdownMenu-component {\n  z-index: 1000;\n  margin: 0.125rem 0 0;\n  color: #212529;\n  text-align: left;\n  list-style: none;\n  background-clip: padding-box;\n  display: none;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 3px;\n  transform-origin: left top 0;\n  box-shadow: inherit;\n  background-color: #fff;\n  bottom: auto;\n  font-size: 13px;\n  min-width: 120px;\n  padding: 0;\n}\n.DropdownMenu-component__item {\n  display: flex;\n  align-items: center;\n  clear: both;\n  font-weight: 400;\n  color: #212529;\n  text-align: inherit;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n  padding: 5px 10px;\n}\n.DropdownMenu-component__item:hover {\n  color: #16181b;\n  text-decoration: none;\n  background-color: #f8f9fa;\n  cursor: pointer;\n}\n.DropdownMenu-component__icon {\n  margin-right: 5px;\n}\n.DropdownMenu-component--open {\n  display: flex;\n  flex-direction: column;\n}");

function DropdownMenuComponent(props) {
    var bm = new BEM("DropdownMenu-component", {
        open: props.open,
    });
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.data.map(function (item, index) { return (React.createElement("a", { key: index, onClick: function (e) { return props.onClick && props.onClick(item); }, className: bm.Children("item") },
        // @ts-ignore
        React.cloneElement(item.icon, {
            className: bm.Children("icon"),
        }),
        item.label)); })));
}

___$insertStyle(".Sidebar-component {\n  background-color: #34444c;\n  border-right: 1px solid transparent;\n  bottom: 0;\n  left: 0;\n  margin-top: 0;\n  position: fixed;\n  top: 0;\n  transition: all 0.2s ease-in-out 0s;\n  width: 230px;\n  z-index: 1001;\n}\nheader + .Sidebar-component {\n  top: 60px;\n}");

function SidebarComponent(props) {
    var bm = new BEM("Sidebar-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Dialog-component {\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n  margin: 32px;\n  position: relative;\n  overflow-y: auto;\n  display: flex;\n  max-height: calc(100% - 64px);\n  flex-direction: column;\n  max-width: 600px;\n}");

function DialogComponent(props) {
    var bm = new BEM("Dialog-component", {});
    return (React.createElement(OverlayComponent, { open: props.open, portal: props.portal },
        React.createElement("div", { className: bm.toString() }, props.children)));
}

___$insertStyle(".DialogActions-component {\n  flex: 0 0 auto;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  justify-content: flex-end;\n}");

function DialogActionsComponent(props) {
    var bm = new BEM("DialogActions-component", {});
    return (React.createElement("div", { className: bm.toString() }, props.children));
}

___$insertStyle(".DialogContent-component {\n  flex: 1 1 auto;\n  padding: 8px 24px;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}");

function DialogContentComponent(props) {
    var bm = new BEM("DialogContent-component", {});
    return (React.createElement("div", { className: bm.toString() }, props.children));
}

___$insertStyle(".DialogTitle-component {\n  flex: 0 0 auto;\n  margin: 0;\n  padding: 16px 24px;\n}");

function DialogTitleComponent(props) {
    var bm = new BEM("DialogTitle-component", {});
    return (React.createElement("div", { className: bm.toString() },
        React.createElement(TypographyComponent, { component: "h2", variant: "h6" }, props.children)));
}

___$insertStyle(".DialogContentText-component {\n  margin-bottom: 20px;\n}");

function DialogContentTextComponent(props) {
    var bm = new BEM("DialogContentText-component", {});
    return (React.createElement(TypographyComponent, { component: "p", variant: "body1", color: "text-secondary", className: bm.toString() }, props.children));
}

___$insertStyle(".LinkTool-component {\n  position: relative;\n}\n.LinkTool-component__input {\n  position: relative;\n}\n.LinkTool-component__input svg {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  left: 15px;\n}\n.LinkTool-component__input-holder {\n  display: block;\n  border: 1px solid rgba(201, 201, 204, 0.48);\n  -webkit-box-shadow: inset 0 1px 2px 0 rgba(35, 44, 72, 0.06);\n  box-shadow: inset 0 1px 2px 0 rgba(35, 44, 72, 0.06);\n  border-radius: 3px;\n  outline: none;\n  width: 100%;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  padding: 10px 12px 10px 38px;\n  background-repeat: no-repeat;\n  background-position: 15px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  color: #000;\n}\n.LinkTool-component__input-holder::before {\n  position: absolute;\n  content: attr(data-placeholder);\n  color: #707684;\n  font-weight: normal;\n  opacity: 0;\n}\n.LinkTool-component--isContent .LinkTool-component__input-holder::before {\n  opacity: 1;\n}\n.LinkTool-component--error {\n  box-shadow: inset 0 1px 3px 0 rgba(146, 62, 62, 0.05);\n  background-color: #fff3f6;\n  border-color: #f3e0e0;\n  color: #a95a5a;\n}");

function LinkToolComponent(props) {
    var use = useEditorContext();
    var bm = new BEM("LinkTool-component", {
        error: props.error,
        isContent: !props.children
    });
    var onInput = function (ee) {
        use.onInput(ee, exports.EditorDataEnum.LINK);
    };
    return (React.createElement("div", { className: bm.toString() },
        React.createElement("div", { className: "LinkTool-component__input" },
            React.createElement("svg", { enableBackground: "new 0 0 512 512", height: "14", viewBox: "0 0 512 512", width: "14", xmlns: "http://www.w3.org/2000/svg" },
                React.createElement("g", null,
                    React.createElement("path", { d: "m162.457 434.408c-23.427 23.444-61.433 23.444-84.861 0-23.075-23.059-23.443-60.249-1.088-83.757l126.465-126.465c-39.112-10.458-82.481-.832-113.748 28.904l-56.231 56.231c-44.711 47.015-43.975 121.395 2.176 167.514 46.855 46.887 122.867 46.887 169.722 0l51.846-51.846c31.425-31.404 41.785-75.905 31.086-115.947z" }),
                    React.createElement("path", { d: "m476.835 35.17c-46.119-46.151-120.499-46.887-167.514-2.176l-56.231 56.231c-29.735 31.268-39.361 74.637-28.904 113.748l126.465-126.465c23.508-22.355 60.697-21.987 83.757 1.088 23.444 23.428 23.443 61.433 0 84.861l-125.367 125.367c40.042 10.699 84.543.34 115.947-31.086l51.846-51.846c46.888-46.855 46.888-122.867.001-169.722z" }),
                    React.createElement("path", { d: "m164.774 347.228c11.714 11.722 30.717 11.722 42.43 0l140.023-140.023c11.722-11.714 11.722-30.717 0-42.43-11.53-11.538-30.125-11.722-41.878-.544l-141.12 141.12c-11.177 11.752-10.993 30.347.545 41.877z" }))),
            React.createElement("a", { href: props.children, className: "LinkTool-component__input-holder", contentEditable: props.editor, suppressContentEditableWarning: true, onBlur: function (ee) { return props.editor && onInput(ee); }, "data-placeholder": props.placeholder }, props.children))));
}

___$insertStyle(".Overlay-component {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  outline: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  position: fixed;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  opacity: 0;\n}\n.Overlay-component--open {\n  z-index: 9;\n  opacity: 1;\n}");

function OverlayComponent(props) {
    var bm = new BEM("Overlay-component", {
        open: props.open,
    });
    var content = (React.createElement("div", { className: bm.toString() }, props.children));
    if (!props.portal) {
        return content;
    }
    return (React.createElement(PortalComponent, null, content));
}

var PortalComponent = function (_a) {
    var children = _a.children, _b = _a.className, className = _b === void 0 ? 'root-portal' : _b, _c = _a.element, element = _c === void 0 ? 'div' : _c;
    if (typeof window == 'undefined')
        return children;
    var container = React.useState(function () {
        var el = document.createElement(element);
        el.classList.add(className);
        return el;
    })[0];
    React.useEffect(function () {
        document.body.appendChild(container);
        return function () {
            document.body.removeChild(container);
        };
    }, []);
    return reactDom.createPortal(children, container);
};

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Card-component {\n  overflow: hidden;\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.Card-component--rounded {\n  border-radius: 4px;\n}\n.Card-component--variant-outlined {\n  border: 1px solid rgba(255, 255, 255, 0.12);\n}");

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
}

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}var AsyncMode=l;var ConcurrentMode=m;var ContextConsumer=k;var ContextProvider=h;var Element=c;var ForwardRef=n;var Fragment=e;var Lazy=t;var Memo=r;var Portal=d;
var Profiler=g;var StrictMode=f;var Suspense=p;var isAsyncMode=function(a){return A(a)||z(a)===l};var isConcurrentMode=A;var isContextConsumer=function(a){return z(a)===k};var isContextProvider=function(a){return z(a)===h};var isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};var isForwardRef=function(a){return z(a)===n};var isFragment=function(a){return z(a)===e};var isLazy=function(a){return z(a)===t};
var isMemo=function(a){return z(a)===r};var isPortal=function(a){return z(a)===d};var isProfiler=function(a){return z(a)===g};var isStrictMode=function(a){return z(a)===f};var isSuspense=function(a){return z(a)===p};
var isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};var typeOf=z;

var reactIs_production_min = {
	AsyncMode: AsyncMode,
	ConcurrentMode: ConcurrentMode,
	ContextConsumer: ContextConsumer,
	ContextProvider: ContextProvider,
	Element: Element,
	ForwardRef: ForwardRef,
	Fragment: Fragment,
	Lazy: Lazy,
	Memo: Memo,
	Portal: Portal,
	Profiler: Profiler,
	StrictMode: StrictMode,
	Suspense: Suspense,
	isAsyncMode: isAsyncMode,
	isConcurrentMode: isConcurrentMode,
	isContextConsumer: isContextConsumer,
	isContextProvider: isContextProvider,
	isElement: isElement,
	isForwardRef: isForwardRef,
	isFragment: isFragment,
	isLazy: isLazy,
	isMemo: isMemo,
	isPortal: isPortal,
	isProfiler: isProfiler,
	isStrictMode: isStrictMode,
	isSuspense: isSuspense,
	isValidElementType: isValidElementType,
	typeOf: typeOf
};

var reactIs_development = createCommonjsModule(function (module, exports) {



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}
});
var reactIs_development_1 = reactIs_development.AsyncMode;
var reactIs_development_2 = reactIs_development.ConcurrentMode;
var reactIs_development_3 = reactIs_development.ContextConsumer;
var reactIs_development_4 = reactIs_development.ContextProvider;
var reactIs_development_5 = reactIs_development.Element;
var reactIs_development_6 = reactIs_development.ForwardRef;
var reactIs_development_7 = reactIs_development.Fragment;
var reactIs_development_8 = reactIs_development.Lazy;
var reactIs_development_9 = reactIs_development.Memo;
var reactIs_development_10 = reactIs_development.Portal;
var reactIs_development_11 = reactIs_development.Profiler;
var reactIs_development_12 = reactIs_development.StrictMode;
var reactIs_development_13 = reactIs_development.Suspense;
var reactIs_development_14 = reactIs_development.isAsyncMode;
var reactIs_development_15 = reactIs_development.isConcurrentMode;
var reactIs_development_16 = reactIs_development.isContextConsumer;
var reactIs_development_17 = reactIs_development.isContextProvider;
var reactIs_development_18 = reactIs_development.isElement;
var reactIs_development_19 = reactIs_development.isForwardRef;
var reactIs_development_20 = reactIs_development.isFragment;
var reactIs_development_21 = reactIs_development.isLazy;
var reactIs_development_22 = reactIs_development.isMemo;
var reactIs_development_23 = reactIs_development.isPortal;
var reactIs_development_24 = reactIs_development.isProfiler;
var reactIs_development_25 = reactIs_development.isStrictMode;
var reactIs_development_26 = reactIs_development.isSuspense;
var reactIs_development_27 = reactIs_development.isValidElementType;
var reactIs_development_28 = reactIs_development.typeOf;

var reactIs = createCommonjsModule(function (module) {

if (process.env.NODE_ENV === 'production') {
  module.exports = reactIs_production_min;
} else {
  module.exports = reactIs_development;
}
});

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret;

var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};

var checkPropTypes_1 = checkPropTypes;

var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning$1 = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$1 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning$1(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!reactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$1(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning$1('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has$1(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$1(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = objectAssign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = reactIs;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = factoryWithThrowingShims();
}
});

function CardComponent(props) {
    var bm = new BEM("Card-component", {
        rounded: props.rounded != undefined ? props.rounded : true,
        variant: props.variant,
    });
    bm.Append(props.className);
    return (React.createElement("div", { onClick: props.onClick, style: props.style, className: bm.toString() }, props.children));
}
CardComponent.propTypes = {
    rounded: propTypes.bool,
};

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardContent-component {\n  padding: 16px;\n}");

function CardContentComponent(props) {
    var bm = new BEM("CardContent-component", {});
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardHeader-component {\n  display: flex;\n  padding: 16px;\n  align-items: center;\n}\n.CardHeader-component__avatar {\n  flex: 0 0 auto;\n  margin-right: 16px;\n}\n.CardHeader-component__content {\n  flex: 1 1 auto;\n}\n.CardHeader-component__action {\n  flex: 0 0 auto;\n  align-self: flex-start;\n  margin-top: -8px;\n  margin-right: -8px;\n}\n.CardHeader-component__title {\n  display: block;\n}\n.CardHeader-component__subheader {\n  display: block;\n  color: rgba(255, 255, 255, 0.7);\n}");

function CardHeaderComponent(props) {
    var bm = new BEM("CardHeader-component", {});
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: "CardHeader-component__avatar" }, props.avatar),
        React.createElement("div", { className: "CardHeader-component__content" },
            React.createElement("span", { className: "CardHeader-component__title" }, props.title),
            React.createElement("span", { className: "CardHeader-component__subheader" }, props.subheader)),
        React.createElement("div", { className: "CardHeader-component__action" }, props.action)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardActions-component {\n  display: flex;\n  padding-bottom: 8px;\n  align-items: center;\n}\n.CardActions-component > *:not(:first-child) {\n  margin-left: 8px !important;\n}\n.CardActions-component--separate {\n  padding: 16px;\n}");

function CardActionsComponent(props) {
    var bm = new BEM("CardActions-component", {
        separate: props.separate,
    });
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardActionArea-component {\n  color: inherit;\n  border: 0;\n  cursor: pointer;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  padding: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  border-radius: 0;\n  vertical-align: middle;\n  -moz-appearance: none;\n  justify-content: center;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: transparent;\n  width: 100%;\n  display: block;\n  text-align: inherit;\n}\n.CardActionArea-component:hover {\n  text-decoration: none;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.08);\n}");

function CardActionAreaComponent(props) {
    var bm = new BEM("CardActionArea-component", {});
    return (React.createElement("button", { onClick: props.onClick, type: "button", style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardTitle-component {\n  color: #1f1f1f;\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 20px;\n}");

function CardTitleComponent(props) {
    var bm = new BEM("CardTitle-component", {});
    return (React.createElement(TypographyComponent, { style: props.style, className: bm.toString(), component: "h4", variant: "h6" }, props.title));
}

var r$1=Array.isArray,t$1=function(n){if(!n)return "";if("string"==typeof n)return n;if("object"!=typeof n)return "";var e,f,i="";if(r$1(n)){if(0===(f=n.length))return "";if(1===f)return t$1(n[0]);for(var o=0;o<f;)(e=t$1(n[o++]))&&(i+=(i&&" ")+e);return i}for(e in n)n[e]&&e&&(i+=(i&&" ")+e);return i};function n$1(){var r=arguments.length;if(0===r)return "";if(1===r)return t$1(arguments[0]);for(var n,e=0,f="";e<r;)(n=t$1(arguments[e++]))&&(f+=(f&&" ")+n);return f}

function e$1(e,i,t,o){for(;i>=t&&!e("(min-resolution: "+i/o+"dppx)").matches;)i--;return i}function i(i){if(void 0===i&&(i=window),!i)return 1;if(void 0!==i.devicePixelRatio)return i.devicePixelRatio;var t=i.document.frames;return void 0!==t?void 0!==t.devicePixelRatio?t.devicePixelRatio:t.screen.deviceXDPI/t.screen.systemXDPI:void 0!==i.matchMedia?function(i){for(var t=i.matchMedia,o=10,n=.1,r=1,a=o,c=0;c<4;c++)o=(a=10*e$1(t,o,n,r))+9,n=a,r*=10;return a/r}(i):1}

(function (AXIS_DIRECTION) {
    AXIS_DIRECTION["X"] = "x";
    AXIS_DIRECTION["Y"] = "y";
})(exports.AXIS_DIRECTION || (exports.AXIS_DIRECTION = {}));
(function (TRACK_CLICK_BEHAVIOR) {
    TRACK_CLICK_BEHAVIOR["JUMP"] = "jump";
    TRACK_CLICK_BEHAVIOR["STEP"] = "step";
})(exports.TRACK_CLICK_BEHAVIOR || (exports.TRACK_CLICK_BEHAVIOR = {}));

(function (ETableColumnType) {
    ETableColumnType[ETableColumnType["LABEL"] = 0] = "LABEL";
    ETableColumnType[ETableColumnType["GROUP_SMALL"] = 1] = "GROUP_SMALL";
    ETableColumnType[ETableColumnType["PROGRESS"] = 2] = "PROGRESS";
    ETableColumnType[ETableColumnType["ACTION"] = 3] = "ACTION";
    ETableColumnType[ETableColumnType["COMPONENT"] = 4] = "COMPONENT";
    ETableColumnType[ETableColumnType["STRING"] = 5] = "STRING";
    ETableColumnType[ETableColumnType["NUMBER"] = 6] = "NUMBER";
    ETableColumnType[ETableColumnType["DATE"] = 7] = "DATE";
    ETableColumnType[ETableColumnType["MESSAGE_AVATAR"] = 8] = "MESSAGE_AVATAR";
    ETableColumnType[ETableColumnType["STATUS"] = 9] = "STATUS";
})(exports.ETableColumnType || (exports.ETableColumnType = {}));

var Emittr = /** @class */ (function () {
    function Emittr(maxHandlers) {
        if (maxHandlers === void 0) { maxHandlers = 10; }
        this.setMaxHandlers(maxHandlers);
        this._handlers = Object.create(null);
    }
    Emittr._callEventHandlers = function (emitter, handlers, args) {
        if (!handlers.length) {
            return;
        }
        if (handlers.length === 1) {
            Reflect.apply(handlers[0], emitter, args);
            return;
        }
        handlers = __spreadArrays(handlers);
        var idx;
        for (idx = 0; idx < handlers.length; idx++) {
            Reflect.apply(handlers[idx], emitter, args);
        }
    };
    Emittr.prototype.setMaxHandlers = function (count) {
        if (!isNum(count) || count <= 0) {
            throw new TypeError("Expected maxHandlers to be a positive number, got '" + count + "' of type " + typeof count);
        }
        this._maxHandlers = count;
        return this;
    };
    Emittr.prototype.getMaxHandlers = function () {
        return this._maxHandlers;
    };
    Emittr.prototype.emit = function (name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (typeof this._handlers[name] !== "object" || !Array.isArray(this._handlers[name])) {
            return false;
        }
        Emittr._callEventHandlers(this, this._handlers[name], args);
        return true;
    };
    Emittr.prototype.on = function (name, handler) {
        Emittr._addHandler(this, name, handler);
        return this;
    };
    Emittr.prototype.prependOn = function (name, handler) {
        Emittr._addHandler(this, name, handler, true);
        return this;
    };
    Emittr.prototype.once = function (name, handler) {
        if (!isFun(handler)) {
            throw new TypeError("Expected event handler to be a function, got " + typeof handler);
        }
        Emittr._addHandler(this, name, this._wrapOnceHandler(name, handler));
        return this;
    };
    Emittr.prototype.prependOnce = function (name, handler) {
        if (!isFun(handler)) {
            throw new TypeError("Expected event handler to be a function, got " + typeof handler);
        }
        Emittr._addHandler(this, name, this._wrapOnceHandler(name, handler), true);
        return this;
    };
    Emittr.prototype.off = function (name, handler) {
        Emittr._removeHandler(this, name, handler);
        return this;
    };
    Emittr.prototype.removeAllHandlers = function () {
        var handlers = this._handlers;
        this._handlers = Object.create(null);
        var removeHandlers = handlers["removeHandler"];
        delete handlers["removeHandler"];
        var idx, eventName;
        for (eventName in handlers) {
            for (idx = handlers[eventName].length - 1; idx >= 0; idx--) {
                Emittr._callEventHandlers(this, removeHandlers, [
                    eventName,
                    handlers[eventName][idx].handler || handlers[eventName][idx],
                ]);
            }
        }
        return this;
    };
    Emittr.prototype._wrapOnceHandler = function (name, handler) {
        var onceState = {
            fired: false,
            handler: handler,
            wrappedHandler: undefined,
            emitter: this,
            event: name,
        };
        var wrappedHandler = Emittr._onceWrapper.bind(onceState);
        onceState.wrappedHandler = wrappedHandler;
        wrappedHandler.handler = handler;
        wrappedHandler.event = name;
        return wrappedHandler;
    };
    Emittr._addHandler = function (emitter, name, handler, prepend) {
        if (prepend === void 0) { prepend = false; }
        if (!isFun(handler)) {
            throw new TypeError("Expected event handler to be a function, got " + typeof handler);
        }
        emitter._handlers[name] = emitter._handlers[name] || [];
        emitter.emit("addHandler", name, handler);
        prepend ? emitter._handlers[name].unshift(handler) : emitter._handlers[name].push(handler);
        return emitter;
    };
    Emittr._onceWrapper = function _onceWrapper() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!this.fired) {
            this.fired = true;
            this.emitter.off(this.event, this.wrappedHandler);
            Reflect.apply(this.handler, this.emitter, args);
        }
    };
    Emittr._removeHandler = function (emitter, name, handler) {
        if (!isFun(handler)) {
            throw new TypeError("Expected event handler to be a function, got " + typeof handler);
        }
        if (isUndef(emitter._handlers[name]) || !emitter._handlers[name].length) {
            return emitter;
        }
        var idx = -1;
        if (emitter._handlers[name].length === 1) {
            if (emitter._handlers[name][0] === handler || emitter._handlers[name][0].handler === handler) {
                idx = 0;
                handler = emitter._handlers[name][0].handler || emitter._handlers[name][0];
            }
        }
        else {
            for (idx = emitter._handlers[name].length - 1; idx >= 0; idx--) {
                if (emitter._handlers[name][idx] === handler ||
                    emitter._handlers[name][idx].handler === handler) {
                    handler = emitter._handlers[name][idx].handler || emitter._handlers[name][idx];
                    break;
                }
            }
        }
        if (idx === -1) {
            return emitter;
        }
        idx === 0 ? emitter._handlers[name].shift() : emitter._handlers[name].splice(idx, 1);
        emitter.emit("removeHandler", name, handler);
        return emitter;
    };
    return Emittr;
}());

var defaultStyle = {
    holder: {
        position: "relative",
        width: "100%",
        height: "100%",
    },
    wrapper: {
        position: "absolute",
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
    },
    content: {
        boxSizing: "border-box",
    },
    track: {
        common: {
            position: "absolute",
            overflow: "hidden",
            borderRadius: 4,
            background: "rgba(0,0,0,.1)",
            userSelect: "none",
        },
        x: {
            height: 10,
            width: "calc(100% - 20px)",
            bottom: 0,
            left: 10,
        },
        y: {
            width: 10,
            height: "calc(100% - 20px)",
            top: 10,
        },
    },
    thumb: {
        common: {
            cursor: "pointer",
            borderRadius: 4,
            background: "rgba(0,0,0,.4)",
        },
        x: {
            height: "100%",
            width: 0,
        },
        y: {
            width: "100%",
            height: 0,
        },
    },
};

var RAFLoop = /** @class */ (function () {
    function RAFLoop() {
        var _this = this;
        /**
         * @description List of targets to update
         */
        this.targets = [];
        /**
         * @description ID of requested animation frame. Valuable only if loop is active and has items to iterate.
         */
        this.animationFrameID = 0;
        /**
         * @description Loop's state.
         */
        this._isActive = false;
        /**
         * @description Start the loop if it wasn't yet.
         */
        this.start = function () {
            if (!_this._isActive && _this.targets.length) {
                _this._isActive = true;
                _this.animationFrameID && cancelAnimationFrame(_this.animationFrameID);
                _this.animationFrameID = requestAnimationFrame(_this.rafCallback);
            }
            return _this;
        };
        /**
         * @description Stop the loop if is was active.
         */
        this.stop = function () {
            if (_this._isActive) {
                _this._isActive = false;
                _this.animationFrameID && cancelAnimationFrame(_this.animationFrameID);
                _this.animationFrameID = 0;
            }
            return _this;
        };
        /**
         * @description Add target to the iteration list if it's not there.
         */
        this.addTarget = function (target, silent) {
            if (silent === void 0) { silent = false; }
            if (_this.targets.indexOf(target) === -1) {
                _this.targets.push(target);
                _this.targets.length === 1 && !silent && _this.start();
            }
            return _this;
        };
        /**
         * @description Remove target from iteration list if it was there.
         */
        this.removeTarget = function (target) {
            var idx = _this.targets.indexOf(target);
            if (idx !== -1) {
                _this.targets.splice(idx, 1);
                _this.targets.length === 0 && _this.stop();
            }
            return _this;
        };
        /**
         * @description Callback that called each animation frame.
         */
        this.rafCallback = function () {
            if (!_this._isActive) {
                return 0;
            }
            for (var i = 0; i < _this.targets.length; i++) {
                !_this.targets[i]._unmounted && _this.targets[i].update();
            }
            return (_this.animationFrameID = requestAnimationFrame(_this.rafCallback));
        };
    }
    Object.defineProperty(RAFLoop.prototype, "isActive", {
        /**
         * @description Loop's state.
         */
        get: function () {
            return this._isActive;
        },
        enumerable: false,
        configurable: true
    });
    return RAFLoop;
}());
var Loop = new RAFLoop();

var classnames = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
});

var shims = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findInArray = findInArray;
exports.isFunction = isFunction;
exports.isNum = isNum;
exports.int = int;
exports.dontSetMe = dontSetMe;

// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc
function findInArray(array
/*: Array<any> | TouchList*/
, callback
/*: Function*/
)
/*: any*/
{
  for (var i = 0, length = array.length; i < length; i++) {
    if (callback.apply(callback, [array[i], i, array])) return array[i];
  }
}

function isFunction(func
/*: any*/
)
/*: boolean %checks*/
{
  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';
}

function isNum(num
/*: any*/
)
/*: boolean %checks*/
{
  return typeof num === 'number' && !isNaN(num);
}

function int(a
/*: string*/
)
/*: number*/
{
  return parseInt(a, 10);
}

function dontSetMe(props
/*: Object*/
, propName
/*: string*/
, componentName
/*: string*/
) {
  if (props[propName]) {
    return new Error("Invalid prop ".concat(propName, " passed to ").concat(componentName, " - do not set this, set it on the child."));
  }
}
});

unwrapExports(shims);
var shims_1 = shims.findInArray;
var shims_2 = shims.isFunction;
var shims_3 = shims.isNum;
var shims_4 = shims.dontSetMe;

var getPrefix_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPrefix = getPrefix;
exports.browserPrefixToKey = browserPrefixToKey;
exports.browserPrefixToStyle = browserPrefixToStyle;
exports.default = void 0;
var prefixes = ['Moz', 'Webkit', 'O', 'ms'];

function getPrefix()
/*: string*/
{
  var prop
  /*: string*/
  = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';
  // Checking specifically for 'window.document' is for pseudo-browser server-side
  // environments that define 'window' as the global context.
  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)
  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';
  var style = window.document.documentElement.style;
  if (prop in style) return '';

  for (var i = 0; i < prefixes.length; i++) {
    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];
  }

  return '';
}

function browserPrefixToKey(prop
/*: string*/
, prefix
/*: string*/
)
/*: string*/
{
  return prefix ? "".concat(prefix).concat(kebabToTitleCase(prop)) : prop;
}

function browserPrefixToStyle(prop
/*: string*/
, prefix
/*: string*/
)
/*: string*/
{
  return prefix ? "-".concat(prefix.toLowerCase(), "-").concat(prop) : prop;
}

function kebabToTitleCase(str
/*: string*/
)
/*: string*/
{
  var out = '';
  var shouldCapitalize = true;

  for (var i = 0; i < str.length; i++) {
    if (shouldCapitalize) {
      out += str[i].toUpperCase();
      shouldCapitalize = false;
    } else if (str[i] === '-') {
      shouldCapitalize = true;
    } else {
      out += str[i];
    }
  }

  return out;
} // Default export is the prefix itself, like 'Moz', 'Webkit', etc
// Note that you may have to re-test for certain things; for instance, Chrome 50
// can handle unprefixed `transform`, but not unprefixed `user-select`


var _default = getPrefix();

exports.default = _default;
});

unwrapExports(getPrefix_1);
var getPrefix_2 = getPrefix_1.getPrefix;
var getPrefix_3 = getPrefix_1.browserPrefixToKey;
var getPrefix_4 = getPrefix_1.browserPrefixToStyle;

var domFns = createCommonjsModule(function (module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchesSelector = matchesSelector;
exports.matchesSelectorAndParentsTo = matchesSelectorAndParentsTo;
exports.addEvent = addEvent;
exports.removeEvent = removeEvent;
exports.outerHeight = outerHeight;
exports.outerWidth = outerWidth;
exports.innerHeight = innerHeight;
exports.innerWidth = innerWidth;
exports.offsetXYFromParent = offsetXYFromParent;
exports.createCSSTransform = createCSSTransform;
exports.createSVGTransform = createSVGTransform;
exports.getTranslation = getTranslation;
exports.getTouch = getTouch;
exports.getTouchIdentifier = getTouchIdentifier;
exports.addUserSelectStyles = addUserSelectStyles;
exports.removeUserSelectStyles = removeUserSelectStyles;
exports.addClassName = addClassName;
exports.removeClassName = removeClassName;



var _getPrefix = _interopRequireWildcard(getPrefix_1);

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var matchesSelectorFunc = '';

function matchesSelector(el
/*: Node*/
, selector
/*: string*/
)
/*: boolean*/
{
  if (!matchesSelectorFunc) {
    matchesSelectorFunc = (0, shims.findInArray)(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {
      // $FlowIgnore: Doesn't think elements are indexable
      return (0, shims.isFunction)(el[method]);
    });
  } // Might not be found entirely (not an Element?) - in that case, bail
  // $FlowIgnore: Doesn't think elements are indexable


  if (!(0, shims.isFunction)(el[matchesSelectorFunc])) return false; // $FlowIgnore: Doesn't think elements are indexable

  return el[matchesSelectorFunc](selector);
} // Works up the tree to the draggable itself attempting to match selector.


function matchesSelectorAndParentsTo(el
/*: Node*/
, selector
/*: string*/
, baseNode
/*: Node*/
)
/*: boolean*/
{
  var node = el;

  do {
    if (matchesSelector(node, selector)) return true;
    if (node === baseNode) return false;
    node = node.parentNode;
  } while (node);

  return false;
}

function addEvent(el
/*: ?Node*/
, event
/*: string*/
, handler
/*: Function*/
, inputOptions
/*: Object*/
)
/*: void*/
{
  if (!el) return;

  var options = _objectSpread({
    capture: true
  }, inputOptions);

  if (el.addEventListener) {
    el.addEventListener(event, handler, options);
  } else if (el.attachEvent) {
    el.attachEvent('on' + event, handler);
  } else {
    // $FlowIgnore: Doesn't think elements are indexable
    el['on' + event] = handler;
  }
}

function removeEvent(el
/*: ?Node*/
, event
/*: string*/
, handler
/*: Function*/
, inputOptions
/*: Object*/
)
/*: void*/
{
  if (!el) return;

  var options = _objectSpread({
    capture: true
  }, inputOptions);

  if (el.removeEventListener) {
    el.removeEventListener(event, handler, options);
  } else if (el.detachEvent) {
    el.detachEvent('on' + event, handler);
  } else {
    // $FlowIgnore: Doesn't think elements are indexable
    el['on' + event] = null;
  }
}

function outerHeight(node
/*: HTMLElement*/
)
/*: number*/
{
  // This is deliberately excluding margin for our calculations, since we are using
  // offsetTop which is including margin. See getBoundPosition
  var height = node.clientHeight;
  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
  height += (0, shims.int)(computedStyle.borderTopWidth);
  height += (0, shims.int)(computedStyle.borderBottomWidth);
  return height;
}

function outerWidth(node
/*: HTMLElement*/
)
/*: number*/
{
  // This is deliberately excluding margin for our calculations, since we are using
  // offsetLeft which is including margin. See getBoundPosition
  var width = node.clientWidth;
  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
  width += (0, shims.int)(computedStyle.borderLeftWidth);
  width += (0, shims.int)(computedStyle.borderRightWidth);
  return width;
}

function innerHeight(node
/*: HTMLElement*/
)
/*: number*/
{
  var height = node.clientHeight;
  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
  height -= (0, shims.int)(computedStyle.paddingTop);
  height -= (0, shims.int)(computedStyle.paddingBottom);
  return height;
}

function innerWidth(node
/*: HTMLElement*/
)
/*: number*/
{
  var width = node.clientWidth;
  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);
  width -= (0, shims.int)(computedStyle.paddingLeft);
  width -= (0, shims.int)(computedStyle.paddingRight);
  return width;
} // Get from offsetParent


function offsetXYFromParent(evt
/*: {clientX: number, clientY: number}*/
, offsetParent
/*: HTMLElement*/
, scale
/*: number*/
)
/*: ControlPosition*/
{
  var isBody = offsetParent === offsetParent.ownerDocument.body;
  var offsetParentRect = isBody ? {
    left: 0,
    top: 0
  } : offsetParent.getBoundingClientRect();
  var x = (evt.clientX + offsetParent.scrollLeft - offsetParentRect.left) / scale;
  var y = (evt.clientY + offsetParent.scrollTop - offsetParentRect.top) / scale;
  return {
    x: x,
    y: y
  };
}

function createCSSTransform(controlPos
/*: ControlPosition*/
, positionOffset
/*: PositionOffsetControlPosition*/
)
/*: Object*/
{
  var translation = getTranslation(controlPos, positionOffset, 'px');
  return _defineProperty({}, (0, _getPrefix.browserPrefixToKey)('transform', _getPrefix.default), translation);
}

function createSVGTransform(controlPos
/*: ControlPosition*/
, positionOffset
/*: PositionOffsetControlPosition*/
)
/*: string*/
{
  var translation = getTranslation(controlPos, positionOffset, '');
  return translation;
}

function getTranslation(_ref2, positionOffset
/*: PositionOffsetControlPosition*/
, unitSuffix
/*: string*/
)
/*: string*/
{
  var x = _ref2.x,
      y = _ref2.y;
  var translation = "translate(".concat(x).concat(unitSuffix, ",").concat(y).concat(unitSuffix, ")");

  if (positionOffset) {
    var defaultX = "".concat(typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix);
    var defaultY = "".concat(typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix);
    translation = "translate(".concat(defaultX, ", ").concat(defaultY, ")") + translation;
  }

  return translation;
}

function getTouch(e
/*: MouseTouchEvent*/
, identifier
/*: number*/
)
/*: ?{clientX: number, clientY: number}*/
{
  return e.targetTouches && (0, shims.findInArray)(e.targetTouches, function (t) {
    return identifier === t.identifier;
  }) || e.changedTouches && (0, shims.findInArray)(e.changedTouches, function (t) {
    return identifier === t.identifier;
  });
}

function getTouchIdentifier(e
/*: MouseTouchEvent*/
)
/*: ?number*/
{
  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;
  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;
} // User-select Hacks:
//
// Useful for preventing blue highlights all over everything when dragging.
// Note we're passing `document` b/c we could be iframed


function addUserSelectStyles(doc
/*: ?Document*/
) {
  if (!doc) return;
  var styleEl = doc.getElementById('react-draggable-style-el');

  if (!styleEl) {
    styleEl = doc.createElement('style');
    styleEl.type = 'text/css';
    styleEl.id = 'react-draggable-style-el';
    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\n';
    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\n';
    doc.getElementsByTagName('head')[0].appendChild(styleEl);
  }

  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');
}

function removeUserSelectStyles(doc
/*: ?Document*/
) {
  if (!doc) return;

  try {
    if (doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection'); // $FlowIgnore: IE

    if (doc.selection) {
      // $FlowIgnore: IE
      doc.selection.empty();
    } else {
      // Remove selection caused by scroll, unless it's a focused input
      // (we use doc.defaultView in case we're in an iframe)
      var selection = (doc.defaultView || window).getSelection();

      if (selection && selection.type !== 'Caret') {
        selection.removeAllRanges();
      }
    }
  } catch (e) {// probably IE
  }
}

function addClassName(el
/*: HTMLElement*/
, className
/*: string*/
) {
  if (el.classList) {
    el.classList.add(className);
  } else {
    if (!el.className.match(new RegExp("(?:^|\\s)".concat(className, "(?!\\S)")))) {
      el.className += " ".concat(className);
    }
  }
}

function removeClassName(el
/*: HTMLElement*/
, className
/*: string*/
) {
  if (el.classList) {
    el.classList.remove(className);
  } else {
    el.className = el.className.replace(new RegExp("(?:^|\\s)".concat(className, "(?!\\S)"), 'g'), '');
  }
}
});

unwrapExports(domFns);
var domFns_1 = domFns.matchesSelector;
var domFns_2 = domFns.matchesSelectorAndParentsTo;
var domFns_3 = domFns.addEvent;
var domFns_4 = domFns.removeEvent;
var domFns_5 = domFns.outerHeight;
var domFns_6 = domFns.outerWidth;
var domFns_7 = domFns.innerHeight;
var domFns_8 = domFns.innerWidth;
var domFns_9 = domFns.offsetXYFromParent;
var domFns_10 = domFns.createCSSTransform;
var domFns_11 = domFns.createSVGTransform;
var domFns_12 = domFns.getTranslation;
var domFns_13 = domFns.getTouch;
var domFns_14 = domFns.getTouchIdentifier;
var domFns_15 = domFns.addUserSelectStyles;
var domFns_16 = domFns.removeUserSelectStyles;
var domFns_17 = domFns.addClassName;
var domFns_18 = domFns.removeClassName;

var positionFns = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBoundPosition = getBoundPosition;
exports.snapToGrid = snapToGrid;
exports.canDragX = canDragX;
exports.canDragY = canDragY;
exports.getControlPosition = getControlPosition;
exports.createCoreData = createCoreData;
exports.createDraggableData = createDraggableData;





function getBoundPosition(draggable
/*: Draggable*/
, x
/*: number*/
, y
/*: number*/
)
/*: [number, number]*/
{
  // If no bounds, short-circuit and move on
  if (!draggable.props.bounds) return [x, y]; // Clone new bounds

  var bounds = draggable.props.bounds;
  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);
  var node = findDOMNode(draggable);

  if (typeof bounds === 'string') {
    var ownerDocument = node.ownerDocument;
    var ownerWindow = ownerDocument.defaultView;
    var boundNode;

    if (bounds === 'parent') {
      boundNode = node.parentNode;
    } else {
      boundNode = ownerDocument.querySelector(bounds);
    }

    if (!(boundNode instanceof ownerWindow.HTMLElement)) {
      throw new Error('Bounds selector "' + bounds + '" could not find an element.');
    }

    var nodeStyle = ownerWindow.getComputedStyle(node);
    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.

    bounds = {
      left: -node.offsetLeft + (0, shims.int)(boundNodeStyle.paddingLeft) + (0, shims.int)(nodeStyle.marginLeft),
      top: -node.offsetTop + (0, shims.int)(boundNodeStyle.paddingTop) + (0, shims.int)(nodeStyle.marginTop),
      right: (0, domFns.innerWidth)(boundNode) - (0, domFns.outerWidth)(node) - node.offsetLeft + (0, shims.int)(boundNodeStyle.paddingRight) - (0, shims.int)(nodeStyle.marginRight),
      bottom: (0, domFns.innerHeight)(boundNode) - (0, domFns.outerHeight)(node) - node.offsetTop + (0, shims.int)(boundNodeStyle.paddingBottom) - (0, shims.int)(nodeStyle.marginBottom)
    };
  } // Keep x and y below right and bottom limits...


  if ((0, shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);
  if ((0, shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom); // But above left and top limits.

  if ((0, shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);
  if ((0, shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);
  return [x, y];
}

function snapToGrid(grid
/*: [number, number]*/
, pendingX
/*: number*/
, pendingY
/*: number*/
)
/*: [number, number]*/
{
  var x = Math.round(pendingX / grid[0]) * grid[0];
  var y = Math.round(pendingY / grid[1]) * grid[1];
  return [x, y];
}

function canDragX(draggable
/*: Draggable*/
)
/*: boolean*/
{
  return draggable.props.axis === 'both' || draggable.props.axis === 'x';
}

function canDragY(draggable
/*: Draggable*/
)
/*: boolean*/
{
  return draggable.props.axis === 'both' || draggable.props.axis === 'y';
} // Get {x, y} positions from event.


function getControlPosition(e
/*: MouseTouchEvent*/
, touchIdentifier
/*: ?number*/
, draggableCore
/*: DraggableCore*/
)
/*: ?ControlPosition*/
{
  var touchObj = typeof touchIdentifier === 'number' ? (0, domFns.getTouch)(e, touchIdentifier) : null;
  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch

  var node = findDOMNode(draggableCore); // User can provide an offsetParent if desired.

  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;
  return (0, domFns.offsetXYFromParent)(touchObj || e, offsetParent, draggableCore.props.scale);
} // Create an data object exposed by <DraggableCore>'s events


function createCoreData(draggable
/*: DraggableCore*/
, x
/*: number*/
, y
/*: number*/
)
/*: DraggableData*/
{
  var state = draggable.state;
  var isStart = !(0, shims.isNum)(state.lastX);
  var node = findDOMNode(draggable);

  if (isStart) {
    // If this is our first move, use the x and y as last coords.
    return {
      node: node,
      deltaX: 0,
      deltaY: 0,
      lastX: x,
      lastY: y,
      x: x,
      y: y
    };
  } else {
    // Otherwise calculate proper values.
    return {
      node: node,
      deltaX: x - state.lastX,
      deltaY: y - state.lastY,
      lastX: state.lastX,
      lastY: state.lastY,
      x: x,
      y: y
    };
  }
} // Create an data exposed by <Draggable>'s events


function createDraggableData(draggable
/*: Draggable*/
, coreData
/*: DraggableData*/
)
/*: DraggableData*/
{
  var scale = draggable.props.scale;
  return {
    node: coreData.node,
    x: draggable.state.x + coreData.deltaX / scale,
    y: draggable.state.y + coreData.deltaY / scale,
    deltaX: coreData.deltaX / scale,
    deltaY: coreData.deltaY / scale,
    lastX: draggable.state.x,
    lastY: draggable.state.y
  };
} // A lot faster than stringify/parse


function cloneBounds(bounds
/*: Bounds*/
)
/*: Bounds*/
{
  return {
    left: bounds.left,
    top: bounds.top,
    right: bounds.right,
    bottom: bounds.bottom
  };
}

function findDOMNode(draggable
/*: Draggable | DraggableCore*/
)
/*: HTMLElement*/
{
  var node = draggable.findDOMNode();

  if (!node) {
    throw new Error('<DraggableCore>: Unmounted during event!');
  } // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME


  return node;
}
});

unwrapExports(positionFns);
var positionFns_1 = positionFns.getBoundPosition;
var positionFns_2 = positionFns.snapToGrid;
var positionFns_3 = positionFns.canDragX;
var positionFns_4 = positionFns.canDragY;
var positionFns_5 = positionFns.getControlPosition;
var positionFns_6 = positionFns.createCoreData;
var positionFns_7 = positionFns.createDraggableData;

var log_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = log;

/*eslint no-console:0*/
function log() {
}
});

unwrapExports(log_1);

var DraggableCore_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(React__default['default']);

var _propTypes = _interopRequireDefault(propTypes);

var _reactDom = _interopRequireDefault(reactDom__default['default']);







var _log = _interopRequireDefault(log_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Simple abstraction for dragging events names.
var eventsFor = {
  touch: {
    start: 'touchstart',
    move: 'touchmove',
    stop: 'touchend'
  },
  mouse: {
    start: 'mousedown',
    move: 'mousemove',
    stop: 'mouseup'
  }
}; // Default to mouse events.

var dragEventFor = eventsFor.mouse;
/*:: type DraggableCoreState = {
  dragging: boolean,
  lastX: number,
  lastY: number,
  touchIdentifier: ?number
};*/

/*:: export type DraggableData = {
  node: HTMLElement,
  x: number, y: number,
  deltaX: number, deltaY: number,
  lastX: number, lastY: number,
};*/

/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/

/*:: export type ControlPosition = {x: number, y: number};*/

/*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/

/*:: export type DraggableCoreProps = {
  allowAnyClick: boolean,
  cancel: string,
  children: ReactElement<any>,
  disabled: boolean,
  enableUserSelectHack: boolean,
  offsetParent: HTMLElement,
  grid: [number, number],
  handle: string,
  nodeRef?: ?React.ElementRef<any>,
  onStart: DraggableEventHandler,
  onDrag: DraggableEventHandler,
  onStop: DraggableEventHandler,
  onMouseDown: (e: MouseEvent) => void,
  scale: number,
};*/

//
// Define <DraggableCore>.
//
// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can
// work well with libraries that require more control over the element.
//
var DraggableCore = /*#__PURE__*/function (_React$Component) {
  _inherits(DraggableCore, _React$Component);

  var _super = _createSuper(DraggableCore);

  function DraggableCore() {
    var _this;

    _classCallCheck(this, DraggableCore);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      dragging: false,
      // Used while dragging to determine deltas.
      lastX: NaN,
      lastY: NaN,
      touchIdentifier: null
    });

    _defineProperty(_assertThisInitialized(_this), "mounted", false);

    _defineProperty(_assertThisInitialized(_this), "handleDragStart", function (e) {
      // Make it possible to attach event handlers on top of this one.
      _this.props.onMouseDown(e); // Only accept left-clicks.


      if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false; // Get nodes. Be sure to grab relative document (could be iframed)

      var thisNode = _this.findDOMNode();

      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {
        throw new Error('<DraggableCore> not mounted on DragStart!');
      }

      var ownerDocument = thisNode.ownerDocument; // Short circuit if handle or cancel prop was provided and selector doesn't match.

      if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !(0, domFns.matchesSelectorAndParentsTo)(e.target, _this.props.handle, thisNode) || _this.props.cancel && (0, domFns.matchesSelectorAndParentsTo)(e.target, _this.props.cancel, thisNode)) {
        return;
      } // Prevent scrolling on mobile devices, like ipad/iphone.
      // Important that this is after handle/cancel.


      if (e.type === 'touchstart') e.preventDefault(); // Set touch identifier in component state if this is a touch event. This allows us to
      // distinguish between individual touches on multitouch screens by identifying which
      // touchpoint was set to this element.

      var touchIdentifier = (0, domFns.getTouchIdentifier)(e);

      _this.setState({
        touchIdentifier: touchIdentifier
      }); // Get the current drag point from the event. This is used as the offset.


      var position = (0, positionFns.getControlPosition)(e, touchIdentifier, _assertThisInitialized(_this));
      if (position == null) return; // not possible but satisfies flow

      var x = position.x,
          y = position.y; // Create an event object with all the data parents need to make a decision here.

      var coreEvent = (0, positionFns.createCoreData)(_assertThisInitialized(_this), x, y);
      (0, _log.default)('DraggableCore: handleDragStart: %j', coreEvent); // Call event handler. If it returns explicit false, cancel.

      (0, _log.default)('calling', _this.props.onStart);

      var shouldUpdate = _this.props.onStart(e, coreEvent);

      if (shouldUpdate === false || _this.mounted === false) return; // Add a style to the body to disable user-select. This prevents text from
      // being selected all over the page.

      if (_this.props.enableUserSelectHack) (0, domFns.addUserSelectStyles)(ownerDocument); // Initiate dragging. Set the current x and y as offsets
      // so we know how much we've moved during the drag. This allows us
      // to drag elements around even if they have been moved, without issue.

      _this.setState({
        dragging: true,
        lastX: x,
        lastY: y
      }); // Add events to the document directly so we catch when the user's mouse/touch moves outside of
      // this element. We use different events depending on whether or not we have detected that this
      // is a touch-capable device.


      (0, domFns.addEvent)(ownerDocument, dragEventFor.move, _this.handleDrag);
      (0, domFns.addEvent)(ownerDocument, dragEventFor.stop, _this.handleDragStop);
    });

    _defineProperty(_assertThisInitialized(_this), "handleDrag", function (e) {
      // Get the current drag point from the event. This is used as the offset.
      var position = (0, positionFns.getControlPosition)(e, _this.state.touchIdentifier, _assertThisInitialized(_this));
      if (position == null) return;
      var x = position.x,
          y = position.y; // Snap to grid if prop has been provided

      if (Array.isArray(_this.props.grid)) {
        var deltaX = x - _this.state.lastX,
            deltaY = y - _this.state.lastY;

        var _snapToGrid = (0, positionFns.snapToGrid)(_this.props.grid, deltaX, deltaY);

        var _snapToGrid2 = _slicedToArray(_snapToGrid, 2);

        deltaX = _snapToGrid2[0];
        deltaY = _snapToGrid2[1];
        if (!deltaX && !deltaY) return; // skip useless drag

        x = _this.state.lastX + deltaX, y = _this.state.lastY + deltaY;
      }

      var coreEvent = (0, positionFns.createCoreData)(_assertThisInitialized(_this), x, y);
      (0, _log.default)('DraggableCore: handleDrag: %j', coreEvent); // Call event handler. If it returns explicit false, trigger end.

      var shouldUpdate = _this.props.onDrag(e, coreEvent);

      if (shouldUpdate === false || _this.mounted === false) {
        try {
          // $FlowIgnore
          _this.handleDragStop(new MouseEvent('mouseup'));
        } catch (err) {
          // Old browsers
          var event = ((document.createEvent('MouseEvents')
          /*: any*/
          )
          /*: MouseTouchEvent*/
          ); // I see why this insanity was deprecated
          // $FlowIgnore

          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);

          _this.handleDragStop(event);
        }

        return;
      }

      _this.setState({
        lastX: x,
        lastY: y
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragStop", function (e) {
      if (!_this.state.dragging) return;
      var position = (0, positionFns.getControlPosition)(e, _this.state.touchIdentifier, _assertThisInitialized(_this));
      if (position == null) return;
      var x = position.x,
          y = position.y;
      var coreEvent = (0, positionFns.createCoreData)(_assertThisInitialized(_this), x, y); // Call event handler

      var shouldContinue = _this.props.onStop(e, coreEvent);

      if (shouldContinue === false || _this.mounted === false) return false;

      var thisNode = _this.findDOMNode();

      if (thisNode) {
        // Remove user-select hack
        if (_this.props.enableUserSelectHack) (0, domFns.removeUserSelectStyles)(thisNode.ownerDocument);
      }

      (0, _log.default)('DraggableCore: handleDragStop: %j', coreEvent); // Reset the el.

      _this.setState({
        dragging: false,
        lastX: NaN,
        lastY: NaN
      });

      if (thisNode) {
        // Remove event handlers
        (0, _log.default)('DraggableCore: Removing handlers');
        (0, domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);
        (0, domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onMouseDown", function (e) {
      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse

      return _this.handleDragStart(e);
    });

    _defineProperty(_assertThisInitialized(_this), "onMouseUp", function (e) {
      dragEventFor = eventsFor.mouse;
      return _this.handleDragStop(e);
    });

    _defineProperty(_assertThisInitialized(_this), "onTouchStart", function (e) {
      // We're on a touch device now, so change the event handlers
      dragEventFor = eventsFor.touch;
      return _this.handleDragStart(e);
    });

    _defineProperty(_assertThisInitialized(_this), "onTouchEnd", function (e) {
      // We're on a touch device now, so change the event handlers
      dragEventFor = eventsFor.touch;
      return _this.handleDragStop(e);
    });

    return _this;
  }

  _createClass(DraggableCore, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true; // Touch handlers must be added with {passive: false} to be cancelable.
      // https://developers.google.com/web/updates/2017/01/scrolling-intervention

      var thisNode = this.findDOMNode();

      if (thisNode) {
        (0, domFns.addEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {
          passive: false
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false; // Remove any leftover event handlers. Remove both touch and mouse handlers in case
      // some browser quirk caused a touch event to fire during a mouse move, or vice versa.

      var thisNode = this.findDOMNode();

      if (thisNode) {
        var ownerDocument = thisNode.ownerDocument;
        (0, domFns.removeEvent)(ownerDocument, eventsFor.mouse.move, this.handleDrag);
        (0, domFns.removeEvent)(ownerDocument, eventsFor.touch.move, this.handleDrag);
        (0, domFns.removeEvent)(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);
        (0, domFns.removeEvent)(ownerDocument, eventsFor.touch.stop, this.handleDragStop);
        (0, domFns.removeEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {
          passive: false
        });
        if (this.props.enableUserSelectHack) (0, domFns.removeUserSelectStyles)(ownerDocument);
      }
    } // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find
    // the underlying DOM node ourselves. See the README for more information.

  }, {
    key: "findDOMNode",
    value: function findDOMNode()
    /*: ?HTMLElement*/
    {
      return this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
    }
  }, {
    key: "render",
    value: function render() {
      // Reuse the child provided
      // This makes it flexible to use whatever element is wanted (div, ul, etc)
      return React.cloneElement(React.Children.only(this.props.children), {
        // Note: mouseMove handler is attached to document so it will still function
        // when the user drags quickly and leaves the bounds of the element.
        onMouseDown: this.onMouseDown,
        onMouseUp: this.onMouseUp,
        // onTouchStart is added on `componentDidMount` so they can be added with
        // {passive: false}, which allows it to cancel. See 
        // https://developers.google.com/web/updates/2017/01/scrolling-intervention
        onTouchEnd: this.onTouchEnd
      });
    }
  }]);

  return DraggableCore;
}(React.Component);

exports.default = DraggableCore;

_defineProperty(DraggableCore, "displayName", 'DraggableCore');

_defineProperty(DraggableCore, "propTypes", {
  /**
   * `allowAnyClick` allows dragging using any mouse button.
   * By default, we only accept the left button.
   *
   * Defaults to `false`.
   */
  allowAnyClick: _propTypes.default.bool,

  /**
   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,
   * with the exception of `onMouseDown`, will not fire.
   */
  disabled: _propTypes.default.bool,

  /**
   * By default, we add 'user-select:none' attributes to the document body
   * to prevent ugly text selection during drag. If this is causing problems
   * for your app, set this to `false`.
   */
  enableUserSelectHack: _propTypes.default.bool,

  /**
   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets
   * instead of using the parent node.
   */
  offsetParent: function offsetParent(props
  /*: DraggableCoreProps*/
  , propName
  /*: $Keys<DraggableCoreProps>*/
  ) {
    if (props[propName] && props[propName].nodeType !== 1) {
      throw new Error('Draggable\'s offsetParent must be a DOM Node.');
    }
  },

  /**
   * `grid` specifies the x and y that dragging should snap to.
   */
  grid: _propTypes.default.arrayOf(_propTypes.default.number),

  /**
   * `handle` specifies a selector to be used as the handle that initiates drag.
   *
   * Example:
   *
   * ```jsx
   *   let App = React.createClass({
   *       render: function () {
   *         return (
   *            <Draggable handle=".handle">
   *              <div>
   *                  <div className="handle">Click me to drag</div>
   *                  <div>This is some other content</div>
   *              </div>
   *           </Draggable>
   *         );
   *       }
   *   });
   * ```
   */
  handle: _propTypes.default.string,

  /**
   * `cancel` specifies a selector to be used to prevent drag initialization.
   *
   * Example:
   *
   * ```jsx
   *   let App = React.createClass({
   *       render: function () {
   *           return(
   *               <Draggable cancel=".cancel">
   *                   <div>
   *                     <div className="cancel">You can't drag from here</div>
   *                     <div>Dragging here works fine</div>
   *                   </div>
   *               </Draggable>
   *           );
   *       }
   *   });
   * ```
   */
  cancel: _propTypes.default.string,

  /* If running in React Strict mode, ReactDOM.findDOMNode() is deprecated.
   * Unfortunately, in order for <Draggable> to work properly, we need raw access
   * to the underlying DOM node. If you want to avoid the warning, pass a `nodeRef`
   * as in this example:
   *
   * function MyComponent() {
   *   const nodeRef = React.useRef(null);
   *   return (
   *     <Draggable nodeRef={nodeRef}>
   *       <div ref={nodeRef}>Example Target</div>
   *     </Draggable>
   *   );
   * }
   *
   * This can be used for arbitrarily nested components, so long as the ref ends up
   * pointing to the actual child DOM node and not a custom component.
   */
  nodeRef: _propTypes.default.object,

  /**
   * Called when dragging starts.
   * If this function returns the boolean false, dragging will be canceled.
   */
  onStart: _propTypes.default.func,

  /**
   * Called while dragging.
   * If this function returns the boolean false, dragging will be canceled.
   */
  onDrag: _propTypes.default.func,

  /**
   * Called when dragging stops.
   * If this function returns the boolean false, the drag will remain active.
   */
  onStop: _propTypes.default.func,

  /**
   * A workaround option which can be passed if onMouseDown needs to be accessed,
   * since it'll always be blocked (as there is internal use of onMouseDown)
   */
  onMouseDown: _propTypes.default.func,

  /**
   * `scale`, if set, applies scaling while dragging an element
   */
  scale: _propTypes.default.number,

  /**
   * These properties should be defined on the child, not here.
   */
  className: shims.dontSetMe,
  style: shims.dontSetMe,
  transform: shims.dontSetMe
});

_defineProperty(DraggableCore, "defaultProps", {
  allowAnyClick: false,
  // by default only accept left click
  cancel: null,
  disabled: false,
  enableUserSelectHack: true,
  offsetParent: null,
  handle: null,
  grid: null,
  transform: null,
  onStart: function onStart() {},
  onDrag: function onDrag() {},
  onStop: function onStop() {},
  onMouseDown: function onMouseDown() {},
  scale: 1
});
});

unwrapExports(DraggableCore_1);

var Draggable_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "DraggableCore", {
  enumerable: true,
  get: function get() {
    return _DraggableCore.default;
  }
});
exports.default = void 0;

var React = _interopRequireWildcard(React__default['default']);

var _propTypes = _interopRequireDefault(propTypes);

var _reactDom = _interopRequireDefault(reactDom__default['default']);

var _classnames = _interopRequireDefault(classnames);







var _DraggableCore = _interopRequireDefault(DraggableCore_1);

var _log = _interopRequireDefault(log_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
// Define <Draggable>
//
var Draggable = /*#__PURE__*/function (_React$Component) {
  _inherits(Draggable, _React$Component);

  var _super = _createSuper(Draggable);

  _createClass(Draggable, null, [{
    key: "getDerivedStateFromProps",
    // React 16.3+
    // Arity (props, state)
    value: function getDerivedStateFromProps(_ref, _ref2) {
      var position = _ref.position;
      var prevPropsPosition = _ref2.prevPropsPosition;

      // Set x/y if a new position is provided in props that is different than the previous.
      if (position && (!prevPropsPosition || position.x !== prevPropsPosition.x || position.y !== prevPropsPosition.y)) {
        (0, _log.default)('Draggable: getDerivedStateFromProps %j', {
          position: position,
          prevPropsPosition: prevPropsPosition
        });
        return {
          x: position.x,
          y: position.y,
          prevPropsPosition: _objectSpread({}, position)
        };
      }

      return null;
    }
  }]);

  function Draggable(props
  /*: DraggableProps*/
  ) {
    var _this;

    _classCallCheck(this, Draggable);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "onDragStart", function (e, coreData) {
      (0, _log.default)('Draggable: onDragStart: %j', coreData); // Short-circuit if user's callback killed it.

      var shouldStart = _this.props.onStart(e, (0, positionFns.createDraggableData)(_assertThisInitialized(_this), coreData)); // Kills start event on core as well, so move handlers are never bound.


      if (shouldStart === false) return false;

      _this.setState({
        dragging: true,
        dragged: true
      });
    });

    _defineProperty(_assertThisInitialized(_this), "onDrag", function (e, coreData) {
      if (!_this.state.dragging) return false;
      (0, _log.default)('Draggable: onDrag: %j', coreData);
      var uiData = (0, positionFns.createDraggableData)(_assertThisInitialized(_this), coreData);
      var newState
      /*: $Shape<DraggableState>*/
      = {
        x: uiData.x,
        y: uiData.y
      }; // Keep within bounds.

      if (_this.props.bounds) {
        // Save original x and y.
        var x = newState.x,
            y = newState.y; // Add slack to the values used to calculate bound position. This will ensure that if
        // we start removing slack, the element won't react to it right away until it's been
        // completely removed.

        newState.x += _this.state.slackX;
        newState.y += _this.state.slackY; // Get bound position. This will ceil/floor the x and y within the boundaries.

        var _getBoundPosition = (0, positionFns.getBoundPosition)(_assertThisInitialized(_this), newState.x, newState.y),
            _getBoundPosition2 = _slicedToArray(_getBoundPosition, 2),
            newStateX = _getBoundPosition2[0],
            newStateY = _getBoundPosition2[1];

        newState.x = newStateX;
        newState.y = newStateY; // Recalculate slack by noting how much was shaved by the boundPosition handler.

        newState.slackX = _this.state.slackX + (x - newState.x);
        newState.slackY = _this.state.slackY + (y - newState.y); // Update the event we fire to reflect what really happened after bounds took effect.

        uiData.x = newState.x;
        uiData.y = newState.y;
        uiData.deltaX = newState.x - _this.state.x;
        uiData.deltaY = newState.y - _this.state.y;
      } // Short-circuit if user's callback killed it.


      var shouldUpdate = _this.props.onDrag(e, uiData);

      if (shouldUpdate === false) return false;

      _this.setState(newState);
    });

    _defineProperty(_assertThisInitialized(_this), "onDragStop", function (e, coreData) {
      if (!_this.state.dragging) return false; // Short-circuit if user's callback killed it.

      var shouldContinue = _this.props.onStop(e, (0, positionFns.createDraggableData)(_assertThisInitialized(_this), coreData));

      if (shouldContinue === false) return false;
      (0, _log.default)('Draggable: onDragStop: %j', coreData);
      var newState
      /*: $Shape<DraggableState>*/
      = {
        dragging: false,
        slackX: 0,
        slackY: 0
      }; // If this is a controlled component, the result of this operation will be to
      // revert back to the old position. We expect a handler on `onDragStop`, at the least.

      var controlled = Boolean(_this.props.position);

      if (controlled) {
        var _this$props$position = _this.props.position,
            x = _this$props$position.x,
            y = _this$props$position.y;
        newState.x = x;
        newState.y = y;
      }

      _this.setState(newState);
    });

    _this.state = {
      // Whether or not we are currently dragging.
      dragging: false,
      // Whether or not we have been dragged before.
      dragged: false,
      // Current transform x and y.
      x: props.position ? props.position.x : props.defaultPosition.x,
      y: props.position ? props.position.y : props.defaultPosition.y,
      prevPropsPosition: _objectSpread({}, props.position),
      // Used for compensating for out-of-bounds drags
      slackX: 0,
      slackY: 0,
      // Can only determine if SVG after mounting
      isElementSVG: false
    };

    if (props.position && !(props.onDrag || props.onStop)) {
      // eslint-disable-next-line no-console
      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');
    }

    return _this;
  }

  _createClass(Draggable, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // Check to see if the element passed is an instanceof SVGElement
      if (typeof window.SVGElement !== 'undefined' && this.findDOMNode() instanceof window.SVGElement) {
        this.setState({
          isElementSVG: true
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.setState({
        dragging: false
      }); // prevents invariant if unmounted while dragging
    } // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find
    // the underlying DOM node ourselves. See the README for more information.

  }, {
    key: "findDOMNode",
    value: function findDOMNode()
    /*: ?HTMLElement*/
    {
      return this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
    }
  }, {
    key: "render",
    value: function render()
    /*: ReactElement<any>*/
    {
      var _classNames;

      var _this$props = this.props,
          axis = _this$props.axis,
          bounds = _this$props.bounds,
          children = _this$props.children,
          defaultPosition = _this$props.defaultPosition,
          defaultClassName = _this$props.defaultClassName,
          defaultClassNameDragging = _this$props.defaultClassNameDragging,
          defaultClassNameDragged = _this$props.defaultClassNameDragged,
          position = _this$props.position,
          positionOffset = _this$props.positionOffset,
          scale = _this$props.scale,
          draggableCoreProps = _objectWithoutProperties(_this$props, ["axis", "bounds", "children", "defaultPosition", "defaultClassName", "defaultClassNameDragging", "defaultClassNameDragged", "position", "positionOffset", "scale"]);

      var style = {};
      var svgTransform = null; // If this is controlled, we don't want to move it - unless it's dragging.

      var controlled = Boolean(position);
      var draggable = !controlled || this.state.dragging;
      var validPosition = position || defaultPosition;
      var transformOpts = {
        // Set left if horizontal drag is enabled
        x: (0, positionFns.canDragX)(this) && draggable ? this.state.x : validPosition.x,
        // Set top if vertical drag is enabled
        y: (0, positionFns.canDragY)(this) && draggable ? this.state.y : validPosition.y
      }; // If this element was SVG, we use the `transform` attribute.

      if (this.state.isElementSVG) {
        svgTransform = (0, domFns.createSVGTransform)(transformOpts, positionOffset);
      } else {
        // Add a CSS transform to move the element around. This allows us to move the element around
        // without worrying about whether or not it is relatively or absolutely positioned.
        // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>
        // has a clean slate.
        style = (0, domFns.createCSSTransform)(transformOpts, positionOffset);
      } // Mark with class while dragging


      var className = (0, _classnames.default)(children.props.className || '', defaultClassName, (_classNames = {}, _defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), _defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames)); // Reuse the child provided
      // This makes it flexible to use whatever element is wanted (div, ul, etc)

      return /*#__PURE__*/React.createElement(_DraggableCore.default, _extends({}, draggableCoreProps, {
        onStart: this.onDragStart,
        onDrag: this.onDrag,
        onStop: this.onDragStop
      }), React.cloneElement(React.Children.only(children), {
        className: className,
        style: _objectSpread(_objectSpread({}, children.props.style), style),
        transform: svgTransform
      }));
    }
  }]);

  return Draggable;
}(React.Component);

exports.default = Draggable;

_defineProperty(Draggable, "displayName", 'Draggable');

_defineProperty(Draggable, "propTypes", _objectSpread(_objectSpread({}, _DraggableCore.default.propTypes), {}, {
  /**
   * `axis` determines which axis the draggable can move.
   *
   *  Note that all callbacks will still return data as normal. This only
   *  controls flushing to the DOM.
   *
   * 'both' allows movement horizontally and vertically.
   * 'x' limits movement to horizontal axis.
   * 'y' limits movement to vertical axis.
   * 'none' limits all movement.
   *
   * Defaults to 'both'.
   */
  axis: _propTypes.default.oneOf(['both', 'x', 'y', 'none']),

  /**
   * `bounds` determines the range of movement available to the element.
   * Available values are:
   *
   * 'parent' restricts movement within the Draggable's parent node.
   *
   * Alternatively, pass an object with the following properties, all of which are optional:
   *
   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}
   *
   * All values are in px.
   *
   * Example:
   *
   * ```jsx
   *   let App = React.createClass({
   *       render: function () {
   *         return (
   *            <Draggable bounds={{right: 300, bottom: 300}}>
   *              <div>Content</div>
   *           </Draggable>
   *         );
   *       }
   *   });
   * ```
   */
  bounds: _propTypes.default.oneOfType([_propTypes.default.shape({
    left: _propTypes.default.number,
    right: _propTypes.default.number,
    top: _propTypes.default.number,
    bottom: _propTypes.default.number
  }), _propTypes.default.string, _propTypes.default.oneOf([false])]),
  defaultClassName: _propTypes.default.string,
  defaultClassNameDragging: _propTypes.default.string,
  defaultClassNameDragged: _propTypes.default.string,

  /**
   * `defaultPosition` specifies the x and y that the dragged item should start at
   *
   * Example:
   *
   * ```jsx
   *      let App = React.createClass({
   *          render: function () {
   *              return (
   *                  <Draggable defaultPosition={{x: 25, y: 25}}>
   *                      <div>I start with transformX: 25px and transformY: 25px;</div>
   *                  </Draggable>
   *              );
   *          }
   *      });
   * ```
   */
  defaultPosition: _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }),
  positionOffset: _propTypes.default.shape({
    x: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    y: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  }),

  /**
   * `position`, if present, defines the current position of the element.
   *
   *  This is similar to how form elements in React work - if no `position` is supplied, the component
   *  is uncontrolled.
   *
   * Example:
   *
   * ```jsx
   *      let App = React.createClass({
   *          render: function () {
   *              return (
   *                  <Draggable position={{x: 25, y: 25}}>
   *                      <div>I start with transformX: 25px and transformY: 25px;</div>
   *                  </Draggable>
   *              );
   *          }
   *      });
   * ```
   */
  position: _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }),

  /**
   * These properties should be defined on the child, not here.
   */
  className: shims.dontSetMe,
  style: shims.dontSetMe,
  transform: shims.dontSetMe
}));

_defineProperty(Draggable, "defaultProps", _objectSpread(_objectSpread({}, _DraggableCore.default.defaultProps), {}, {
  axis: 'both',
  bounds: false,
  defaultClassName: 'react-draggable',
  defaultClassNameDragging: 'react-draggable-dragging',
  defaultClassNameDragged: 'react-draggable-dragged',
  defaultPosition: {
    x: 0,
    y: 0
  },
  position: null,
  scale: 1
}));
});

unwrapExports(Draggable_1);

var Draggable = Draggable_1.default,
    DraggableCore = Draggable_1.DraggableCore; // Previous versions of this lib exported <Draggable> as the root export. As to no-// them, or TypeScript, we export *both* as the root and as 'default'.
// See https://github.com/mzabriskie/react-draggable/pull/254
// and https://github.com/mzabriskie/react-draggable/issues/266


var cjs = Draggable;
var default_1 = Draggable;
var DraggableCore_1$1 = DraggableCore;
cjs.default = default_1;
cjs.DraggableCore = DraggableCore_1$1;

var ScrollbarThumbComponent = /** @class */ (function (_super) {
    __extends(ScrollbarThumbComponent, _super);
    function ScrollbarThumbComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.initialOffsetX = 0;
        _this.initialOffsetY = 0;
        _this.lastDragData = {
            x: 0,
            y: 0,
            deltaX: 0,
            deltaY: 0,
            lastX: 0,
            lastY: 0,
        };
        _this.element = null;
        _this.handleOnDragStart = function (ev, data) {
            if (!_this.element) {
                _this.handleOnDragStop(ev, data);
                return;
            }
            if (global.document) {
                _this.prevUserSelect = global.document.body.style.userSelect;
                global.document.body.style.userSelect = "none";
                _this.prevOnSelectStart = global.document.onselectstart;
                global.document.onselectstart = ScrollbarThumbComponent.selectStartReplacer;
            }
            _this.props.onDragStart &&
                _this.props.onDragStart((_this.lastDragData = {
                    x: data.x - _this.initialOffsetX,
                    y: data.y - _this.initialOffsetY,
                    lastX: data.lastX - _this.initialOffsetX,
                    lastY: data.lastY - _this.initialOffsetY,
                    deltaX: data.deltaX,
                    deltaY: data.deltaY,
                }));
            _this.element.classList.add("dragging");
        };
        _this.handleOnDrag = function (ev, data) {
            if (!_this.element) {
                _this.handleOnDragStop(ev, data);
                return;
            }
            _this.props.onDrag &&
                _this.props.onDrag((_this.lastDragData = {
                    x: data.x - _this.initialOffsetX,
                    y: data.y - _this.initialOffsetY,
                    lastX: data.lastX - _this.initialOffsetX,
                    lastY: data.lastY - _this.initialOffsetY,
                    deltaX: data.deltaX,
                    deltaY: data.deltaY,
                }));
        };
        _this.handleOnDragStop = function (ev, data) {
            var resultData = data
                ? {
                    x: data.x - _this.initialOffsetX,
                    y: data.y - _this.initialOffsetY,
                    lastX: data.lastX - _this.initialOffsetX,
                    lastY: data.lastY - _this.initialOffsetY,
                    deltaX: data.deltaX,
                    deltaY: data.deltaY,
                }
                : _this.lastDragData;
            _this.props.onDragEnd && _this.props.onDragEnd(resultData);
            _this.element && _this.element.classList.remove("dragging");
            if (global.document) {
                global.document.body.style.userSelect = _this.prevUserSelect;
                global.document.onselectstart = _this.prevOnSelectStart;
                _this.prevOnSelectStart = null;
            }
            _this.initialOffsetX = 0;
            _this.initialOffsetY = 0;
            _this.lastDragData = {
                x: 0,
                y: 0,
                deltaX: 0,
                deltaY: 0,
                lastX: 0,
                lastY: 0,
            };
        };
        _this.handleOnMouseDown = function (ev) {
            if (!_this.element) {
                return;
            }
            ev.preventDefault();
            ev.stopPropagation();
            if (!isUndef(ev.offsetX)) {
                /* istanbul ignore next */
                _this.initialOffsetX = ev.offsetX;
                /* istanbul ignore next */
                _this.initialOffsetY = ev.offsetY;
            }
            else {
                var rect = _this.element.getBoundingClientRect();
                _this.initialOffsetX = (ev.clientX || ev.touches[0].clientX) - rect.left;
                _this.initialOffsetY = (ev.clientY || ev.touches[0].clientY) - rect.top;
            }
        };
        _this.elementRefHack = React.createRef();
        _this.elementRef = function (ref) {
            isFun(_this.props.elementRef) && _this.props.elementRef(ref);
            _this.element = ref;
            // @ts-ignore
            _this.elementRefHack["current"] = ref;
        };
        return _this;
    }
    ScrollbarThumbComponent.prototype.componentDidMount = function () {
        if (!this.element) {
            this.setState(function () {
                throw new Error("<ScrollbarThumbComponent> Element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.");
            });
            return;
        }
    };
    ScrollbarThumbComponent.prototype.componentWillUnmount = function () {
        this.handleOnDragStop();
        this.elementRef(null);
    };
    ScrollbarThumbComponent.prototype.render = function () {
        var _a = this.props, elementRef = _a.elementRef, axis = _a.axis, onDrag = _a.onDrag, onDragEnd = _a.onDragEnd, onDragStart = _a.onDragStart, props = __rest(_a, ["elementRef", "axis", "onDrag", "onDragEnd", "onDragStart"]);
        props.className = n$1("ScrollbarsCustom-Thumb", axis === exports.AXIS_DIRECTION.X ? "ScrollbarsCustom-ThumbX" : "ScrollbarsCustom-ThumbY", props.className);
        if (props.renderer) {
            props.axis = axis;
        }
        return (React.createElement(DraggableCore_1$1, { allowAnyClick: false, enableUserSelectHack: false, onMouseDown: this.handleOnMouseDown, onDrag: this.handleOnDrag, onStart: this.handleOnDragStart, onStop: this.handleOnDragStop, 
            // ToDo: Fixit!
            // react-draggable developers did not update typings so there is no appropriate prop
            // @ts-ignore
            nodeRef: this.elementRefHack }, renderDivWithRenderer(props, this.elementRef)));
    };
    ScrollbarThumbComponent.propTypes = {
        onDrag: propTypes.func,
        onDragStart: propTypes.func,
        onDragEnd: propTypes.func,
        elementRef: propTypes.func,
        renderer: propTypes.func,
    };
    ScrollbarThumbComponent.selectStartReplacer = function () { return false; };
    return ScrollbarThumbComponent;
}(React.Component));

var ScrollbarTrackComponent = /** @class */ (function (_super) {
    __extends(ScrollbarTrackComponent, _super);
    function ScrollbarTrackComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.element = null;
        _this.elementRef = function (ref) {
            isFun(_this.props.elementRef) && _this.props.elementRef(ref);
            _this.element = ref;
        };
        _this.handleClick = function (ev) {
            if (!ev || !_this.element || ev.button !== 0) {
                return;
            }
            if (isFun(_this.props.onClick) && ev.target === _this.element) {
                if (!isUndef(ev.offsetX)) {
                    _this.props.onClick(ev, {
                        axis: _this.props.axis,
                        offset: _this.props.axis === exports.AXIS_DIRECTION.X ? ev.offsetX : ev.offsetY,
                    });
                }
                else {
                    // support for old browsers
                    /* istanbul ignore next */
                    var rect = _this.element.getBoundingClientRect();
                    /* istanbul ignore next */
                    _this.props.onClick(ev, {
                        axis: _this.props.axis,
                        offset: _this.props.axis === exports.AXIS_DIRECTION.X
                            ? (ev.clientX || ev.touches[0].clientX) - rect.left
                            : (ev.clientY || ev.touches[0].clientY) - rect.top,
                    });
                }
            }
            return true;
        };
        return _this;
    }
    ScrollbarTrackComponent.prototype.componentDidMount = function () {
        if (!this.element) {
            this.setState(function () {
                throw new Error("Element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.");
            });
            return;
        }
        this.element.addEventListener("click", this.handleClick);
    };
    ScrollbarTrackComponent.prototype.componentWillUnmount = function () {
        if (this.element) {
            this.element.removeEventListener("click", this.handleClick);
            this.element = null;
            this.elementRef(null);
        }
    };
    ScrollbarTrackComponent.prototype.render = function () {
        var _a = this.props, elementRef = _a.elementRef, axis = _a.axis, onClick = _a.onClick, props = __rest(_a, ["elementRef", "axis", "onClick"]);
        props.className = n$1("ScrollbarsCustom-Track", axis === exports.AXIS_DIRECTION.X ? "ScrollbarsCustom-TrackX" : "ScrollbarsCustom-TrackY", props.className);
        if (props.renderer) {
            props.axis = axis;
        }
        return renderDivWithRenderer(props, this.elementRef);
    };
    ScrollbarTrackComponent.propTypes = {
        onClick: propTypes.func,
        elementRef: propTypes.func,
        renderer: propTypes.func,
    };
    return ScrollbarTrackComponent;
}(React.Component));

var pageZoomLevel = global.window ? i() : 1;
global.window && global.window.addEventListener("resize", function () { return (pageZoomLevel = i()); }, { passive: true });
var ScrollbarContext = React.createContext({
    parentScrollbar: null,
});
var ScrollbarComponent = /** @class */ (function (_super) {
    __extends(ScrollbarComponent, _super);
    function ScrollbarComponent(props) {
        var _this = _super.call(this, props) || this;
        /**
         * @description Get current scroll-related values.<br/>
         * If <i>force</i> if truthy - will recalculate them instead of returning cached values.
         *
         * @return ScrollState
         */
        _this.getScrollState = function (force) {
            if (force === void 0) { force = false; }
            if (_this.scrollValues && !force) {
                return __assign({}, _this.scrollValues);
            }
            var scrollState = {
                clientHeight: 0,
                clientWidth: 0,
                contentScrollHeight: 0,
                contentScrollWidth: 0,
                scrollHeight: 0,
                scrollWidth: 0,
                scrollTop: 0,
                scrollLeft: 0,
                scrollYBlocked: false,
                scrollXBlocked: false,
                scrollYPossible: false,
                scrollXPossible: false,
                trackYVisible: false,
                trackXVisible: false,
                zoomLevel: pageZoomLevel * 1,
                isRTL: undefined,
            };
            var props = _this.props;
            scrollState.isRTL = _this.state.isRTL;
            scrollState.scrollYBlocked = props.noScroll || props.noScrollY;
            scrollState.scrollXBlocked = props.noScroll || props.noScrollX;
            if (_this.scrollerElement) {
                scrollState.clientHeight = _this.scrollerElement.clientHeight;
                scrollState.clientWidth = _this.scrollerElement.clientWidth;
                scrollState.scrollHeight = _this.scrollerElement.scrollHeight;
                scrollState.scrollWidth = _this.scrollerElement.scrollWidth;
                scrollState.scrollTop = _this.scrollerElement.scrollTop;
                scrollState.scrollLeft = _this.scrollerElement.scrollLeft;
                scrollState.scrollYPossible = !scrollState.scrollYBlocked && scrollState.scrollHeight > scrollState.clientHeight;
                scrollState.scrollXPossible = !scrollState.scrollXBlocked && scrollState.scrollWidth > scrollState.clientWidth;
                scrollState.trackYVisible = scrollState.scrollYPossible || props.permanentTracks || props.permanentTrackY;
                scrollState.trackXVisible = scrollState.scrollXPossible || props.permanentTracks || props.permanentTrackX;
            }
            if (_this.contentElement) {
                scrollState.contentScrollHeight = _this.contentElement.scrollHeight;
                scrollState.contentScrollWidth = _this.contentElement.scrollWidth;
            }
            return scrollState;
        };
        /**
         * @description Scroll to top border
         */
        _this.scrollToTop = function () {
            if (_this.scrollerElement) {
                _this.scrollerElement.scrollTop = 0;
            }
            return _this;
        };
        /**
         * @description Scroll to left border
         */
        _this.scrollToLeft = function () {
            if (_this.scrollerElement) {
                _this.scrollerElement.scrollLeft = 0;
            }
            return _this;
        };
        /**
         * @description Scroll to bottom border
         */
        _this.scrollToBottom = function () {
            if (_this.scrollerElement) {
                _this.scrollerElement.scrollTop = _this.scrollerElement.scrollHeight - _this.scrollerElement.clientHeight;
            }
            return _this;
        };
        /**
         * @description Scroll to right border
         */
        _this.scrollToRight = function () {
            if (_this.scrollerElement) {
                _this.scrollerElement.scrollLeft = _this.scrollerElement.scrollWidth - _this.scrollerElement.clientWidth;
            }
            return _this;
        };
        /**
         * @description Set the scrolls at given coordinates.<br/>
         * If coordinate is undefined - current scroll value will persist.
         */
        _this.scrollTo = function (x, y) {
            if (_this.scrollerElement) {
                isNum(x) && (_this.scrollerElement.scrollLeft = x);
                isNum(y) && (_this.scrollerElement.scrollTop = y);
            }
            return _this;
        };
        /**
         * @description Center the viewport at given coordinates.<br/>
         * If coordinate is undefined - current scroll value will persist.
         */
        _this.centerAt = function (x, y) {
            if (_this.scrollerElement) {
                isNum(x) && (_this.scrollerElement.scrollLeft = x - _this.scrollerElement.clientWidth / 2);
                isNum(y) && (_this.scrollerElement.scrollTop = y - _this.scrollerElement.clientHeight / 2);
            }
            return _this;
        };
        _this.update = function (force) {
            if (force === void 0) { force = false; }
            if (!_this.scrollerElement) {
                return;
            }
            // autodetect direction if not defined
            if (isUndef(_this.state.isRTL)) {
                _this.setState({
                    isRTL: getComputedStyle(_this.scrollerElement).direction === "rtl",
                });
                return _this.getScrollState();
            }
            var scrollState = _this.getScrollState(true);
            var prevScrollState = __assign({}, _this.scrollValues);
            var props = _this.props;
            var bitmask = 0;
            if (!force) {
                prevScrollState.clientHeight !== scrollState.clientHeight && (bitmask |= 1 << 0);
                prevScrollState.clientWidth !== scrollState.clientWidth && (bitmask |= 1 << 1);
                prevScrollState.scrollHeight !== scrollState.scrollHeight && (bitmask |= 1 << 2);
                prevScrollState.scrollWidth !== scrollState.scrollWidth && (bitmask |= 1 << 3);
                prevScrollState.scrollTop !== scrollState.scrollTop && (bitmask |= 1 << 4);
                prevScrollState.scrollLeft !== scrollState.scrollLeft && (bitmask |= 1 << 5);
                prevScrollState.scrollYBlocked !== scrollState.scrollYBlocked && (bitmask |= 1 << 6);
                prevScrollState.scrollXBlocked !== scrollState.scrollXBlocked && (bitmask |= 1 << 7);
                prevScrollState.scrollYPossible !== scrollState.scrollYPossible && (bitmask |= 1 << 8);
                prevScrollState.scrollXPossible !== scrollState.scrollXPossible && (bitmask |= 1 << 9);
                prevScrollState.trackYVisible !== scrollState.trackYVisible && (bitmask |= 1 << 10);
                prevScrollState.trackXVisible !== scrollState.trackXVisible && (bitmask |= 1 << 11);
                prevScrollState.isRTL !== scrollState.isRTL && (bitmask |= 1 << 12);
                prevScrollState.contentScrollHeight !== scrollState.contentScrollHeight && (bitmask |= 1 << 13);
                prevScrollState.contentScrollWidth !== scrollState.contentScrollWidth && (bitmask |= 1 << 14);
                prevScrollState.zoomLevel !== scrollState.zoomLevel && (bitmask |= 1 << 15);
                // if not forced and nothing has changed - skip this update
                if (bitmask === 0) {
                    return prevScrollState;
                }
            }
            else {
                bitmask = 32767;
            }
            if (!props.native && _this.holderElement) {
                if (bitmask & (1 << 13) && (props.translateContentSizesToHolder || props.translateContentSizeYToHolder)) {
                    _this.holderElement.style.height = scrollState.contentScrollHeight + "px";
                }
                if (bitmask & (1 << 14) && (props.translateContentSizesToHolder || props.translateContentSizeXToHolder)) {
                    _this.holderElement.style.width = scrollState.contentScrollWidth + "px";
                }
                if (props.translateContentSizesToHolder ||
                    props.translateContentSizeYToHolder ||
                    props.translateContentSizeXToHolder) {
                    if ((!scrollState.clientHeight && scrollState.contentScrollHeight) ||
                        (!scrollState.clientWidth && scrollState.contentScrollWidth)) {
                        return;
                    }
                }
            }
            // if scrollbars visibility has changed
            if (bitmask & (1 << 10) || bitmask & (1 << 11)) {
                prevScrollState.scrollYBlocked = scrollState.scrollYBlocked;
                prevScrollState.scrollXBlocked = scrollState.scrollXBlocked;
                prevScrollState.scrollYPossible = scrollState.scrollYPossible;
                prevScrollState.scrollXPossible = scrollState.scrollXPossible;
                if (_this.trackYElement && bitmask & (1 << 10)) {
                    _this.trackYElement.style.display = scrollState.trackYVisible ? "" : "none";
                }
                if (_this.trackXElement && bitmask & (1 << 11)) {
                    _this.trackXElement.style.display = scrollState.trackXVisible ? "" : "none";
                }
                _this.scrollValues = prevScrollState;
                _this.setState({
                    trackYVisible: (_this.scrollValues.trackYVisible = scrollState.trackYVisible),
                    trackXVisible: (_this.scrollValues.trackXVisible = scrollState.trackXVisible),
                });
                return;
            }
            (props.native ? _this.updaterNative : _this.updaterCustom)(bitmask, scrollState);
            _this.scrollValues = scrollState;
            if (!props.native && bitmask & (1 << 15)) {
                getScrollbarWidth(true);
                _this.forceUpdate();
            }
            _this.eventEmitter.emit("update", __assign({}, scrollState), prevScrollState);
            (bitmask & (1 << 4) || bitmask & (1 << 5)) && _this.eventEmitter.emit("scroll", __assign({}, scrollState), prevScrollState);
            return _this.scrollValues;
        };
        _this.updaterNative = function () {
            // just for future
            return true;
        };
        _this.updaterCustom = function (bitmask, scrollValues) {
            var props = _this.props;
            if (_this.trackYElement) {
                if (_this.thumbYElement &&
                    (bitmask & (1 << 0) || bitmask & (1 << 2) || bitmask & (1 << 4) || bitmask & (1 << 6) || bitmask & (1 << 8))) {
                    if (scrollValues.scrollYPossible) {
                        var trackInnerSize = getInnerHeight(_this.trackYElement);
                        var thumbSize = calcThumbSize(scrollValues.scrollHeight, scrollValues.clientHeight, trackInnerSize, props.minimalThumbYSize || props.minimalThumbSize, props.maximalThumbYSize || props.maximalThumbSize);
                        var thumbOffset = calcThumbOffset(scrollValues.scrollHeight, scrollValues.clientHeight, trackInnerSize, thumbSize, scrollValues.scrollTop);
                        _this.thumbYElement.style.transform = "translateY(" + thumbOffset + "px)";
                        _this.thumbYElement.style.height = thumbSize + "px";
                        _this.thumbYElement.style.display = "";
                    }
                    else {
                        _this.thumbYElement.style.transform = "";
                        _this.thumbYElement.style.height = "0px";
                        _this.thumbYElement.style.display = "none";
                    }
                }
            }
            if (_this.trackXElement) {
                if (_this.thumbXElement &&
                    (bitmask & (1 << 1) ||
                        bitmask & (1 << 3) ||
                        bitmask & (1 << 5) ||
                        bitmask & (1 << 7) ||
                        bitmask & (1 << 9) ||
                        bitmask & (1 << 12))) {
                    if (scrollValues.scrollXPossible) {
                        var trackInnerSize = getInnerWidth(_this.trackXElement);
                        var thumbSize = calcThumbSize(scrollValues.scrollWidth, scrollValues.clientWidth, trackInnerSize, props.minimalThumbXSize || props.minimalThumbSize, props.maximalThumbXSize || props.maximalThumbSize);
                        var thumbOffset = calcThumbOffset(scrollValues.scrollWidth, scrollValues.clientWidth, trackInnerSize, thumbSize, scrollValues.scrollLeft);
                        if (_this.state.isRTL && shouldReverseRtlScroll()) {
                            thumbOffset += trackInnerSize - thumbSize;
                        }
                        _this.thumbXElement.style.transform = "translateX(" + thumbOffset + "px)";
                        _this.thumbXElement.style.width = thumbSize + "px";
                        _this.thumbXElement.style.display = "";
                    }
                    else {
                        _this.thumbXElement.style.transform = "";
                        _this.thumbXElement.style.width = "0px";
                        _this.thumbXElement.style.display = "none";
                    }
                }
            }
            return true;
        };
        _this.elementRefHolder = function (ref) {
            _this.holderElement = ref;
            isFun(_this.props.elementRef) && _this.props.elementRef(ref);
        };
        _this.elementRefWrapper = function (ref) {
            _this.wrapperElement = ref;
            isFun(_this.props.wrapperProps.elementRef) && _this.props.wrapperProps.elementRef(ref);
        };
        _this.elementRefScroller = function (ref) {
            _this.scrollerElement = ref;
            isFun(_this.props.scrollerProps.elementRef) && _this.props.scrollerProps.elementRef(ref);
        };
        _this.elementRefContent = function (ref) {
            _this.contentElement = ref;
            isFun(_this.props.contentProps.elementRef) && _this.props.contentProps.elementRef(ref);
        };
        _this.elementRefTrackX = function (ref) {
            _this.trackXElement = ref;
            isFun(_this.props.trackXProps.elementRef) && _this.props.trackXProps.elementRef(ref);
        };
        _this.elementRefTrackY = function (ref) {
            _this.trackYElement = ref;
            isFun(_this.props.trackYProps.elementRef) && _this.props.trackYProps.elementRef(ref);
        };
        _this.elementRefThumbX = function (ref) {
            _this.thumbXElement = ref;
            isFun(_this.props.thumbXProps.elementRef) && _this.props.thumbXProps.elementRef(ref);
        };
        _this.elementRefThumbY = function (ref) {
            _this.thumbYElement = ref;
            isFun(_this.props.thumbYProps.elementRef) && _this.props.thumbYProps.elementRef(ref);
        };
        _this.handleTrackXClick = function (ev, values) {
            _this.props.trackXProps.onClick && _this.props.trackXProps.onClick(ev, values);
            if (!_this.scrollerElement ||
                !_this.trackXElement ||
                !_this.thumbXElement ||
                !_this.scrollValues ||
                !_this.scrollValues.scrollXPossible) {
                return;
            }
            _this._scrollDetection();
            var thumbSize = _this.thumbXElement.clientWidth;
            var trackInnerSize = getInnerWidth(_this.trackXElement);
            var thumbOffset = (_this.scrollValues.isRTL && shouldReverseRtlScroll()
                ? values.offset + thumbSize / 2 - trackInnerSize
                : values.offset - thumbSize / 2) -
                //@ts-ignore
                (parseFloat(getComputedStyle(_this.trackXElement).paddingLeft) || 0);
            var target = calcScrollForThumbOffset(_this.scrollValues.scrollWidth, _this.scrollValues.clientWidth, trackInnerSize, thumbSize, thumbOffset);
            if (_this.props.trackClickBehavior === exports.TRACK_CLICK_BEHAVIOR.STEP) {
                target = (_this.scrollValues.isRTL ? _this.scrollValues.scrollLeft > target : _this.scrollValues.scrollLeft < target)
                    ? _this.scrollValues.scrollLeft + _this.scrollValues.clientWidth
                    : _this.scrollValues.scrollLeft - _this.scrollValues.clientWidth;
            }
            _this.scrollerElement.scrollLeft = target;
        };
        _this.handleTrackYClick = function (ev, values) {
            _this.props.trackYProps.onClick && _this.props.trackYProps.onClick(ev, values);
            if (!_this.scrollerElement ||
                !_this.trackYElement ||
                !_this.thumbYElement ||
                !_this.scrollValues ||
                !_this.scrollValues.scrollYPossible) {
                return;
            }
            _this._scrollDetection();
            var thumbSize = _this.thumbYElement.clientHeight;
            var target = calcScrollForThumbOffset(_this.scrollValues.scrollHeight, _this.scrollValues.clientHeight, getInnerHeight(_this.trackYElement), thumbSize, values.offset - thumbSize / 2) -
                //@ts-ignore
                (parseFloat(getComputedStyle(_this.trackYElement).paddingTop) || 0);
            if (_this.props.trackClickBehavior === exports.TRACK_CLICK_BEHAVIOR.JUMP) {
                _this.scrollerElement.scrollTop = target;
            }
            else {
                _this.scrollerElement.scrollTop =
                    _this.scrollValues.scrollTop < target
                        ? _this.scrollValues.scrollTop + _this.scrollValues.clientHeight
                        : _this.scrollValues.scrollTop - _this.scrollValues.clientHeight;
            }
        };
        _this.handleTrackYMouseWheel = function (ev) {
            var props = _this.props;
            props.trackYProps && props.trackYProps.onWheel && props.trackYProps.onWheel(ev);
            if (props.disableTracksMousewheelScrolling || props.disableTrackYMousewheelScrolling) {
                return;
            }
            _this._scrollDetection();
            if (!_this.scrollerElement || _this.scrollValues.scrollYBlocked) {
                return;
            }
            _this.scrollTop += ev.deltaY;
        };
        _this.handleTrackXMouseWheel = function (ev) {
            var props = _this.props;
            props.trackXProps && props.trackXProps.onWheel && props.trackXProps.onWheel(ev);
            if (props.disableTracksMousewheelScrolling || props.disableTrackXMousewheelScrolling) {
                return;
            }
            _this._scrollDetection();
            if (!_this.scrollerElement || _this.scrollValues.scrollXBlocked) {
                return;
            }
            _this.scrollLeft += ev.deltaX;
        };
        _this.handleThumbXDrag = function (data) {
            var _a;
            if (!_this.trackXElement ||
                !_this.thumbXElement ||
                !_this.scrollerElement ||
                !_this.scrollValues ||
                !_this.scrollValues.scrollXPossible) {
                return;
            }
            _this._scrollDetection();
            var trackRect = _this.trackXElement.getBoundingClientRect();
            var styles = getComputedStyle(_this.trackXElement);
            var paddingLeft = parseFloat(styles.paddingLeft) || 0;
            var paddingRight = parseFloat(styles.paddingRight) || 0;
            var trackInnerSize = trackRect.width - paddingLeft - paddingRight;
            var thumbSize = _this.thumbXElement.clientWidth;
            var offset = _this.scrollValues.isRTL && shouldReverseRtlScroll()
                ? data.x + thumbSize - trackInnerSize + paddingLeft
                : data.lastX - paddingLeft;
            _this.scrollerElement.scrollLeft = calcScrollForThumbOffset(_this.scrollValues.scrollWidth, _this.scrollValues.clientWidth, trackInnerSize, thumbSize, offset);
            if ((_a = _this.props.thumbXProps) === null || _a === void 0 ? void 0 : _a.onDrag) {
                _this.props.thumbXProps.onDrag(data);
            }
        };
        _this.handleThumbXDragEnd = function (data) {
            var _a;
            _this.handleThumbXDrag(data);
            if ((_a = _this.props.thumbXProps) === null || _a === void 0 ? void 0 : _a.onDragEnd) {
                _this.props.thumbXProps.onDragEnd(data);
            }
        };
        _this.handleThumbYDrag = function (data) {
            var _a;
            if (!_this.scrollerElement ||
                !_this.trackYElement ||
                !_this.thumbYElement ||
                !_this.scrollValues ||
                !_this.scrollValues.scrollYPossible) {
                return;
            }
            _this._scrollDetection();
            var trackRect = _this.trackYElement.getBoundingClientRect();
            var styles = getComputedStyle(_this.trackYElement);
            var paddingTop = parseFloat(styles.paddingTop) || 0;
            var paddingBottom = parseFloat(styles.paddingBottom) || 0;
            var trackInnerSize = trackRect.height - paddingTop - paddingBottom;
            var thumbSize = _this.thumbYElement.clientHeight;
            var offset = data.y - paddingTop;
            _this.scrollerElement.scrollTop = calcScrollForThumbOffset(_this.scrollValues.scrollHeight, _this.scrollValues.clientHeight, trackInnerSize, thumbSize, offset);
            if ((_a = _this.props.thumbYProps) === null || _a === void 0 ? void 0 : _a.onDrag) {
                _this.props.thumbYProps.onDrag(data);
            }
        };
        _this.handleThumbYDragEnd = function (data) {
            var _a;
            _this.handleThumbYDrag(data);
            if ((_a = _this.props.thumbYProps) === null || _a === void 0 ? void 0 : _a.onDragEnd) {
                _this.props.thumbYProps.onDragEnd(data);
            }
        };
        _this.handleScrollerScroll = function () {
            _this._scrollDetection();
        };
        _this._scrollDetection = function () {
            !_this._scrollDetectionTO && _this.eventEmitter.emit("scrollStart", _this.getScrollState());
            _this._scrollDetectionTO && global.window && global.window.clearTimeout(_this._scrollDetectionTO);
            _this._scrollDetectionTO = global.window
                ? global.window.setTimeout(_this._scrollDetectionCallback, _this.props.scrollDetectionThreshold || 0)
                : null;
        };
        _this._scrollDetectionCallback = function () {
            _this._scrollDetectionTO = null;
            _this.eventEmitter.emit("scrollStop", _this.getScrollState());
        };
        _this.state = {
            trackXVisible: false,
            trackYVisible: false,
            isRTL: props.rtl,
        };
        _this.scrollValues = _this.getScrollState(true);
        _this.eventEmitter = new Emittr(15);
        props.onUpdate && _this.eventEmitter.on("update", props.onUpdate);
        props.onScroll && _this.eventEmitter.on("scroll", props.onScroll);
        props.onScrollStart && _this.eventEmitter.on("scrollStart", props.onScrollStart);
        props.onScrollStop && _this.eventEmitter.on("scrollStop", props.onScrollStop);
        _this.id = uuid();
        return _this;
    }
    Object.defineProperty(ScrollbarComponent.prototype, "scrollTop", {
        get: function () {
            if (this.scrollerElement) {
                return this.scrollerElement.scrollTop;
            }
            return 0;
        },
        set: function (top) {
            if (this.scrollerElement) {
                this.scrollerElement.scrollTop = top;
                this.update();
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollbarComponent.prototype, "scrollLeft", {
        get: function () {
            if (this.scrollerElement) {
                return this.scrollerElement.scrollLeft;
            }
            return 0;
        },
        set: function (left) {
            if (this.scrollerElement) {
                this.scrollerElement.scrollLeft = left;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollbarComponent.prototype, "scrollHeight", {
        get: function () {
            if (this.scrollerElement) {
                return this.scrollerElement.scrollHeight;
            }
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollbarComponent.prototype, "scrollWidth", {
        get: function () {
            if (this.scrollerElement) {
                return this.scrollerElement.scrollWidth;
            }
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollbarComponent.prototype, "clientHeight", {
        get: function () {
            if (this.scrollerElement) {
                return this.scrollerElement.clientHeight;
            }
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollbarComponent.prototype, "clientWidth", {
        get: function () {
            if (this.scrollerElement) {
                return this.scrollerElement.clientWidth;
            }
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    ScrollbarComponent.calculateStyles = function (props, state, scrollValues, scrollbarWidth) {
        var _a, _b, _c, _d;
        var useDefaultStyles = !props.noDefaultStyles;
        return {
            holder: __assign(__assign(__assign({}, (useDefaultStyles && defaultStyle.holder)), { position: "relative" }), props.style),
            wrapper: __assign(__assign(__assign({}, (useDefaultStyles && __assign(__assign(__assign({}, defaultStyle.wrapper), (!props.disableTracksWidthCompensation &&
                !props.disableTrackYWidthCompensation && (_a = {},
                _a[state.isRTL ? "left" : "right"] = state.trackYVisible ? 10 : 0,
                _a))), (!props.disableTracksWidthCompensation &&
                !props.disableTrackXWidthCompensation && {
                bottom: state.trackXVisible ? 10 : 0,
            })))), props.wrapperProps.style), { position: "absolute", overflow: "hidden" }),
            content: __assign(__assign(__assign(__assign(__assign({}, (useDefaultStyles && defaultStyle.content)), (props.translateContentSizesToHolder ||
                props.translateContentSizeYToHolder ||
                props.translateContentSizeXToHolder
                ? {
                    display: "table-cell",
                }
                : {
                    padding: 0.05,
                })), (useDefaultStyles &&
                !(props.translateContentSizesToHolder || props.translateContentSizeYToHolder) && {
                minHeight: "100%",
            })), (useDefaultStyles &&
                !(props.translateContentSizesToHolder || props.translateContentSizeXToHolder) && {
                minWidth: "100%",
            })), props.contentProps.style),
            scroller: __assign(__assign(__assign(__assign((_b = { position: "absolute", top: 0, left: 0, bottom: 0, right: 0, paddingBottom: !scrollbarWidth && scrollValues.scrollXPossible ? props.fallbackScrollbarWidth : undefined }, _b[state.isRTL ? "paddingLeft" : "paddingRight"] = !scrollbarWidth && scrollValues.scrollYPossible ? props.fallbackScrollbarWidth : undefined, _b), props.scrollerProps.style), (!isUndef(props.rtl) && {
                direction: props.rtl ? "rtl" : "ltr",
            })), (props.momentum && { WebkitOverflowScrolling: "touch" })), (_c = { overflowY: scrollValues.scrollYPossible ? "scroll" : "hidden", overflowX: scrollValues.scrollXPossible ? "scroll" : "hidden", marginBottom: scrollValues.scrollXPossible
                        ? -(scrollbarWidth || props.fallbackScrollbarWidth) - Number(scrollValues.zoomLevel !== 1)
                        : undefined }, _c[state.isRTL ? "marginLeft" : "marginRight"] = scrollValues.scrollYPossible
                ? -(scrollbarWidth || props.fallbackScrollbarWidth) - Number(scrollValues.zoomLevel !== 1)
                : undefined, _c)),
            trackX: __assign(__assign(__assign(__assign({}, (useDefaultStyles && defaultStyle.track.common)), (useDefaultStyles && defaultStyle.track.x)), props.trackXProps.style), (!state.trackXVisible && { display: "none" })),
            trackY: __assign(__assign(__assign(__assign(__assign({}, (useDefaultStyles && defaultStyle.track.common)), (useDefaultStyles && defaultStyle.track.y)), (useDefaultStyles && (_d = {}, _d[state.isRTL ? "left" : "right"] = 0, _d))), props.trackYProps.style), (!state.trackYVisible && { display: "none" })),
            thumbX: __assign(__assign(__assign({}, (useDefaultStyles && defaultStyle.thumb.common)), (useDefaultStyles && defaultStyle.thumb.x)), props.thumbXProps.style),
            thumbY: __assign(__assign(__assign({}, (useDefaultStyles && defaultStyle.thumb.common)), (useDefaultStyles && defaultStyle.thumb.y)), props.thumbYProps.style),
        };
    };
    ScrollbarComponent.prototype.componentDidMount = function () {
        if (!this.scrollerElement) {
            this.setState(function () {
                throw new Error("scroller element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.");
            });
            return;
        }
        if (!this.contentElement) {
            this.setState(function () {
                throw new Error("content element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.");
            });
            return;
        }
        var props = this.props;
        if (!props.native && !props.mobileNative) {
            //ToDo: move native state to the state so it can be synchronized
            if (!this.holderElement) {
                this.setState(function () {
                    throw new Error("holder element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.");
                });
                return;
            }
            if (!this.wrapperElement) {
                this.setState(function () {
                    throw new Error("wrapper element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.");
                });
                return;
            }
        }
        Loop.addTarget(this);
        if (!isUndef(props.scrollTop)) {
            this.scrollerElement.scrollTop = props.scrollTop;
        }
        if (!isUndef(props.scrollLeft)) {
            this.scrollerElement.scrollLeft = props.scrollLeft;
        }
        this.update(true);
    };
    ScrollbarComponent.prototype.componentWillUnmount = function () {
        Loop.removeTarget(this);
    };
    ScrollbarComponent.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (!this.scrollerElement) {
            return;
        }
        var props = this.props;
        if (props.rtl !== prevProps.rtl && props.rtl !== this.state.isRTL) {
            this.setState({ isRTL: props.rtl });
        }
        if (this.state.isRTL !== prevState.isRTL) {
            this.update();
        }
        if (!isUndef(props.scrollTop) && props.scrollTop !== this.scrollerElement.scrollTop) {
            this.scrollerElement.scrollTop = props.scrollTop;
        }
        if (!isUndef(props.scrollLeft) && props.scrollLeft !== this.scrollerElement.scrollLeft) {
            this.scrollerElement.scrollLeft = props.scrollLeft;
        }
        if (prevProps.onUpdate !== props.onUpdate) {
            prevProps.onUpdate && this.eventEmitter.off("update", prevProps.onUpdate);
            props.onUpdate && this.eventEmitter.on("update", props.onUpdate);
        }
        if (prevProps.onScroll !== props.onScroll) {
            prevProps.onScroll && this.eventEmitter.off("scroll", prevProps.onScroll);
            props.onScroll && this.eventEmitter.on("scroll", props.onScroll);
        }
        if (prevProps.onScrollStart !== props.onScrollStart) {
            prevProps.onScrollStart && this.eventEmitter.off("scrollStart", prevProps.onScrollStart);
            props.onScrollStart && this.eventEmitter.on("scrollStart", props.onScrollStart);
        }
        if (prevProps.onScrollStop !== props.onScrollStop) {
            prevProps.onScrollStop && this.eventEmitter.off("scrollStop", prevProps.onScrollStop);
            props.onScrollStop && this.eventEmitter.on("scrollStop", props.onScrollStop);
        }
    };
    ScrollbarComponent.prototype.render = function () {
        var _a = this.props, createContext = _a.createContext, rtl = _a.rtl, native = _a.native, mobileNative = _a.mobileNative, momentum = _a.momentum, noDefaultStyles = _a.noDefaultStyles, disableTracksMousewheelScrolling = _a.disableTracksMousewheelScrolling, disableTrackXMousewheelScrolling = _a.disableTrackXMousewheelScrolling, disableTrackYMousewheelScrolling = _a.disableTrackYMousewheelScrolling, disableTracksWidthCompensation = _a.disableTracksWidthCompensation, disableTrackXWidthCompensation = _a.disableTrackXWidthCompensation, disableTrackYWidthCompensation = _a.disableTrackYWidthCompensation, noScrollX = _a.noScrollX, noScrollY = _a.noScrollY, noScroll = _a.noScroll, permanentTrackX = _a.permanentTrackX, permanentTrackY = _a.permanentTrackY, permanentTracks = _a.permanentTracks, removeTracksWhenNotUsed = _a.removeTracksWhenNotUsed, removeTrackYWhenNotUsed = _a.removeTrackYWhenNotUsed, removeTrackXWhenNotUsed = _a.removeTrackXWhenNotUsed, minimalThumbSize = _a.minimalThumbSize, maximalThumbSize = _a.maximalThumbSize, minimalThumbXSize = _a.minimalThumbXSize, maximalThumbXSize = _a.maximalThumbXSize, minimalThumbYSize = _a.minimalThumbYSize, maximalThumbYSize = _a.maximalThumbYSize, fallbackScrollbarWidth = _a.fallbackScrollbarWidth, scrollTop = _a.scrollTop, scrollLeft = _a.scrollLeft, trackClickBehavior = _a.trackClickBehavior, scrollDetectionThreshold = _a.scrollDetectionThreshold, propsWrapperProps = _a.wrapperProps, propsScrollerProps = _a.scrollerProps, propsContentProps = _a.contentProps, propsTrackXProps = _a.trackXProps, propsTrackYProps = _a.trackYProps, propsThumbXProps = _a.thumbXProps, propsThumbYProps = _a.thumbYProps, propsScrollbarWidth = _a.scrollbarWidth, elementRef = _a.elementRef, onUpdate = _a.onUpdate, onScroll = _a.onScroll, onScrollStart = _a.onScrollStart, onScrollStop = _a.onScrollStop, translateContentSizesToHolder = _a.translateContentSizesToHolder, translateContentSizeYToHolder = _a.translateContentSizeYToHolder, translateContentSizeXToHolder = _a.translateContentSizeXToHolder, children = _a.children, propsHolderProps = __rest(_a, ["createContext", "rtl", "native", "mobileNative", "momentum", "noDefaultStyles", "disableTracksMousewheelScrolling", "disableTrackXMousewheelScrolling", "disableTrackYMousewheelScrolling", "disableTracksWidthCompensation", "disableTrackXWidthCompensation", "disableTrackYWidthCompensation", "noScrollX", "noScrollY", "noScroll", "permanentTrackX", "permanentTrackY", "permanentTracks", "removeTracksWhenNotUsed", "removeTrackYWhenNotUsed", "removeTrackXWhenNotUsed", "minimalThumbSize", "maximalThumbSize", "minimalThumbXSize", "maximalThumbXSize", "minimalThumbYSize", "maximalThumbYSize", "fallbackScrollbarWidth", "scrollTop", "scrollLeft", "trackClickBehavior", "scrollDetectionThreshold", "wrapperProps", "scrollerProps", "contentProps", "trackXProps", "trackYProps", "thumbXProps", "thumbYProps", "scrollbarWidth", "elementRef", "onUpdate", "onScroll", "onScrollStart", "onScrollStop", "translateContentSizesToHolder", "translateContentSizeYToHolder", "translateContentSizeXToHolder", "children"]);
        var scrollbarWidth = !isUndef(propsScrollbarWidth) ? propsScrollbarWidth : getScrollbarWidth() || 0;
        if (native || (!scrollbarWidth && mobileNative)) {
            this.elementRefHolder(null);
            this.elementRefWrapper(null);
            this.elementRefTrackX(null);
            this.elementRefTrackY(null);
            this.elementRefThumbX(null);
            this.elementRefThumbY(null);
            var contentProps_1 = __assign(__assign({}, propsContentProps), { key: "ScrollbarsCustom-Content", className: n$1("ScrollbarsCustom-Content", propsContentProps.className), children: children });
            var scrollerProps_1 = __assign(__assign({}, propsHolderProps), { className: n$1("ScrollbarsCustom native", this.state.trackYVisible && "trackYVisible", this.state.trackXVisible && "trackXVisible", this.state.isRTL && "rtl", propsHolderProps.className), style: __assign(__assign(__assign(__assign({}, propsHolderProps.style), (!isUndef(rtl) && {
                    direction: rtl ? "rtl" : "ltr",
                })), (momentum && { WebkitOverflowScrolling: "touch" })), { overflowX: noScroll || noScrollX ? "hidden" : permanentTracks || permanentTrackX ? "scroll" : "auto", overflowY: noScroll || noScrollY ? "hidden" : permanentTracks || permanentTrackY ? "scroll" : "auto" }), onScroll: this.handleScrollerScroll, children: renderDivWithRenderer(contentProps_1, this.elementRefContent), renderer: propsScrollerProps.renderer, elementRef: propsScrollerProps.elementRef });
            return renderDivWithRenderer(scrollerProps_1, this.elementRefScroller);
        }
        var styles = ScrollbarComponent.calculateStyles(this.props, this.state, this.scrollValues, scrollbarWidth);
        var holderChildren = [];
        var contentProps = __assign(__assign({}, propsContentProps), { key: "ScrollbarsCustom-Content", className: n$1("ScrollbarsCustom-Content", propsContentProps.className), style: styles.content, children: createContext ? (React.createElement(ScrollbarContext.Provider, { value: { parentScrollbar: this }, children: children })) : (children) });
        var scrollerProps = __assign(__assign({}, propsScrollerProps), { key: "ScrollbarsCustom-Scroller", className: n$1("ScrollbarsCustom-Scroller", propsScrollerProps.className), style: styles.scroller, children: renderDivWithRenderer(contentProps, this.elementRefContent), onScroll: this.handleScrollerScroll });
        var wrapperProps = __assign(__assign({}, propsWrapperProps), { key: "ScrollbarsCustom-Wrapper", className: n$1("ScrollbarsCustom-Wrapper", propsWrapperProps.className), style: styles.wrapper, children: renderDivWithRenderer(scrollerProps, this.elementRefScroller) });
        holderChildren.push(renderDivWithRenderer(wrapperProps, this.elementRefWrapper));
        if (this.state.trackYVisible || (!removeTracksWhenNotUsed && !removeTrackYWhenNotUsed)) {
            var thumbYProps = __assign(__assign({}, propsThumbYProps), { key: "ScrollbarsCustom-ThumbY", style: styles.thumbY, elementRef: this.elementRefThumbY, onDrag: this.handleThumbYDrag, onDragEnd: this.handleThumbYDragEnd, axis: exports.AXIS_DIRECTION.Y });
            var trackYProps = __assign(__assign(__assign(__assign({}, propsTrackYProps), { key: "ScrollbarsCustom-TrackY", style: styles.trackY, elementRef: this.elementRefTrackY, onClick: this.handleTrackYClick }), ((disableTracksMousewheelScrolling || disableTrackYMousewheelScrolling) && {
                onWheel: this.handleTrackYMouseWheel,
            })), { axis: exports.AXIS_DIRECTION.Y });
            trackYProps.children = React.createElement(ScrollbarThumbComponent, __assign({}, thumbYProps));
            holderChildren.push(React.createElement(ScrollbarTrackComponent, __assign({}, trackYProps)));
        }
        else {
            this.elementRefTrackY(null);
            this.elementRefThumbY(null);
        }
        if (this.state.trackXVisible || (!removeTracksWhenNotUsed && !removeTrackXWhenNotUsed)) {
            var thumbXProps = __assign(__assign({}, propsThumbXProps), { key: "ScrollbarsCustom-ThumbX", style: styles.thumbX, elementRef: this.elementRefThumbX, onDrag: this.handleThumbXDrag, onDragEnd: this.handleThumbXDragEnd, axis: exports.AXIS_DIRECTION.X });
            var trackXProps = __assign(__assign(__assign(__assign({}, propsTrackXProps), { key: "ScrollbarsCustom-TrackX", style: styles.trackX, elementRef: this.elementRefTrackX, onClick: this.handleTrackXClick }), ((disableTracksMousewheelScrolling || disableTrackXMousewheelScrolling) && {
                onWheel: this.handleTrackXMouseWheel,
            })), { axis: exports.AXIS_DIRECTION.X });
            trackXProps.children = React.createElement(ScrollbarThumbComponent, __assign({}, thumbXProps));
            holderChildren.push(React.createElement(ScrollbarTrackComponent, __assign({}, trackXProps)));
        }
        else {
            this.elementRefTrackX(null);
            this.elementRefThumbX(null);
        }
        var holderProps = __assign(__assign({}, propsHolderProps), { className: n$1("ScrollbarsCustom", this.state.trackYVisible && "trackYVisible", this.state.trackXVisible && "trackXVisible", this.state.isRTL && "rtl", propsHolderProps.className), style: styles.holder, children: holderChildren });
        return renderDivWithRenderer(holderProps, this.elementRefHolder);
    };
    ScrollbarComponent.contextType = ScrollbarContext;
    ScrollbarComponent.propTypes = {
        createContext: propTypes.bool,
        rtl: propTypes.bool,
        native: propTypes.bool,
        mobileNative: propTypes.bool,
        momentum: propTypes.bool,
        noDefaultStyles: propTypes.bool,
        disableTracksMousewheelScrolling: propTypes.bool,
        disableTrackXMousewheelScrolling: propTypes.bool,
        disableTrackYMousewheelScrolling: propTypes.bool,
        disableTracksWidthCompensation: propTypes.bool,
        disableTrackXWidthCompensation: propTypes.bool,
        disableTrackYWidthCompensation: propTypes.bool,
        minimalThumbSize: propTypes.number,
        maximalThumbSize: propTypes.number,
        minimalThumbXSize: propTypes.number,
        maximalThumbXSize: propTypes.number,
        minimalThumbYSize: propTypes.number,
        maximalThumbYSize: propTypes.number,
        noScrollX: propTypes.bool,
        noScrollY: propTypes.bool,
        noScroll: propTypes.bool,
        permanentTrackX: propTypes.bool,
        permanentTrackY: propTypes.bool,
        permanentTracks: propTypes.bool,
        translateContentSizesToHolder: propTypes.bool,
        translateContentSizeYToHolder: propTypes.bool,
        translateContentSizeXToHolder: propTypes.bool,
        removeTracksWhenNotUsed: propTypes.bool,
        removeTrackYWhenNotUsed: propTypes.bool,
        removeTrackXWhenNotUsed: propTypes.bool,
        scrollbarWidth: propTypes.number,
        fallbackScrollbarWidth: propTypes.number,
        scrollDetectionThreshold: propTypes.number,
        scrollTop: propTypes.number,
        scrollLeft: propTypes.number,
        className: propTypes.string,
        wrapperProps: propTypes.object,
        contentProps: propTypes.object,
        trackXProps: propTypes.object,
        trackYProps: propTypes.object,
        thumbXProps: propTypes.object,
        thumbYProps: propTypes.object,
        onUpdate: propTypes.func,
        onScroll: propTypes.func,
        onScrollStart: propTypes.func,
        onScrollStop: propTypes.func,
    };
    ScrollbarComponent.defaultProps = {
        momentum: true,
        minimalThumbSize: 30,
        fallbackScrollbarWidth: 20,
        trackClickBehavior: exports.TRACK_CLICK_BEHAVIOR.JUMP,
        scrollDetectionThreshold: 100,
        wrapperProps: {},
        scrollerProps: {},
        contentProps: {},
        trackXProps: {},
        trackYProps: {},
        thumbXProps: {},
        thumbYProps: {},
    };
    return ScrollbarComponent;
}(React.Component));

___$insertStyle(".SidebarMenu-component {\n  padding: 10px 0;\n}\n.SidebarMenu-component__list {\n  font-size: 15px;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  position: relative;\n}\n.SidebarMenu-component__list li {\n  position: relative;\n}\n\n.SidebarMenuItem-component {\n  line-height: 1.3;\n  -webkit-transition: unset;\n  color: #b7c0cd;\n  font-size: 15px;\n  height: auto;\n  padding: 8px 15px;\n  align-items: center;\n  display: flex;\n  justify-content: flex-start;\n  position: relative;\n  transition: all 0.2s ease-in-out 0s;\n}\n.SidebarMenuItem-component__icon {\n  margin-right: 15px;\n}\n.SidebarMenuItem-component__plus {\n  margin-left: auto;\n  margin-right: -12px;\n}\n.SidebarMenuItem-component__badge {\n  margin-left: auto;\n}\n.SidebarMenuItem-component__arrow {\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  -o-transform: rotate(-90deg);\n  transform: rotate(-90deg);\n}\n.SidebarMenuItem-component:hover {\n  cursor: pointer;\n  color: #fff;\n}\n.SidebarMenuItem-component--active {\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.2);\n}\n.SidebarMenuItem-component--active .SidebarMenuItem-component__arrow {\n  -webkit-transform: rotate(0);\n  -moz-transform: rotate(0);\n  -ms-transform: rotate(0);\n  -o-transform: rotate(0);\n  transform: rotate(0);\n}");

var SidebarMenuItemComponent = function (props) {
    var bm = new BEM("SidebarMenuItem-component", {
        active: props.active,
    });
    bm.Append(props.className);
    return (React.createElement("a", { className: bm.toString(), style: props.style, onClick: props.onClick },
        !isUndef(props.icon) && React.cloneElement(props.icon, { className: bm.Children("icon") }),
        React.createElement(TypographyComponent, { color: props.header ? "text-primary" : undefined, component: "span", variant: "caption" }, props.name),
        !isUndef(props.number) && (React.createElement(BadgeComponent, { className: bm.Children("badge"), badgeContent: props.number })),
        props.plus && (React.createElement(ButtonIconComponent, { className: bm.Children("plus"), onClick: props.onClickPlus },
            React.createElement(IconComponent, { style: { width: 15, height: 15 }, icon: "plus" }))),
        props.arrow && (React.createElement(IconComponent, { className: bm.Children("arrow"), style: { width: 15, height: 15, marginLeft: "auto" }, icon: "arrowBottom" }))));
};

function SidebarMenuComponent(props) {
    var bm = new BEM("SidebarMenu-component", {});
    var getItem = function (item, index) {
        switch (item.constructor.name) {
            case "SidebarMenuItemHeader": {
                var data = item;
                return (React.createElement(SidebarMenuItemComponent, { name: data.name, icon: React.createElement(IconComponent, { icon: data.icon }) }));
            }
            case "SidebarMenuItemGroup": {
                var data = item;
                return (React.createElement(SidebarMenuItemComponent, { name: data.name, icon: React.createElement(AvatarComponent, { mini: true, src: data.icon }, "RM") }));
            }
            case "SidebarMenuItemChat": {
                var data = item;
                return (React.createElement(SidebarMenuItemComponent, { active: data.active, name: data.name, icon: React.createElement(AvatarComponent, { status: data.online, mini: true, src: data.icon }, "RM"), number: data.number }));
            }
            case "SidebarMenuItemTitle": {
                var data = item;
                return (React.createElement(SidebarMenuItemComponent, { header: true, name: data.name, onClickPlus: data.onClick, plus: true }));
            }
        }
    };
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("ul", { className: bm.Children("list") }, props.menu.map(function (item, index) {
            return (React.createElement("li", { key: index, onClick: function () { return props.onClick(item, index); } }, getItem(item)));
        }))));
}

___$insertStyle(".Status-component {\n  background-color: #263238;\n  border-radius: 50%;\n  display: inline-block;\n  height: 5px;\n  width: 5px;\n  border: 2px solid #fff;\n  margin: 0;\n  transition: all 0.2s ease-in-out 0s;\n  white-space: nowrap;\n}\n.Status-component--online {\n  background-color: #55ce63;\n}\n.Status-component--away {\n  background-color: #faa937;\n}\n.Status-component--offline {\n  background-color: #f62d51;\n}");

function StatusComponent(props) {
    var _a;
    var bm = new BEM("Status-component", (_a = {},
        _a[props.status] = !!props.status,
        _a));
    bm.Append(props.className);
    return (React.createElement("span", { style: props.style, className: bm.toString() }));
}

___$insertStyle(".Tab-component {\n  display: table;\n  height: 100%;\n  table-layout: fixed;\n  width: 100%;\n  background-color: #f7f7f7;\n}\n.Tab-component__header {\n  background-color: #fff;\n  padding: 0;\n  border: 0;\n}\n.Tab-component__list {\n  border-bottom: 1px solid #dee2e6;\n  padding: 0;\n  height: 69px;\n}\n.Tab-component__tab {\n  margin-bottom: -1px;\n  display: flex;\n  margin-right: 0;\n  border: 2px solid transparent;\n  border-radius: 0;\n  align-items: center;\n  justify-content: center;\n  padding: 16.5px 15px;\n  color: #888;\n}\n.Tab-component__tab--active {\n  color: #495057;\n  border-bottom-width: 2px;\n  border-color: transparent;\n  border-bottom-color: #ff9b44;\n  background-color: transparent;\n}\n.Tab-component__tab--active:hover {\n  cursor: pointer;\n}\n.Tab-component__tab:not(.Tab-component__tab--active):hover {\n  background-color: #eee;\n  border-color: transparent;\n  color: #333;\n  cursor: pointer;\n}\n.Tab-component__content {\n  background-color: #fff;\n  height: 100%;\n  padding-top: 20px;\n}");

function TabComponent(props) {
    var _a = React.useState(props.active || 0), active = _a[0], setActive = _a[1];
    var bm = new BEM("Tab-component", {});
    var onClick = function (index) {
        setActive(index);
    };
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("header", { className: bm.Children("header") },
            React.createElement(ListComponent, { className: bm.Children("list"), horizontal: true }, props.tabs.map(function (item, index) { return (React.createElement("li", { onClick: function () { return onClick(index); }, key: index, className: (index !== active) ? bm.Children("tab") : bm.Modifier("tab", "active", true) }, item)); }))),
        React.createElement("div", { className: bm.Children("content") }, React.Children.map(props.children, function (item, index) {
            if (index == active)
                return item;
            return null;
        }))));
}

___$insertStyle(".ProfileImage-component {\n  padding: 30px;\n  position: relative;\n  text-align: center;\n}\n.ProfileImage-component__change {\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  color: #fff;\n  display: none;\n  height: 100%;\n  left: 0;\n  line-height: 120px;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n.ProfileImage-component__avatar {\n  height: 120px;\n  margin: 0 auto;\n  position: relative;\n  width: 120px;\n  cursor: pointer;\n}\n.ProfileImage-component__avatar img {\n  height: auto;\n  margin: 0;\n  width: 120px;\n  border-radius: 50%;\n}\n.ProfileImage-component__avatar:hover .ProfileImage-component__change {\n  display: block;\n}\n.ProfileImage-component__title {\n  margin-top: 10px;\n}\n.ProfileImage-component__button {\n  border-radius: 40px;\n  height: 36px;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  width: 36px;\n  background-color: #ff9b44;\n  border: 1px solid #ff9b44;\n}\n.ProfileImage-component__button svg {\n  width: 15px;\n  height: 15px;\n}\n.ProfileImage-component__button:hover {\n  background-color: #ff851a;\n  border: 1px solid #ff851a;\n}\n.ProfileImage-component__button:hover svg {\n  color: white;\n}");

function ProfileImageComponent(props) {
    var bm = new BEM("ProfileImage-component", {});
    var _a = props.changeText, changeText = _a === void 0 ? "Change Image" : _a;
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: bm.Children("avatar") },
            React.createElement("img", { src: props.avatar, alt: props.title }),
            React.createElement(TypographyComponent, { component: "span", className: bm.Children("change") }, changeText)),
        React.createElement(TypographyComponent, { className: bm.Children("title"), component: "h3", variant: "h5" }, props.title),
        React.createElement(TypographyComponent, { component: "span", color: "gray", variant: "caption" }, props.subTitle),
        React.createElement(ButtonIconComponent, { onClick: props.onClick, className: bm.Children("button") },
            React.createElement(IconComponent, { icon: "pencil" }))));
}

___$insertStyle(".ListInfo-component {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n.ListInfo-component__item {\n  padding: 6px 15px;\n  display: flex;\n  align-items: center;\n}\n.ListInfo-component__item__value {\n  margin-left: auto;\n}");

function ListInfoComponent(props) {
    var bm = new BEM("ListInfo-component", {});
    bm.Append(props.className);
    return (React.createElement("ul", { style: props.style, className: bm.toString() }, props.data.map(function (item, index) { return (React.createElement("li", { className: bm.Children("item"), key: index },
        React.createElement(TypographyComponent, { component: "span", variant: "body1" }, item.title),
        React.createElement(TypographyComponent, { className: bm.Children("item__value"), component: "span", variant: "body2", color: "gray" }, item.value))); })));
}

___$insertStyle(".ChatCall-component {\n  margin-bottom: 20px;\n  display: flex;\n}\n.ChatCall-component__avatar {\n  margin-right: 20px;\n}\n.ChatCall-component__body {\n  color: #888;\n  float: left;\n  position: relative;\n  border: 0;\n  padding: 0;\n  border-radius: 0 !important;\n  background-color: transparent;\n  max-width: 100%;\n  margin-top: 0;\n}\n.ChatCall-component__details {\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n}\n.ChatCall-component__details span {\n  margin-left: 10px;\n}");

function ChatCallComponent(props) {
    var bm = new BEM("ChatCall-component", {});
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(AvatarComponent, { className: bm.Children("avatar"), src: props.avatar, mini: true }, props.name),
        React.createElement("div", { className: bm.Children("body") },
            React.createElement(TypographyComponent, { component: "span", variant: "body2", style: { color: "black" } }, props.name),
            React.createElement(TypographyComponent, { component: "span", style: { fontSize: 13, marginLeft: 10 }, color: "gray" },
                React.createElement("small", null, props.date)),
            React.createElement("div", { className: bm.Children("details") },
                React.createElement(IconComponent, { icon: props.icon }),
                React.createElement(TypographyComponent, { variant: "caption", component: "span" }, props.message)))));
}

___$insertStyle(".Separator-component {\n  border-bottom: 1px solid #eaeaea;\n  height: 12px;\n  margin: 7px 0 20px;\n  position: relative;\n  text-align: center;\n}\n.Separator-component__data {\n  color: #727272;\n  font-size: 12px;\n  padding: 0 11px;\n  background-color: #fff;\n}");

function SeparatorComponent(props) {
    var bm = new BEM("Separator-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("span", { className: bm.Children("data") }, props.data)));
}

___$insertStyle(".HeaderToolbar-component {\n  background-color: #fff;\n  border-bottom: 1px solid #eaeaea;\n  padding: 10px 15px;\n  display: flex;\n  align-items: center;\n}\n.HeaderToolbar-component__title {\n  flex: 1;\n  margin: 0;\n  padding: 0;\n}\n.HeaderToolbar-component__left {\n  flex: 1;\n  margin: 0;\n  padding: 0;\n}\n.HeaderToolbar-component__nav {\n  display: flex;\n  align-items: center;\n}\n.HeaderToolbar-component__nav .List-component {\n  margin: 0;\n  padding: 0;\n}");

function HeaderToolbarComponent(props) {
    var bm = new BEM("HeaderToolbar-component", {});
    bm.Append(props.className);
    var onClick = function (item, index) {
        props.onClick && props.onClick(item, index);
    };
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: bm.Children("left") },
            props.left,
            props.title && (React.createElement(TypographyComponent, { component: "h4", variant: "h5", className: bm.Children("title") }, props.title))),
        React.createElement("div", { className: bm.Children("nav") },
            props.search && (React.createElement(InputSearchComponent, { outlined: true, onChange: props.search.onChange, placeholder: props.search.placeholder, value: props.search.value })),
            React.createElement(ListComponent, { horizontal: true },
                props.rightBefore,
                props.icons.map(function (item, index) { return (React.createElement(ButtonIconComponent, { hover: true, key: index, onClick: function () { return onClick(item, index); } }, item)); }),
                props.rightAfter))));
}

___$insertStyle(".ContentToolbar-component {\n  display: table-row;\n  height: 100%;\n}\n.ContentToolbar-component__wrap {\n  height: 100%;\n  position: relative;\n  width: 100%;\n}\n.ContentToolbar-component__inner {\n  bottom: 0;\n  left: 0;\n  overflow: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}");

function ContentToolbarComponent(props) {
    var bm = new BEM("ContentToolbar-component", {});
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: bm.Children("wrap") },
            React.createElement("div", { className: bm.Children("inner") }, props.children))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ListMenu-component {\n  background-color: #fff;\n  border: 1px solid #e3e3e3;\n  list-style: none;\n  padding: 0;\n}\n.ListMenu-component__item {\n  display: block;\n  position: relative;\n  border-left: 3px solid transparent;\n  color: #333;\n  padding: 10px 15px;\n}\n.ListMenu-component__item--active {\n  color: #ff9b44;\n  border-color: #ff9b44;\n}\n.ListMenu-component__item:hover {\n  background-color: #eee;\n  border-color: #ff9b44;\n  cursor: pointer;\n}");

function ListMenuComponent(props) {
    var bm = new BEM("ListMenu-component", {});
    var _a = React.useState(props.active), active = _a[0], setActive = _a[1];
    bm.Append(props.className);
    var onClick = function (index) {
        setActive(index);
        props.onChange && props.onChange(index);
    };
    return (React.createElement("ul", { style: props.style, className: bm.toString() }, props.data.map(function (item, index) { return (React.createElement("li", { onClick: function () { return onClick(index); }, className: bm.Modifier("item", "active", active == index), key: index }, item.label)); })));
}

___$insertStyle(".ContactCont-component {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.ContactCont-component--card {\n  background-color: #fff;\n  border-bottom: 1px solid #eaeaea;\n  border-radius: inherit;\n  padding: 10px;\n}");

function ContactContComponent(props) {
    var bm = new BEM("ContactCont-component", {
        card: props.card,
    });
    bm.Append(props.className);
    var Component = props.component || "div";
    return (
    // @ts-ignore
    React.createElement(Component, { "data-name": props.name, style: props.style, className: bm.toString() },
        React.createElement(MessageAvatarComponent, { src: props.avatar, name: props.name, title: props.name, subTitle: props.subTitle }),
        React.createElement(DropdownComponent, { data: [
                { label: "Edit", value: "edit", icon: React.createElement("i", null) },
                { label: "Delete", value: "delete", icon: React.createElement("i", null) },
            ], trigger: (React.createElement(ButtonIconComponent, null,
                React.createElement(IconComponent, { style: { color: "gray" }, icon: "more_vert" }))) })));
}

___$insertStyle(".AlphapetsList-component {\n  background-color: #fff;\n  border-left: 1px solid #ddd;\n  bottom: 0;\n  height: 100%;\n  overflow: hidden;\n  padding-bottom: 70px;\n  position: fixed;\n  right: 0;\n  top: 65px;\n  width: 50px;\n}\n.AlphapetsList-component__item {\n  display: block;\n  text-align: center;\n  padding: 2px;\n  color: #333;\n}\n.AlphapetsList-component__item:hover {\n  cursor: pointer;\n}\n.AlphapetsList-component__scroll {\n  height: 100%;\n  overflow: auto;\n}\n.AlphapetsList-component__scroll .ScrollbarsCustom-Track {\n  display: none;\n}");

/**
 * @ignore - internal component.
 */
var ContactsAppContext = React.createContext({
    contacts: [],
    goTo: function (item) {
    }
});
ContactsAppContext.displayName = 'ContactsAppContext';

function useContactsAppContext() {
    return React.useContext(ContactsAppContext);
}

var alphabetDir = alphabet();
function AlphapetsListComponent(props) {
    var bm = new BEM("AlphapetsList-component", {});
    bm.Append(props.className);
    var use = useContactsAppContext();
    var onClick = function (item) {
        if (use) {
            use.goTo(item);
        }
        props.onClick && props.onClick(item);
    };
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(ScrollbarComponent, { className: bm.Children("scroll") }, alphabetDir.map(function (item) { return (React.createElement("a", { onClick: function () { return onClick(item); }, className: bm.Children("item"), key: item }, item)); }))));
}

___$insertStyle(".Breadcrumb-component {\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  list-style: none;\n  border-radius: 0.25rem;\n  background-color: transparent;\n  color: #6c757d;\n  font-size: 1rem;\n  font-weight: 500;\n  padding: 0;\n  margin: 0;\n}\n.Breadcrumb-component__item a {\n  color: #333;\n  text-decoration: none;\n  background-color: transparent;\n}\n.Breadcrumb-component__item--active {\n  color: #6c757d;\n}\n.Breadcrumb-component__item + .Breadcrumb-component__item {\n  padding-left: 0.5rem;\n}\n.Breadcrumb-component__item + .Breadcrumb-component__item::before {\n  display: inline-block;\n  padding-right: 0.5rem;\n  color: #6c757d;\n  content: \"/\";\n}");

function BreadcrumbComponent(props) {
    var bm = new BEM("Breadcrumb-component", {});
    bm.Append(props.className);
    return (React.createElement("ul", { style: props.style, className: bm.toString() }, props.data.map(function (item, index) { return (React.createElement("li", { key: index, className: bm.Modifier("item", "active", props.data.length - 1 == index) },
        React.createElement("a", { href: item.route }, item.label))); })));
}

___$insertStyle(".TitleRow-component {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.TitleRow-component__title {\n  margin-bottom: 8px;\n}\n.TitleRow-component__right {\n  display: flex;\n  align-items: center;\n}\n.TitleRow-component__right > * {\n  margin-left: 10px !important;\n}");

function TitleRowComponent(props) {
    var bm = new BEM("TitleRow-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: bm.Children("left") },
            React.createElement(TypographyComponent, { component: "h3", variant: "h5", className: bm.Children("title") }, props.title),
            React.createElement(BreadcrumbComponent, { className: bm.Children("breadcrumb"), data: props.breadcrumb })),
        React.createElement("div", { className: bm.Children("right") },
            props.extra,
            props.button && (React.createElement(ButtonComponent, { rounded: true, theme: "orange", className: bm.Children("button"), onClick: props.button.onClick },
                React.createElement(IconComponent, { icon: props.button.icon }),
                props.button.label)))));
}

___$insertStyle(".GroupTitle-component {\n  color: #8e8e8e;\n}\n.GroupTitle-component__title {\n  font-weight: 400;\n  color: #1f1f1f;\n  margin-bottom: 5px;\n}");

function GroupTitleComponent(props) {
    var bm = new BEM("GroupTitle-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(TypographyComponent, { component: "h3", variant: "body1", className: bm.Children("title") }, props.title),
        props.content));
}

___$insertStyle(".ProgressLabel-component__row {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}");

function ProgressLabelComponent(props) {
    var bm = new BEM("ProgressLabel-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() }, React.Children.map(props.children, function (child, index) {
        return (React.createElement("div", { key: index, className: bm.Children("item") },
            React.createElement("div", { className: bm.Children("row") },
                React.createElement("div", null, child.props.label || ""),
                React.createElement("div", null,
                    child.props.value,
                    "%")),
            child));
    })));
}

___$insertStyle(".NavbarToolbar-component {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  border: 0 none;\n  margin: 0;\n  min-height: auto;\n  padding: 0;\n}");

function NavbarToolbarComponent(props) {
    var bm = new BEM("NavbarToolbar-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: bm.Children("left") }, props.left),
        props.center && (React.createElement("div", { className: bm.Children("center") }, props.center)),
        React.createElement("div", { className: bm.Children("right") }, props.right)));
}

___$insertStyle(".TaskContainer-component {\n  display: flex;\n  align-items: center;\n  background: #fff;\n  padding: 8px 15px;\n  width: 100%;\n  border: 1px solid #eaeaea;\n  border-bottom: none;\n  box-sizing: border-box;\n  position: relative;\n  -webkit-transition: background 200ms ease;\n  -moz-transition: background 200ms ease;\n  -ms-transition: background 200ms ease;\n  -o-transition: background 200ms ease;\n  transition: background 200ms ease;\n}\n.TaskContainer-component__check {\n  margin-right: 20px;\n}\n.TaskContainer-component__title {\n  flex: 1;\n}\n.TaskContainer-component__actions {\n  display: none;\n}\n.TaskContainer-component:hover {\n  background: #EBEEEF;\n}\n.TaskContainer-component:hover .TaskContainer-component__actions {\n  display: flex;\n}\n.TaskContainer-component--check {\n  background: #f9f9f9;\n}\n.TaskContainer-component--selected {\n  background-color: sandybrown;\n  color: white;\n}\n.TaskContainer-component--selected:hover {\n  background-color: sandybrown;\n  color: white;\n}");

/**
 * @ignore - internal component.
 */
var TaskAppContext = React.createContext({});
TaskAppContext.displayName = 'TaskAppContext';

function useTaskAppContext() {
    return React.useContext(TaskAppContext);
}

function TaskContainerComponent(props) {
    var check = props.check;
    var bm = new BEM("TaskContainer-component", {
        check: check,
        selected: props.selected,
    });
    var use = useTaskAppContext();
    var onClick = function () {
        if (use != undefined) {
            use.toggleCheckTask(props.id);
        }
        props.onClick && props.onClick(props);
    };
    bm.Append(props.className);
    var Component = props.component || "div";
    var onClickAction = function (action) {
        switch (action) {
            case 1: {
                if (use) {
                    use.assignUser(props.id);
                }
                props.onAssignUser && props.onAssignUser(props.id);
                return;
            }
            case 2: {
                if (use) {
                    use.deleteTrack(props.id);
                }
                props.onDeleteTrack && props.onDeleteTrack(props.id);
                return;
            }
            case 3: {
                if (use) {
                    use.selectedTask(props.id);
                }
                props.onSelectedTask && props.onSelectedTask(props.id);
                return;
            }
        }
    };
    var onBlurTitle = function (textContent) {
        if (use) {
            use.onChangeTitle(props.id, textContent);
        }
        props.onChangeTitle && props.onChangeTitle(props.id, textContent);
    };
    return (
    // @ts-ignore
    React.createElement(Component, { style: props.style, className: bm.toString() },
        React.createElement(CheckComponent, { check: check, onClick: onClick, className: bm.Children("check") }),
        React.createElement(TypographyComponent, { variant: "body2", component: "span", className: bm.Children("title") },
            React.createElement("span", { contentEditable: true, suppressContentEditableWarning: true, onBlur: function (e) { return onBlurTitle(e.target.textContent); } }, props.title)),
        React.createElement("div", { className: bm.Children("actions") },
            React.createElement(ButtonIconComponent, { onClick: function () { return onClickAction(3); }, action: true, style: { color: "black" } },
                React.createElement(IconComponent, { icon: "eye" })),
            React.createElement(ButtonIconComponent, { onClick: function () { return onClickAction(1); }, action: true, style: { color: "black" } },
                React.createElement(IconComponent, { icon: "user" })),
            React.createElement(ButtonIconComponent, { onClick: function () { return onClickAction(2); }, action: true, style: { color: "black" } },
                React.createElement(IconComponent, { icon: "trash" })))));
}

___$insertStyle(".Check-component {\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 100%;\n  text-align: center;\n  cursor: pointer;\n  -webkit-transition: all 300ms ease;\n  -moz-transition: all 300ms ease;\n  -ms-transition: all 300ms ease;\n  -o-transition: all 300ms ease;\n  transition: all 300ms ease;\n  color: #ccc;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n.Check-component__icon {\n  width: 14px;\n  height: 14px;\n}\n.Check-component--check {\n  background: #35BA67;\n  border: 1px solid #2fa65c;\n  color: white;\n}");

function CheckComponent(props) {
    var bm = new BEM("Check-component", {
        check: props.check,
    });
    bm.Append(props.className);
    return (React.createElement("div", { onClick: props.onClick, style: props.style, className: bm.toString() },
        React.createElement(IconComponent, { className: bm.Children("icon"), icon: "tick" })));
}

___$insertStyle(".Follower-component {\n  display: flex;\n  align-items: center;\n}\n.Follower-component__label {\n  margin-right: 10px;\n}\n.Follower-component__plus {\n  color: #000;\n}\n.Follower-component__avatar {\n  margin-right: 5px;\n}");

function FollowerComponent(props) {
    var bm = new BEM("Follower-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(TypographyComponent, { className: bm.Children("label"), component: "p", variant: "body2" }, props.label),
        React.createElement(ListComponent, { horizontal: true },
            props.avatars.map(function (item, index) { return (React.createElement(AvatarComponent, __assign({}, item, { className: [bm.Children("avatar"), item.className].join(" "), src: item.src, mini: true, key: index }), item.children)); }),
            React.createElement(ButtonIconComponent, { onClick: props.onClick, className: bm.Children("plus"), action: true, hover: true },
                React.createElement(IconComponent, { icon: "plus" })))));
}

___$insertStyle(".TaskHeader-component {\n  align-items: center;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  flex: 0 1 180px;\n  padding: 5px 10px 5px 5px;\n  position: relative;\n  color: #333;\n  display: flex;\n}\n.TaskHeader-component__icon {\n  margin-right: 10px;\n}\n.TaskHeader-component__close {\n  align-items: center;\n  background-color: #e3e3e3;\n  border-radius: 50%;\n  color: #333;\n  cursor: pointer;\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  margin-right: 10px;\n  position: absolute;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  visibility: hidden;\n  width: 20px;\n}\n.TaskHeader-component__close .Icon-component {\n  height: 12px;\n  width: 12px;\n}\n.TaskHeader-component:hover .TaskHeader-component__close {\n  visibility: visible;\n}\n.TaskHeader-component__close:hover {\n  background-color: #d6d6d6;\n}\n.TaskHeader-component:hover {\n  border-color: #e3e3e3;\n  cursor: pointer;\n}");

function TaskHeaderComponent(props) {
    var bm = new BEM("TaskHeader-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { onClick: props.onClick, style: props.style, className: bm.toString() },
        React.createElement("div", { className: bm.Children("icon") }, props.icon),
        React.createElement("div", { className: bm.Children("right") },
            React.createElement(TypographyComponent, { variant: "caption", color: "gray" }, props.title),
            React.createElement(TypographyComponent, { variant: "body2" }, props.subTitle)),
        React.createElement(ButtonIconComponent, { onClick: props.onDelete, className: bm.Children("close") },
            React.createElement(IconComponent, { icon: "close" }))));
}

___$insertStyle(".GroupIcon-component {\n  align-items: flex-start;\n  display: flex;\n  margin-bottom: 15px;\n  margin-top: 5px;\n}\n.GroupIcon-component__icon {\n  color: #ccc;\n  margin-right: 10px;\n  margin-top: 5px;\n}\n.GroupIcon-component__content {\n  display: flex;\n  width: 100%;\n}\n.GroupIcon-component__content textarea {\n  color: #495057;\n  height: auto;\n  padding-left: 5px;\n  padding-right: 5px;\n  font-size: 14px;\n  min-height: 100px;\n}\n.GroupIcon-component__content:hover textarea {\n  border-color: #e3e3e3;\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 5px;\n}");

function GroupIconComponent(props) {
    var bm = new BEM("GroupIcon-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("div", { className: bm.Children("icon") }, props.icon),
        React.createElement("div", { className: bm.Children("content") }, props.content)));
}

___$insertStyle(".TaskInfoLine-component {\n  color: #a3a3a3;\n  font-size: 11px;\n  line-height: 17px;\n  min-width: 1px;\n  margin-left: 50px;\n  display: flex;\n  align-items: center;\n}\n.TaskInfoLine-component__line {\n  overflow-wrap: break-word;\n}\n.TaskInfoLine-component__line a {\n  color: #888;\n  font-weight: 600;\n  display: inline-flex;\n  margin-right: 5px;\n}\n.TaskInfoLine-component__time {\n  color: #a3a3a3;\n  display: inline-block;\n  font-size: 11px;\n  display: inline-block;\n  padding-left: 10px;\n}");

function TaskInfoLineComponent(props) {
    var bm = new BEM("TaskInfoLine-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement("span", { className: bm.Children("line") },
            React.createElement("a", null, props.user),
            React.createElement(TypographyComponent, { component: "span" }, props.subject)),
        React.createElement(TypographyComponent, { className: bm.Children("time") }, props.date)));
}

___$insertStyle(".ChatBubble-component {\n  margin-bottom: 20px;\n  display: flex;\n}\n.ChatBubble-component__avatar {\n  float: left;\n}\n.ChatBubble-component__body {\n  display: block;\n  overflow: hidden;\n  margin: 10px 0 0 15px;\n  padding-right: 20px;\n}\n.ChatBubble-component__bubble {\n  display: block;\n  width: 100%;\n  float: left;\n  margin-bottom: 10px;\n}\n.ChatBubble-component__content {\n  background-color: #fff;\n  border: 1px solid #eaeaea;\n  color: #888;\n  float: left;\n  position: relative;\n  padding: 8px 15px;\n  border-radius: 2px 20px 20px 2px;\n  max-width: 60%;\n  max-width: 100%;\n  border: 0;\n  padding: 0;\n  border-top-left-radius: 20px;\n  margin-top: 0;\n  border-bottom-left-radius: 20px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.ChatBubble-component__name {\n  color: #333;\n  font-size: 13px;\n}\n.ChatBubble-component__attach {\n  color: #333;\n  font-size: 13px;\n  margin-left: 5px;\n}\n.ChatBubble-component__attach .Icon-component {\n  width: 12px;\n  height: 12px;\n  margin-left: 10px;\n}\n.ChatBubble-component__time {\n  color: #a3a3a3;\n  display: inline-flex;\n  font-size: 11px;\n  margin-left: 5px;\n}\n.ChatBubble-component__list {\n  color: #a3a3a3;\n  padding: 5px 0 0;\n  line-height: 24px;\n  margin: 0;\n  list-style: none;\n}\n.ChatBubble-component__item {\n  display: flex;\n  align-items: center;\n}\n.ChatBubble-component__item .Icon-component {\n  margin-right: 5px;\n  width: 15px;\n  height: 15px;\n}\n.ChatBubble-component__description {\n  font-size: 13px;\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n.ChatBubble-component__images {\n  display: flex;\n  flex-wrap: wrap;\n  margin: -5px;\n}\n.ChatBubble-component__images li {\n  flex: 1 30%;\n  padding: 5px;\n}\n.ChatBubble-component__images li img {\n  width: 100%;\n  height: 100%;\n}");

function ChatBubbleComponent(props) {
    var bm = new BEM("ChatBubble-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(AvatarComponent, { className: bm.Children("avatar"), src: props.avatar }, props.name),
        React.createElement("div", { className: bm.Children("body") },
            React.createElement("div", { className: bm.Children("bubble") },
                React.createElement("div", { className: bm.Children("content") },
                    React.createElement("span", { className: bm.Children("name") }, props.name),
                    props.files.length > 0 && (React.createElement("span", { className: bm.Children("attach") },
                        "attached ",
                        props.files.length,
                        " files",
                        React.createElement(IconComponent, { icon: "attachment" }))),
                    React.createElement("span", { className: bm.Children("time") }, props.date),
                    props.description && (React.createElement(TypographyComponent, { className: bm.Children("description"), component: "p" }, props.description)),
                    React.createElement(ListComponent, { component: "ul", className: bm.Children("list") }, props.files.map(function (item, index) { return (React.createElement("li", { className: bm.Children("item"), key: index },
                        React.createElement(IconComponent, { icon: "file" }),
                        React.createElement("a", null, item.name))); })),
                    React.createElement(ListComponent, { component: "ul", className: bm.Children("images") }, props.images.map(function (item, index) { return (React.createElement("li", { key: index },
                        React.createElement("img", { src: item, alt: props.name }))); })))))));
}

___$insertStyle(".Invoice-component {\n  background-color: white;\n  color: #1f1f1f;\n}\n.Invoice-component__logo {\n  height: auto;\n  margin-bottom: 20px;\n  max-height: 100px;\n  width: auto;\n}\n.Invoice-component__list {\n  padding-left: 0;\n  list-style: none;\n}\n.Invoice-component__list li {\n  color: #1f1f1f;\n  font-size: 14px;\n}\n.Invoice-component__invoice-to {\n  margin-top: 5px;\n}\n.Invoice-component__invoice-to li {\n  font-size: 14px;\n  color: #1f1f1f;\n}\n.Invoice-component__invoice-to li:first-child {\n  font-weight: bold;\n}\n.Invoice-component__payment-details {\n  margin-left: 0;\n  margin-top: 10px;\n}\n.Invoice-component__payment-details li {\n  padding: 0;\n}\n.Invoice-component__payment-details li span:first-child {\n  font-size: 14px;\n  color: #1f1f1f;\n}\n.Invoice-component__table {\n  margin-top: 20px;\n}\n.Invoice-component__grid {\n  margin-top: 20px;\n}\n\n.InvoiceDetails-component {\n  float: right;\n  text-align: right;\n  color: #1f1f1f;\n}\n.InvoiceDetails-component__title, .InvoiceDetails-component__list li {\n  color: #1f1f1f;\n}\n.InvoiceDetails-component__list li {\n  font-size: 14px;\n}");

function InvoiceDetailsComponent(props) {
    var bm = new BEM("InvoiceDetails-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(TypographyComponent, { className: bm.Children("title"), component: "h3" },
            "INVOICE #",
            props.invoiceNum),
        React.createElement(ListComponent, { component: "ul", className: bm.Children("list") }, props.data.map(function (item, index) { return (React.createElement("li", { key: index }, item)); }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}");

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.GroupSmall-component__item {\n  color: gray;\n}\n.GroupSmall-component__item b {\n  margin-right: 5px;\n  color: #000;\n}");

function GroupSmallComponent(props) {
    var bm = new BEM("GroupSmall-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(TypographyComponent, { component: "h2", variant: "body1" }, props.name),
        React.createElement("small", null, props.data.map(function (item, index) {
            return (React.createElement("span", { key: index, className: bm.Children("item") },
                React.createElement("b", null, item.number),
                item.label,
                props.data.length - 1 != index ? ", " : null));
        }))));
}

var moment = createCommonjsModule(function (module, exports) {
(function (global, factory) {
     module.exports = factory() ;
}(commonjsGlobal, (function () {
    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            'object' !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = commonjsRequire;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged and will be removed in an upcoming major release. Please refer to ' +
            'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.27.0';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));
});

function TableLayout(props) {
    var bem = new BEM("TableLayout-layout", {});
    bem.Append(props.className);
    var contentData = function (item, col) {
        switch (col.type) {
            case exports.ETableColumnType.LABEL:
                var _dataItem = item[col.key];
                return React.createElement(LabelComponent, { theme: _dataItem.theme, name: _dataItem.name });
            case exports.ETableColumnType.GROUP_SMALL:
                var dataItem = item[col.key];
                return (React.createElement(GroupSmallComponent, { name: dataItem.name, data: dataItem.data }));
            case exports.ETableColumnType.PROGRESS:
                var dataItemProgress = item[col.key];
                return (React.createElement(ProgressComponent, { color: dataItemProgress.color, value: dataItemProgress.value }));
            case exports.ETableColumnType.STATUS:
                return (React.createElement(DropdownComponent, { onChange: function (e) { return props.onChange && props.onChange(e); }, value: item[col.key], data: [
                        { icon: React.createElement(DotComponent, { color: "success" }), label: "Active", value: true },
                        { icon: React.createElement(DotComponent, { color: "danger" }), label: "Inactive", value: false },
                    ] }));
            case exports.ETableColumnType.ACTION:
                return (React.createElement(DropdownComponent, { onChange: function (e) { return props.onChange && props.onChange(e); }, value: item[col.key], trigger: React.createElement(IconComponent, { icon: "more_vert" }), data: [
                        { icon: React.createElement(IconComponent, { icon: "" }), label: "Edit" },
                        { icon: React.createElement(IconComponent, { icon: "" }), label: "Delete" },
                    ] }));
            case exports.ETableColumnType.COMPONENT:
                return item[col.key];
            case exports.ETableColumnType.STRING:
                return item[col.key];
            case exports.ETableColumnType.NUMBER:
                return item[col.key];
            case exports.ETableColumnType.DATE:
                return moment(item[col.key]).format(col.format || "DD-MM-YYYY HH:mm:ss");
            case exports.ETableColumnType.MESSAGE_AVATAR:
                var data = item[col.key];
                return (React.createElement(MessageAvatarComponent, { name: data.name, title: data.title, subTitle: data.subTitle, src: data.src }));
            default: {
                return null;
            }
        }
    };
    var content = function () {
        return props.rows.map(function (item, index) {
            var itemData = props.data != undefined ? props.data(item) : item;
            return (React.createElement(TableRowComponent, { key: index }, props.columns.map(function (col, colIndex) { return (React.createElement(TableColComponent, { align: col.align, key: colIndex }, contentData(itemData, col))); })));
        });
    };
    return (React.createElement(TableComponent, { className: bem.toString(), style: props.style },
        React.createElement(TableRowComponent, { header: true }, props.columns.map(function (item, index) { return (React.createElement(TableColComponent, { align: item.align, key: index }, item.data)); })),
        content()));
}

function InvoiceComponent(props) {
    var bm = new BEM("Invoice-component", {});
    bm.Append(props.className);
    var getSubtotal = function () {
        return props.rows.reduce(function (previousValue, currentValue) {
            previousValue += currentValue.unit * currentValue.quantity;
            return previousValue;
        }, 0);
    };
    return (React.createElement(CardComponent, { style: props.style, className: bm.toString() },
        React.createElement(CardContentComponent, null,
            React.createElement(GridComponent, { container: true },
                React.createElement(GridComponent, { item: true, xs: 12, sm: 6 },
                    React.createElement("img", { className: bm.Children("logo"), src: props.logo, alt: props.business }),
                    React.createElement(ListComponent, { className: bm.Children("list") },
                        React.createElement("li", null, props.business),
                        React.createElement("li", null, props.address),
                        React.createElement("li", null, props.postalCode))),
                React.createElement(GridComponent, { item: true, xs: 12, sm: 6 },
                    React.createElement(InvoiceDetailsComponent, { invoiceNum: props.invoiceNum, data: props.details }))),
            React.createElement(GridComponent, { container: true },
                React.createElement(GridComponent, { xs: 12, sm: 6, lg: 7, xl: 8, item: true },
                    React.createElement(TypographyComponent, { component: "h5" }, "Invoice to:"),
                    React.createElement(ListComponent, { className: bm.Children("invoice-to") }, props.invoiceTo.map(function (item, index) { return (React.createElement("li", { key: index }, item)); }))),
                React.createElement(GridComponent, { xs: 12, sm: 6, lg: 5, xl: 4, item: true },
                    React.createElement(TypographyComponent, { component: "h5" }, "Payment Details:"),
                    React.createElement(ListInfoComponent, { className: bm.Children("payment-details"), data: props.paymentDetails }))),
            React.createElement(TableLayout, { className: bm.Children("table"), columns: [
                    { key: "key", type: exports.ETableColumnType.STRING, data: "#" },
                    { key: "item", type: exports.ETableColumnType.STRING, data: "ITEM" },
                    { key: "description", type: exports.ETableColumnType.STRING, data: "DESCRIPTION" },
                    { key: "unit", type: exports.ETableColumnType.STRING, data: "UNIT COST", align: "right" },
                    { key: "quantity", type: exports.ETableColumnType.STRING, data: "QUANTITY", align: "right" },
                    { key: "total", type: exports.ETableColumnType.STRING, data: "TOTAL", align: "right" },
                ], rows: props.rows.map(function (item) { return (__assign(__assign({}, item), { total: item.unit * item.quantity })); }), data: function (props1) { return (__assign(__assign({}, props1), { total: props1.total + " \u20AC", unit: props1.unit + " \u20AC" })); } }),
            React.createElement(GridComponent, { container: true, className: bm.Children("grid") },
                React.createElement(GridComponent, { item: true, xs: 12, sm: 7 }),
                React.createElement(GridComponent, { item: true, xs: 12, sm: 5 },
                    React.createElement(TableComponent, null,
                        React.createElement(TableRowComponent, null,
                            React.createElement(TableColComponent, null,
                                React.createElement("b", null, "Subtotal:")),
                            React.createElement(TableColComponent, { align: "right" }, getSubtotal().toFixed(2).toString() + ' €')),
                        React.createElement(TableRowComponent, null,
                            React.createElement(TableColComponent, null,
                                React.createElement("b", null, "IVA: (21%)")),
                            React.createElement(TableColComponent, { align: "right" }, (getSubtotal() * 21 / 100).toFixed(2) + ' €')),
                        React.createElement(TableRowComponent, null,
                            React.createElement(TableColComponent, null,
                                React.createElement("b", null, "Subtotal:")),
                            React.createElement(TableColComponent, { align: "right" }, (getSubtotal() + (getSubtotal() * 21 / 100)).toFixed(2) + ' €'))))),
            React.createElement(GroupTitleComponent, { title: "Other Information", content: React.createElement(TypographyComponent, null, props.otherInformation) }))));
}

___$insertStyle(".ButtonActions-component {\n  display: flex;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n}\n.ButtonActions-component__item {\n  text-align: -webkit-match-parent;\n  position: relative;\n  min-width: 60px;\n}");

function ButtonActionsComponent(props) {
    var bm = new BEM("ButtonActions-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() }, React.Children.map(props.children, function (child, index) {
        if (!child)
            return null;
        return (React.createElement("div", { className: bm.Children("item"), key: index }, child));
    })));
}

___$insertStyle(".NotificationList-component {\n  padding: 0;\n}");

function NotificationListComponent(props) {
    var bm = new BEM("NotificationList-component", {});
    bm.Append(props.className);
    return (React.createElement(ListComponent, { style: props.style, className: bm.toString() }, props.data.map(function (item, index) { return (React.createElement(NotificationComponent, { component: "li", key: index, avatar: item.avatar, name: item.name, description: item.description, date: item.date })); })));
}

___$insertStyle(".Notification-component {\n  margin-top: 0;\n  border-bottom: 1px solid #f5f5f5;\n  display: flex;\n  -ms-flex-align: start;\n  padding: 12px;\n  border-radius: 2px;\n  align-items: center;\n}\n.Notification-component__avatar {\n  margin-right: 10px;\n}\n.Notification-component__author {\n  color: #333;\n  font-weight: 600;\n  display: block;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1;\n}\n.Notification-component__time {\n  color: #888;\n  float: right;\n  font-size: 11px;\n}\n.Notification-component__content {\n  margin-top: 2px;\n  color: #333;\n  font-size: 13px;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.Notification-component:hover {\n  background-color: #fafafa;\n  cursor: pointer;\n}");

function NotificationComponent(props) {
    var bm = new BEM("Notification-component", {});
    bm.Append(props.className);
    var Component = props.component || "div";
    return (
    // @ts-ignore
    React.createElement(Component, { style: props.style, className: bm.toString(), onClick: props.onClick },
        React.createElement(AvatarComponent, { className: bm.Children("avatar"), src: props.avatar }, props.name.slice(0, 2)),
        React.createElement("div", { className: bm.Children("content") },
            React.createElement(TypographyComponent, { className: bm.Children("author") }, props.name),
            React.createElement(TypographyComponent, { className: bm.Children("time") }, props.date),
            React.createElement(TypographyComponent, { className: bm.Children("content") }, props.description))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Label-component {\n  display: inline-block;\n  padding: 0.25em 0.4em;\n  font-size: 75%;\n  font-weight: 700;\n  line-height: 1;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.Label-component--default {\n  background-color: #e0e0e0;\n  color: white;\n}\n.Label-component--success {\n  background-color: #26a69a;\n  color: white;\n}\n.Label-component--primary {\n  background-color: #90caf9;\n  color: white;\n}\n.Label-component--secondary {\n  background-color: #f48fb1;\n  color: white;\n}\n.Label-component--info {\n  background-color: #328cd6;\n  color: white;\n}\n.Label-component--white {\n  background-color: white;\n  color: white;\n}\n.Label-component--orange {\n  background-color: #ff9b44;\n  color: white;\n}\n.Label-component--danger {\n  background-color: #f62d51;\n  color: white;\n}\n.Label-component--disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n  color: white;\n}\n.Label-component--gray {\n  background-color: gray;\n  color: white;\n}\n.Label-component--mixPurple {\n  background-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n  color: white;\n}");

function LabelComponent(props) {
    var _a;
    var bm = new BEM("Label-component", (_a = {},
        _a[props.theme] = !!props.theme,
        _a));
    bm.Append(props.className);
    return (React.createElement("span", { style: props.style, className: bm.toString() }, props.name));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.AuthForm-component {\n  background-color: #fff;\n  border: 1px solid #ededed;\n  border-radius: 4px;\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  margin: 0 auto;\n  overflow: hidden;\n  width: 480px;\n}\n.AuthForm-component__wrapper {\n  padding: 30px;\n}");

function AuthFormComponent(props) {
    var bm = new BEM("AuthForm-component", {});
    bm.Append(props.className);
    var Component = props.component || "div";
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(
        // @ts-ignore
        Component, { onSubmit: props.onSubmit, className: bm.Children("wrapper") }, props.children)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Page-component {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n}\n\n.Page-body-component {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}");

function PageComponent(props) {
    var bm = new BEM("Page-component", {});
    bm.Append(props.className);
    React.useEffect(function () {
        var classname = "Page-body-component";
        if (typeof document != "undefined") {
            document.body.classList.add(classname);
        }
        return function () {
            document.body.classList.remove(classname);
        };
    });
    return (React.createElement("div", { style: props.style, className: bm.toString() }, props.children));
}

___$insertStyle(".AuthLogin-component__title {\n  margin-bottom: 5px;\n  text-align: center;\n}\n.AuthLogin-component__subTitle {\n  color: #4c4c4c;\n  font-size: 18px;\n  margin-bottom: 30px;\n  text-align: center;\n}\n.AuthLogin-component__forgot {\n  color: #8e8e8e;\n}\n.AuthLogin-component__other-screen {\n  margin-left: 10px;\n  color: #667eea;\n}\n.AuthLogin-component__footer {\n  text-align: center;\n  display: flex;\n  justify-content: center;\n}");

function AuthLoginComponent(props) {
    var bem = new BEM("AuthLogin-component", {});
    bem.Append(props.className);
    var ComponentForgotPassword = function (_a) {
        var children = _a.children;
        return props.componentForgotPassword && props.componentForgotPassword(props, children) || React.createElement(React.Fragment, null, children);
    };
    var ComponentLinkOtherScreen = function (_a) {
        var children = _a.children;
        return props.componentLinkOtherScreen && props.componentLinkOtherScreen(props, children) || React.createElement(React.Fragment, null, children);
    };
    return (React.createElement(AuthFormComponent, { component: "form", onSubmit: props.onSubmit },
        React.createElement(TypographyComponent, { className: bem.Children("title"), component: "h3", variant: "h4" }, props.title),
        React.createElement(TypographyComponent, { className: bem.Children("subTitle"), component: "p" }, props.subTitle),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(InputLabelComponent, null, "Email address"),
            React.createElement(TextFieldComponent, { onChange: props.onChange, name: "email", outline: true, id: "email", placeholder: "Email", value: props.emailValue })),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(InputLabelComponent, null, "Password"),
            React.createElement(TextFieldComponent, { onChange: props.onChange, type: "password", name: "password", outline: true, id: "password", placeholder: "Password", value: props.passwordValue })),
        React.createElement(FormGroupComponent, { form: true, style: { textAlign: "end" } },
            React.createElement(ComponentForgotPassword, null,
                React.createElement("span", { className: bem.Children("forgot") }, props.textForgot || "Forgot Password?"))),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(ButtonComponent, { type: "submit", big: true, theme: "mixPurple" }, props.textButton || "Login")),
        React.createElement("div", { className: bem.Children("footer") },
            React.createElement("p", null,
                props.footerAccountText,
                React.createElement(ComponentLinkOtherScreen, null,
                    React.createElement("span", { className: bem.Children("other-screen") }, props.textOtherScreen))))));
}

___$insertStyle(".AuthForgot-component__title {\n  margin-bottom: 5px;\n  text-align: center;\n}\n.AuthForgot-component__subTitle {\n  color: #4c4c4c;\n  font-size: 18px;\n  margin-bottom: 30px;\n  text-align: center;\n}\n.AuthForgot-component__forgot {\n  color: #8e8e8e;\n}\n.AuthForgot-component__other-screen {\n  margin-left: 10px;\n  color: #667eea;\n}\n.AuthForgot-component__footer {\n  text-align: center;\n  display: flex;\n  justify-content: center;\n}");

function AuthForgotComponent(props) {
    var bem = new BEM("AuthForgot-component", {});
    bem.Append(props.className);
    var ComponentLinkOtherScreen = function (_a) {
        var children = _a.children;
        return props.componentLinkOtherScreen && props.componentLinkOtherScreen(props, children) || React.createElement(React.Fragment, null, children);
    };
    return (React.createElement(AuthFormComponent, { component: "form", onSubmit: props.onSubmit },
        React.createElement(TypographyComponent, { className: bem.Children("title"), component: "h3", variant: "h4" }, props.title),
        React.createElement(TypographyComponent, { className: bem.Children("subTitle"), component: "p" }, props.subTitle),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(InputLabelComponent, null, "Email address"),
            React.createElement(TextFieldComponent, { onChange: props.onChange, name: "email", outline: true, id: "email", placeholder: "Email", value: props.emailValue })),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(ButtonComponent, { type: "submit", big: true, theme: "mixPurple" }, props.textButton || "Reset Password")),
        React.createElement("div", { className: bem.Children("footer") },
            React.createElement("p", null,
                props.footerAccountText,
                React.createElement(ComponentLinkOtherScreen, null,
                    React.createElement("span", { className: bem.Children("other-screen") }, props.textOtherScreen))))));
}

___$insertStyle(".AuthRegister-component__title {\n  margin-bottom: 5px;\n  text-align: center;\n}\n.AuthRegister-component__subTitle {\n  color: #4c4c4c;\n  font-size: 18px;\n  margin-bottom: 30px;\n  text-align: center;\n}\n.AuthRegister-component__forgot {\n  color: #8e8e8e;\n}\n.AuthRegister-component__other-screen {\n  margin-left: 10px;\n  color: #667eea;\n}\n.AuthRegister-component__footer {\n  text-align: center;\n  display: flex;\n  justify-content: center;\n}");

function AuthRegisterComponent(props) {
    var bem = new BEM("AuthRegister-component", {});
    bem.Append(props.className);
    var ComponentLinkOtherScreen = function (_a) {
        var children = _a.children;
        return props.componentLinkOtherScreen && props.componentLinkOtherScreen(props, children) || React.createElement(React.Fragment, null, children);
    };
    return (React.createElement(AuthFormComponent, { component: "form", onSubmit: props.onSubmit },
        React.createElement(TypographyComponent, { className: bem.Children("title"), component: "h3", variant: "h4" }, props.title),
        React.createElement(TypographyComponent, { className: bem.Children("subTitle"), component: "p" }, props.subTitle),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(InputLabelComponent, null, "Name"),
            React.createElement(TextFieldComponent, { onChange: props.onChange, name: "name", outline: true, id: "name", placeholder: "Name", value: props.nameValue })),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(InputLabelComponent, null, "Email address"),
            React.createElement(TextFieldComponent, { onChange: props.onChange, name: "email", outline: true, id: "email", placeholder: "Email", value: props.emailValue })),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(InputLabelComponent, null, "Password"),
            React.createElement(TextFieldComponent, { type: "password", onChange: props.onChange, name: "password", outline: true, id: "password", placeholder: "Password", value: props.passwordValue })),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(InputLabelComponent, null, "Repeat Password"),
            React.createElement(TextFieldComponent, { type: "password", onChange: props.onChange, name: "repeat_password", outline: true, id: "repeat_password", placeholder: "Repeat Password", value: props.repeatPasswordValue })),
        React.createElement(FormGroupComponent, { form: true },
            React.createElement(ButtonComponent, { type: "submit", big: true, theme: "mixPurple" }, props.textButton || "Register")),
        React.createElement("div", { className: bem.Children("footer") },
            React.createElement("p", null,
                props.footerAccountText,
                React.createElement(ComponentLinkOtherScreen, null,
                    React.createElement("span", { className: bem.Children("other-screen") }, props.textOtherScreen))))));
}

___$insertStyle(".Form-component {\n  display: flex;\n  flex-direction: column;\n}\n.Form-component--card {\n  background-color: #fff;\n  border: 1px solid #ededed;\n  border-radius: 4px;\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  margin: 0 auto;\n  overflow: hidden;\n  width: 480px;\n  padding: 30px;\n}");

function FormComponent$1(props) {
    var bm = new BEM("Form-component", {
        card: props.card,
    });
    bm.Append(props.className);
    return (React.createElement("form", { id: props.id, className: bm.toString(), onSubmit: props.onSubmit }, props.children));
}

___$insertStyle(".Quick-link-component {\n  position: relative;\n  padding: 15px;\n  min-width: 80px;\n  color: #666;\n  border: 1px solid #ddd;\n  background-color: #f4f4f4;\n  font-size: 14px;\n  text-align: center;\n  text-decoration: none;\n}\n.Quick-link-component__title {\n  margin-top: 5px;\n}\n.Quick-link-component:hover {\n  background: #f4f4f4;\n  color: #444;\n  border-color: #aaa;\n  cursor: pointer;\n}");

function QuickLinkComponent(props) {
    var bm = new BEM("Quick-link-component", {});
    bm.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bm.toString() },
        React.createElement(IconComponent, { icon: props.icon }),
        React.createElement(TypographyComponent, { className: bm.Children("title") }, props.title)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardBox-component {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-sizing: border-box;\n  min-width: 0px;\n  display: inline-flex;\n  font-family: Roboto, sans-serif;\n  line-height: 1.2;\n  font-size: 14px;\n  font-weight: normal;\n  background-color: white;\n  min-height: 440px;\n  color: black;\n}\n@media screen and (min-width: 769px) {\n  .CardBox-component {\n    width: auto;\n  }\n}\n.CardBox-component__left {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 1.2;\n  font-size: 14px;\n  font-weight: normal;\n  background-color: #4268f6;\n  color: white;\n  width: 380px;\n  display: none;\n  -webkit-box-flex: 0;\n  flex-grow: 0;\n  position: relative;\n  flex-direction: column;\n}\n@media screen and (min-width: 769px) {\n  .CardBox-component__left {\n    display: flex;\n  }\n}\n.CardBox-component__left img {\n  width: 200px;\n  display: flex;\n  margin: auto;\n}\n.CardBox-component__left .CardBox-component__title {\n  line-height: 1.5;\n  padding: 48px 48px 20px;\n}\n.CardBox-component__left .CardBox-component__footer {\n  text-align: center;\n  padding: 20px;\n  margin-top: auto;\n}");

function CardBoxComponent(props) {
    var bm = new BEM("CardBox-component", {});
    bm.Append(props.className);
    return (React.createElement("section", { style: props.style, className: bm.toString() },
        React.createElement("section", { className: bm.Children("left") },
            React.createElement("section", { className: bm.Children("title") },
                React.createElement(TypographyComponent, { component: "h2", variant: "h4" }, props.title),
                React.createElement(TypographyComponent, { component: "p" }, props.description)),
            React.createElement("img", { src: props.image, alt: props.title }),
            React.createElement("section", { className: bm.Children("footer") },
                React.createElement(TypographyComponent, null, props.footer))),
        props.children && (React.createElement("section", { className: bm.Children("right") }, props.children))));
}
CardBoxComponent.propTypes = {
    rounded: propTypes.bool,
    title: propTypes.string,
    // children: PropTypes.element,
    description: propTypes.string,
};

___$insertStyle(".SectionBox-component {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n}\n.SectionBox-component__header {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n  overflow: hidden;\n  position: relative;\n}\n.SectionBox-component__header img {\n  width: 250px;\n}\n.SectionBox-component__left {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n  transition: all 500ms ease 0s;\n  opacity: 0.2;\n  position: absolute;\n  top: 50px;\n  left: -10px;\n}\n@media screen and (min-width: 769px) {\n  .SectionBox-component__left {\n    opacity: 1;\n  }\n}\n@media screen and (min-width: 577px) {\n  .SectionBox-component__left {\n    opacity: 0.4;\n  }\n}\n.SectionBox-component__right {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n  transition: all 500ms ease 0s;\n  opacity: 0.2;\n  position: absolute;\n  top: -70px;\n  right: -15px;\n}\n@media screen and (min-width: 769px) {\n  .SectionBox-component__right {\n    opacity: 1;\n  }\n}\n@media screen and (min-width: 577px) {\n  .SectionBox-component__right {\n    opacity: 0.4;\n  }\n}\n.SectionBox-component__center {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n  padding: 74px 8px;\n  background-color: #1c1c38;\n  height: 284px;\n}\n@media screen and (min-width: 769px) {\n  .SectionBox-component__center {\n    padding-left: 250px;\n    padding-right: 250px;\n  }\n}\n@media screen and (min-width: 577px) {\n  .SectionBox-component__center {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n}\n.SectionBox-component__text {\n  font-family: Roboto, sans-serif;\n  margin: 0px;\n  padding: 0px;\n  text-align: center;\n  line-height: 1.2;\n  font-size: 14px;\n  font-weight: 400;\n  color: white;\n}\n.SectionBox-component__content {\n  box-sizing: border-box;\n  min-width: 0px;\n  display: flex;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 24px 0px;\n  padding-left: 8px;\n  padding-right: 8px;\n  width: 100%;\n  flex-flow: row wrap;\n  position: relative;\n}\n@media screen and (min-width: 577px) {\n  .SectionBox-component__content {\n    margin-top: 24px;\n    margin-left: 0px;\n    margin-right: 0px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n}\n@media screen and (min-width: 769px) {\n  .SectionBox-component__content {\n    margin-top: -100px;\n    margin-left: 0px;\n    margin-right: 0px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n}\n@media screen and (min-width: 1024px) {\n  .SectionBox-component__content {\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 0px;\n    padding-right: 0px;\n  }\n}\n@media screen and (min-width: 577px) {\n  .SectionBox-component__content {\n    width: 100%;\n  }\n}\n@media screen and (min-width: 769px) {\n  .SectionBox-component__content {\n    width: 100%;\n  }\n}\n@media screen and (min-width: 1024px) {\n  .SectionBox-component__content {\n    width: 1024px;\n  }\n}\n.SectionBox-component--center .SectionBox-component__center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}");

function SectionBoxComponent(props) {
    var bm = new BEM("SectionBox-component", {
        center: !props.children
    });
    bm.Append(props.className);
    return (React.createElement("section", { style: props.style, className: bm.toString() },
        React.createElement("section", { className: bm.Children("header") },
            React.createElement("section", { className: bm.Children("left") },
                React.createElement("img", { src: props.header.left.image, alt: props.header.left.title, title: props.header.left.title })),
            React.createElement("section", { className: bm.Children("center") },
                React.createElement("div", { className: bm.Children("text") },
                    React.createElement(TypographyComponent, { component: "h2", variant: "h4" }, props.header.center.title),
                    React.createElement(TypographyComponent, { variant: "body2" }, props.header.center.description))),
            React.createElement("section", { className: bm.Children("right") },
                React.createElement("img", { src: props.header.right.image, alt: props.header.right.title, title: props.header.right.title }))),
        props.children && (React.createElement("section", { className: bm.Children("content") }, props.children))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\nbody {\n  font-family: \"CircularStd\", sans-serif;\n  margin: 0;\n  background-color: #f7f7f7;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n.h-bg--default {\n  background-color: #e0e0e0;\n}\n.h-color--default {\n  color: #e0e0e0;\n}\n.h-bg--success {\n  background-color: #26a69a;\n}\n.h-color--success {\n  color: #26a69a;\n}\n.h-bg--primary {\n  background-color: #90caf9;\n}\n.h-color--primary {\n  color: #90caf9;\n}\n.h-bg--secondary {\n  background-color: #f48fb1;\n}\n.h-color--secondary {\n  color: #f48fb1;\n}\n.h-bg--info {\n  background-color: #328cd6;\n}\n.h-color--info {\n  color: #328cd6;\n}\n.h-bg--white {\n  background-color: white;\n}\n.h-color--white {\n  color: white;\n}\n.h-bg--orange {\n  background-color: #ff9b44;\n}\n.h-color--orange {\n  color: #ff9b44;\n}\n.h-bg--danger {\n  background-color: #f62d51;\n}\n.h-color--danger {\n  color: #f62d51;\n}\n.h-bg--disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.h-color--disabled {\n  color: rgba(255, 255, 255, 0.12);\n}\n.h-bg--gray {\n  background-color: gray;\n}\n.h-color--gray {\n  color: gray;\n}\n.h-bg--mixPurple {\n  background-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.h-color--mixPurple {\n  color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.h-icon-grid path {\n  fill: black;\n}\n.h-icon-phone path {\n  fill: black;\n}\n.h-icon-calendar path {\n  fill: black;\n}\n.h-icon-attachment path {\n  fill: black;\n}\n\n.Box-component {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n  padding: 10px;\n  width: 100%;\n}\n.Box-component section {\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  box-sizing: border-box;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n  padding: 32px 8px;\n  background-color: white;\n  display: block;\n  color: #1c1c38;\n  text-decoration: none;\n  border: 1px solid transparent;\n}\n@media screen and (min-width: 577px) {\n  .Box-component section {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n}\n@media screen and (min-width: 577px) {\n  .Box-component--responsive {\n    width: 50%;\n  }\n}\n@media screen and (min-width: 769px) {\n  .Box-component--responsive {\n    width: 50%;\n  }\n}\n@media screen and (min-width: 1024px) {\n  .Box-component--responsive {\n    width: 33.3333%;\n  }\n}\n.Box-component img {\n  width: 100px;\n  display: block;\n  margin: auto auto 20px;\n}\n.Box-component .Typography-component {\n  text-align: center;\n  line-height: 1.3;\n}\n.Box-component--isRow {\n  min-width: 50%;\n}\n.Box-component--isRow > section {\n  display: flex;\n  flex-direction: row;\n}\n.Box-component--isRow > section div {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  text-align: left;\n}\n.Box-component--isFull {\n  width: 100%;\n  min-width: 100%;\n}\n.Box-component--isRow.Box-component--isFull img {\n  margin: 0 40px 0 0;\n}");

function BoxComponent(props) {
    var _a = props.responsive, responsive = _a === void 0 ? true : _a;
    var bm = new BEM("Box-component", {
        isRow: props.isRow,
        isFull: props.isFull,
        responsive: responsive,
    });
    bm.Append(props.className);
    return (React.createElement("article", { style: props.style, className: bm.toString() },
        React.createElement("section", null,
            React.createElement("img", { src: props.image, alt: props.title, title: props.title }),
            React.createElement("div", null,
                React.createElement(TypographyComponent, { component: "h5", variant: "h6" }, props.title),
                React.createElement(TypographyComponent, { variant: "body2" }, props.description)),
            props.children)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\nbody {\n  font-family: \"CircularStd\", sans-serif;\n  margin: 0;\n  background-color: #f7f7f7;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n.h-bg--default {\n  background-color: #e0e0e0;\n}\n.h-color--default {\n  color: #e0e0e0;\n}\n.h-bg--success {\n  background-color: #26a69a;\n}\n.h-color--success {\n  color: #26a69a;\n}\n.h-bg--primary {\n  background-color: #90caf9;\n}\n.h-color--primary {\n  color: #90caf9;\n}\n.h-bg--secondary {\n  background-color: #f48fb1;\n}\n.h-color--secondary {\n  color: #f48fb1;\n}\n.h-bg--info {\n  background-color: #328cd6;\n}\n.h-color--info {\n  color: #328cd6;\n}\n.h-bg--white {\n  background-color: white;\n}\n.h-color--white {\n  color: white;\n}\n.h-bg--orange {\n  background-color: #ff9b44;\n}\n.h-color--orange {\n  color: #ff9b44;\n}\n.h-bg--danger {\n  background-color: #f62d51;\n}\n.h-color--danger {\n  color: #f62d51;\n}\n.h-bg--disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.h-color--disabled {\n  color: rgba(255, 255, 255, 0.12);\n}\n.h-bg--gray {\n  background-color: gray;\n}\n.h-color--gray {\n  color: gray;\n}\n.h-bg--mixPurple {\n  background-color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.h-color--mixPurple {\n  color: linear-gradient(to right, #667eea 0%, #764ba2 100%);\n}\n.h-icon-grid path {\n  fill: black;\n}\n.h-icon-phone path {\n  fill: black;\n}\n.h-icon-calendar path {\n  fill: black;\n}\n.h-icon-attachment path {\n  fill: black;\n}\n\n.CollapseItem-component {\n  box-sizing: border-box;\n  min-width: 0px;\n  font-family: Roboto, sans-serif;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: normal;\n}\n.CollapseItem-component__trigger {\n  font-family: Roboto, sans-serif;\n  margin: 0px;\n  line-height: 24px;\n  font-size: 14px;\n  font-weight: 400;\n  padding: 11px 20px;\n  color: #1c1c38;\n  border-radius: 9999px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n.CollapseItem-component__trigger .Icon-component {\n  height: 18px;\n}\n.CollapseItem-component__trigger .Icon-component:last-child {\n  margin-left: auto;\n}\n.CollapseItem-component__trigger span {\n  margin-left: 10px;\n  margin-right: 10px;\n}\n.CollapseItem-component__content {\n  height: 0;\n  overflow: hidden;\n  -webkit-transition: all 0.3s ease-in-out;\n  -moz-transition: all 0.3s ease-in-out;\n  -ms-transition: all 0.3s ease-in-out;\n  -o-transition: all 0.3s ease-in-out;\n  transition: all 0.3s ease-in-out;\n}\n.CollapseItem-component--open .CollapseItem-component__trigger {\n  background-color: #f6f7fb;\n}\n.CollapseItem-component--open .CollapseItem-component__trigger .Icon-component:last-child {\n  transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n  -webkit-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  -o-transform: rotate(180deg);\n}\n.CollapseItem-component--open .CollapseItem-component__content {\n  height: auto;\n}");

function CollapseItemComponent(props) {
    var _a = React.useState(false), open = _a[0], setOpen = _a[1];
    var bm = new BEM("CollapseItem-component", {
        open: open,
    });
    bm.Append(props.className);
    var onClick = function () {
        setOpen(!open);
    };
    return (React.createElement("section", { style: props.style, className: bm.toString() },
        React.createElement("section", { className: bm.Children("trigger"), onClick: onClick },
            React.createElement(IconComponent, { icon: props.icon }),
            React.createElement("span", null, props.title),
            React.createElement(IconComponent, { icon: "arrow" })),
        React.createElement("section", { className: bm.Children("content") }, props.children)));
}

___$insertStyle(".ComplexGrid-layout {\n  outline: 0;\n}");

function ComplexGridLayout(props) {
    var classes = {
        root: {
            flexGrow: 1,
        },
        paper: {
            padding: 15,
            margin: 'auto',
            maxWidth: 500,
        },
        image: {
            width: 128,
            height: 128,
        },
        img: {
            margin: 'auto',
            display: 'block',
            maxWidth: '100%',
            maxHeight: '100%',
        },
    };
    return (React.createElement("div", { style: classes.root },
        React.createElement(PaperComponent, { style: classes.paper },
            React.createElement(GridComponent, { container: true, spacing: 2 },
                React.createElement(GridComponent, { item: true },
                    React.createElement(ButtonBaseComponent, { style: classes.image },
                        React.createElement("img", { style: classes.img, alt: "complex", src: "https://material-ui.com/static/images/grid/complex.jpg" }))),
                React.createElement(GridComponent, { item: true, xs: 12, sm: true, container: true },
                    React.createElement(GridComponent, { item: true, xs: true, container: true, direction: "column", spacing: 2 },
                        React.createElement(GridComponent, { item: true, xs: true },
                            React.createElement(TypographyComponent, { gutterBottom: true, variant: "subtitle1" }, props.title),
                            React.createElement(TypographyComponent, { variant: "body2", gutterBottom: true }, props.subtitle),
                            React.createElement(TypographyComponent, { variant: "body2", color: "text-secondary" }, props.secondary)),
                        React.createElement(GridComponent, { item: true },
                            React.createElement(TypographyComponent, { onClick: props.onClickButton, variant: "body2", style: { cursor: 'pointer' } }, props.buttonText))),
                    React.createElement(GridComponent, { item: true },
                        React.createElement(TypographyComponent, { variant: "subtitle1" }, "$19.00")))))));
}

___$insertStyle(".GridMessage-layout {\n  outline: 0;\n}");

function GridMessageLayout(props) {
    var classes = {
        root: {
            flexGrow: 1,
        },
        paper: {
            padding: 15,
            margin: 'auto',
            maxWidth: 500,
        },
        image: {
            width: 128,
            height: 128,
        },
        img: {
            margin: 'auto',
            display: 'block',
            maxWidth: '100%',
            maxHeight: '100%',
        },
    };
    return (React.createElement("div", { style: classes.root },
        React.createElement(PaperComponent, { elevation: 1, style: classes.paper },
            React.createElement(GridComponent, { container: true, wrap: "nowrap", spacing: 2 },
                React.createElement(GridComponent, { item: true },
                    React.createElement(AvatarComponent, null, props.avatarText)),
                React.createElement(GridComponent, { item: true, xs: true, zeroMinWidth: true },
                    React.createElement(TypographyComponent, { noWrap: false }, props.message))))));
}

___$insertStyle(".DashStatsList-layout {\n  outline: none;\n}");

function DashStatsListLayout(props) {
    return (React.createElement(ListComponent, { horizontal: true }, props.data.map(function (item, index) { return (React.createElement(DashStatsComponent, __assign({}, item, { key: index, title: item.title, subTitle: item.subTitle }))); })));
}

___$insertStyle(".DashtInfo-layout__icon {\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  font-size: 26px;\n  padding-right: 15px;\n}\n.DashtInfo-layout__content {\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n}");

function DashtInfoLayout(props) {
    var bem = new BEM("DashtInfo-layout", {});
    bem.Append(props.className);
    return (React.createElement(DashCardComponent, { className: bem.toString() },
        React.createElement(IconComponent, { className: bem.Children("icon"), icon: props.icon }),
        // @ts-ignore
        (props.content && React.cloneElement(props.content(props), { className: bem.Children("content") })) || (React.createElement(TypographyComponent, { component: "p", variant: "body1", className: bem.Children("content") }, props.title)),
        props.children));
}

___$insertStyle(".AvatarList-layout {\n  align-items: center;\n  display: flex;\n  padding: 0 15px;\n  width: auto;\n}\n.AvatarList-layout__avatar {\n  margin-left: -20px;\n  height: 35px;\n  width: 35px;\n  border: 3px solid #e7e7e7;\n}\n.AvatarList-layout__avatar:first-of-type {\n  margin-left: 0 !important;\n}");

function AvatarListLayout(props) {
    var bem = new BEM("AvatarList-layout", {});
    bem.Append(props.className);
    return (React.createElement(ListComponent, { className: bem.toString() }, props.data.map(function (item, index) { return (React.createElement(AvatarComponent, __assign({ className: bem.Children("avatar") }, item, { key: index }), item.children)); })));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardWidget-layout {\n  background-color: white;\n}\n.CardWidget-layout__icon {\n  background-color: rgba(255, 155, 68, 0.2);\n  border-radius: 100%;\n  color: #ff9b44;\n  display: inline-block;\n  float: left;\n  font-size: 30px;\n  height: 60px;\n  line-height: 60px;\n  margin-right: 10px;\n  text-align: center;\n  width: 60px;\n}\n.CardWidget-layout__info {\n  text-align: right;\n  color: #000;\n}");

function CardWidgetLayout(props) {
    var bem = new BEM("CardWidget-layout", {});
    bem.Append(props.className);
    return (React.createElement(CardComponent, { className: bem.toString(), style: props.style },
        React.createElement(CardContentComponent, null,
            React.createElement("span", { className: bem.Children("icon") },
                React.createElement(IconComponent, { icon: props.icon })),
            React.createElement("div", { className: bem.Children("info") },
                React.createElement(TypographyComponent, { component: "h3", variant: "h4" }, props.title),
                React.createElement(TypographyComponent, { component: "span", variant: "body1" }, props.subTitle)))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardWidgetProgress-layout {\n  background-color: white;\n  width: 100%;\n}\n.CardWidgetProgress-layout__top {\n  display: flex;\n  margin-bottom: 16px;\n  color: black;\n  justify-content: space-between;\n}\n.CardWidgetProgress-layout__value {\n  color: black;\n  margin-bottom: 16px;\n}\n.CardWidgetProgress-layout__last {\n  display: flex;\n  align-items: center;\n  color: black;\n}\n.CardWidgetProgress-layout__last > *:first-child {\n  margin-right: 10px;\n}\n.CardWidgetProgress-layout:not(:last-child) {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n@media (min-width: 576px) {\n  .CardWidgetProgress-layout + .CardWidgetProgress-layout {\n    margin-left: 0;\n    border-left: 0;\n  }\n}\n.CardWidgetProgress-layout + .CardWidgetProgress-layout:not(:last-child) {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.CardWidgetProgress-layout + .CardWidgetProgress-layout:not(:first-child) {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}");

function CardWidgetProgressLayout(props) {
    var bem = new BEM("CardWidgetProgress-layout", {});
    bem.Append(props.className);
    var calculateNumber = function () { return (((props.value - props.lastValue) / props.lastValue) * 100).toFixed(2); };
    var value = props.number != undefined ? props.number : calculateNumber();
    return (React.createElement(CardComponent, { className: bem.toString(), style: props.style },
        React.createElement(CardContentComponent, null,
            React.createElement("div", { className: bem.Children("top") },
                React.createElement(TypographyComponent, { variant: "body1", component: "span" }, (props.dataTitle && props.dataTitle(props)) || props.title),
                React.createElement(TextNumberComponent, { number: Number(value), data: function (props) { return props.number + "%"; } })),
            React.createElement(TypographyComponent, { className: bem.Children("value"), component: "h3", variant: "h4" }, props.value.toString()),
            React.createElement(ProgressComponent, { color: props.progressColor, value: props.progress }),
            React.createElement("p", { className: bem.Children("last") },
                React.createElement(TypographyComponent, { variant: "body2", component: "span" }, (props.dataSubTitle && props.dataSubTitle(props)) || props.subTitle),
                React.createElement(TypographyComponent, { component: "span", variant: "body2", color: "gray" }, props.lastValue.toString())))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ItemDot-layout__item {\n  color: black;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.ItemDot-layout__item .Dot-component {\n  margin-right: 8px;\n}\n.ItemDot-layout__item .Typography-component--body1 {\n  flex: 1;\n}");

function ItemDotLayout(props) {
    var bem = new BEM("ItemDot-layout", {});
    bem.Append(props.className);
    return (React.createElement(ListComponent, null, props.data.map(function (item, index) { return (React.createElement("p", { key: index, className: bem.Children("item", item.className), style: item.style },
        React.createElement(DotComponent, { color: item.color }),
        React.createElement(TypographyComponent, { variant: "body1", component: "span" }, item.title),
        React.createElement(TypographyComponent, { variant: "body2", component: "span" }, item.subTitle))); })));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CardStadistic-layout .Progress-component {\n  margin-top: 20px;\n}");

function CardStadisticLayout(props) {
    var _a = props.stadistics, stadistics = _a === void 0 ? [] : _a;
    var bem = new BEM("CardStadistic-layout", {});
    bem.Append(props.className);
    return (React.createElement(CardLayout, { title: props.title, className: bem.toString(), style: props.style },
        React.createElement(GridComponent, { container: true, spacing: 2 }, stadistics.map(function (item, index) { return (React.createElement(GridComponent, { key: index, item: true, xs: 12, sm: 6 },
            React.createElement(StatBoxComponent, __assign({}, item, { title: item.title, value: item.value })))); })),
        React.createElement(ProgressComponent, { data: props.progress }),
        React.createElement(ItemDotLayout, { data: props.data })));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}");

function CardLayout(props) {
    var bem = new BEM("CardLayout-layout", {});
    bem.Append(props.className);
    return (React.createElement(CardComponent, { style: props.style, className: bem.toString() },
        React.createElement(CardContentComponent, null,
            React.createElement(CardTitleComponent, { title: props.title }),
            props.children)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.GroupBox-layout {\n  left: 0;\n  margin-left: 230px;\n  position: relative;\n  transition: all 0.2s ease-in-out;\n}\n.GroupBox-layout__main {\n  bottom: 0;\n  left: 0;\n  overflow: auto;\n  padding-bottom: inherit;\n  padding-top: inherit;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n.GroupBox-layout__wrapper {\n  display: table;\n  height: 100%;\n  table-layout: fixed;\n  width: 100%;\n}\n.GroupBox-layout__view {\n  display: table-cell;\n  height: 100%;\n  float: none;\n  padding: 0;\n  position: static;\n  vertical-align: top;\n  width: 75%;\n}\n.GroupBox-layout__sidebar {\n  display: table-cell;\n  height: 100%;\n  float: none;\n  padding: 0;\n  position: static;\n  vertical-align: top;\n  background-color: #fff;\n  border-left: 1px solid #eaeaea;\n  width: 300px;\n}");

function GroupBoxLayout(props) {
    var bem = new BEM("GroupBox-layout", {});
    var _a = React.useState(window.innerHeight), height = _a[0], setHeight = _a[1];
    var ref = React.useRef(null);
    bem.Append(props.className);
    React.useEffect(function () {
        var handleResize = function () {
            setHeight(window.innerHeight);
        };
        window.addEventListener("resize", handleResize);
        return function () {
            window.removeEventListener('resize', handleResize);
        };
    });
    return (React.createElement("div", { ref: ref, className: bem.toString(), style: __assign(__assign({}, props.style), { minHeight: height }) },
        React.createElement("div", { className: bem.Children("main") },
            React.createElement("div", { className: bem.Children("wrapper") },
                React.createElement("div", { className: bem.Children("view") }, props.view),
                React.createElement("div", { className: bem.Children("sidebar") }, props.sidebar)))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.GroupWindow-layout {\n  display: table;\n  height: 100%;\n  table-layout: fixed;\n  width: 100%;\n  background-color: #f7f7f7;\n  display: flex;\n  flex-direction: column;\n}\n.GroupWindow-layout__header {\n  background-color: #fff;\n  border-bottom: 1px solid #eaeaea;\n  padding: 10px 15px;\n}\n.GroupWindow-layout__content {\n  display: table-row;\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex: 1;\n}\n.GroupWindow-layout__footer {\n  background-color: #fff;\n  border-top: 1px solid #eaeaea;\n  padding: 15px;\n}");

function GroupWindowLayout(props) {
    var bem = new BEM("GroupWindow-layout", {});
    return (React.createElement("div", { className: bem.toString(), style: props.style },
        props.header && (React.createElement("div", { className: bem.Children("header") }, props.header)),
        React.createElement("div", { className: bem.Children("content") }, props.content),
        props.footer && (React.createElement("div", { className: bem.Children("footer") }, props.footer))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}");

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}");

function ChatSidebarLayout(props) {
    var bem = new BEM("ChatSidebar-layout", {});
    bem.Append(props.className);
    return (React.createElement("aside", { className: bem.toString(), style: props.style },
        React.createElement(TabComponent, { active: 1, tabs: ["Calls", "Profile"] },
            React.createElement(CallSidebarLayout, { data: [
                    { src: "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", name: "John Doe", icon: "phone", message: "You missed the call", date: "8:35 am" },
                    { src: "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", name: "John Doe", icon: "phone", message: "You missed the call", date: "8:35 am" },
                    { src: "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", name: "John Doe", icon: "phone", message: "You missed the call", date: "8:35 am" },
                    { line: true, date: "January 29th, 2019" },
                    { src: "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", name: "John Doe", icon: "phone", message: "You missed the call", date: "8:35 am" },
                    { src: "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", name: "John Doe", icon: "phone", message: "You missed the call", date: "8:35 am" },
                ] }),
            React.createElement(ProfileSidebarLayout, { title: "John Doe", subTitle: "Web Design", avatar: "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", data: [
                    { title: "Username:", value: "johndoe" },
                    { title: "DOB:", value: "24 July" },
                    { title: "Email:", value: "johndoe@example.com" },
                    { title: "Phone:", value: "987232989" },
                ] }))));
}

function ChatLayout(props) {
    var bem = new BEM("Chat-layout", {});
    bem.Append(props.className);
    return (React.createElement(GroupBoxLayout, { view: (React.createElement(GroupWindowLayout, { header: React.createElement(ChatHeaderLayout, { title: "MIKE LITORUS", name: "MIKE LITORUS", subTitle: "Last seen today at 7:50 AM", src: "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg" }), content: React.createElement("div", null), footer: React.createElement(ChatFooterLayout, null) })), sidebar: (React.createElement(ChatSidebarLayout, null)) }));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ChatHeader-layout {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  border: 0 none;\n  margin: 0;\n  min-height: auto;\n  padding: 0;\n}\n.ChatHeader-layout__search {\n  background-color: #f7f7f7;\n  border: 1px solid #e3e3e3;\n  border-radius: 50px;\n}\n.ChatHeader-layout__search input {\n  color: black;\n}\n.ChatHeader-layout__list {\n  width: auto;\n  flex: 0;\n  padding: 0;\n}\n.ChatHeader-layout__list .ButtonIcon-component {\n  width: 48px;\n  height: 48px;\n}\n.ChatHeader-layout__list .ButtonIcon-component:hover {\n  background: rgba(0, 0, 0, 0.08);\n}\n.ChatHeader-layout__avatar {\n  flex: 1;\n}");

function ChatHeaderLayout(props) {
    var bem = new BEM("ChatHeader-layout", {});
    bem.Append(props.className);
    return (React.createElement("header", { className: bem.toString(), style: props.style },
        React.createElement(MessageAvatarComponent, { className: bem.Children("avatar"), src: props.src, name: props.name, title: props.title, subTitle: props.subTitle }),
        React.createElement(InputSearchComponent, { className: bem.Children("search"), onChange: props.onSearch, value: props.searchValue, placeholder: props.searchPlaceholder }),
        React.createElement(ListComponent, { horizontal: true, className: bem.Children("list") },
            React.createElement(ButtonIconComponent, { onClick: props.onClickPhone },
                React.createElement(IconComponent, { icon: "phone" })),
            React.createElement(ButtonIconComponent, { onClick: props.onClickCamera },
                React.createElement(IconComponent, { icon: "camera" })),
            React.createElement(ButtonIconComponent, { onClick: props.onClickSetting },
                React.createElement(IconComponent, { icon: "setting" })))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ChatFooter-layout {\n  height: 44px;\n  position: relative;\n  width: 100%;\n}\n.ChatFooter-layout__inner {\n  display: flex;\n  height: 100%;\n  padding: 0 8px;\n  width: 100%;\n  align-items: center;\n  margin: auto;\n}\n.ChatFooter-layout__inner .ButtonIcon-component {\n  margin-right: 10px;\n}\n.ChatFooter-layout .ButtonIcon-component {\n  width: 48px;\n  height: 48px;\n}\n.ChatFooter-layout .ButtonIcon-component:hover {\n  background: rgba(0, 0, 0, 0.08);\n}\n.ChatFooter-layout__group {\n  display: table-cell;\n  width: 100%;\n}\n.ChatFooter-layout__input-group {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  width: 100%;\n}\n.ChatFooter-layout__input-group textarea {\n  background-color: #fff;\n  border: 1px solid #eaeaea;\n  box-shadow: none;\n  color: #555;\n  display: block;\n  font-size: 14px;\n  height: 44px;\n  margin: 0;\n  padding: 6px 12px;\n  resize: none;\n  border-radius: 0.25rem;\n  position: relative;\n  -ms-flex: 1 1 auto;\n  flex: 1 1 auto;\n  box-sizing: border-box;\n  width: 1%;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.ChatFooter-layout__input-group textarea:not(:last-child) {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.ChatFooter-layout__input-group .button-component {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  height: 44px;\n  width: 50px;\n  background: #ff9b44;\n  background: -moz-linear-gradient(left, #ff9b44 0%, #fc6075 100%);\n  background: -webkit-linear-gradient(left, #ff9b44 0%, #fc6075 100%);\n  background: -ms-linear-gradient(left, #ff9b44 0%, #fc6075 100%);\n  background: linear-gradient(to right, #ff9b44 0%, #fc6075 100%);\n  color: #fff;\n}\n.ChatFooter-layout__input-group .button-component__children {\n  display: flex;\n  text-align: center;\n  margin: auto;\n  justify-content: center;\n}");

function ChatFooterLayout(props) {
    var bem = new BEM("ChatFooter-layout", {});
    bem.Append(props.className);
    return (React.createElement("footer", { className: bem.toString(), style: props.style },
        React.createElement("div", { className: bem.Children("inner") },
            React.createElement(ButtonIconComponent, { onClick: props.onClickAttach },
                React.createElement(IconComponent, { icon: "attachment" })),
            React.createElement("div", { className: bem.Children("group") },
                React.createElement("div", { className: bem.Children("input-group") },
                    React.createElement("textarea", { placeholder: props.placeholder, name: "message", cols: 30, rows: 2, onChange: props.onChange }),
                    React.createElement(ButtonComponent, { onClick: props.onClickSend },
                        React.createElement(IconComponent, { icon: "send" })))))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ProfileSidebar-layout__info {\n  padding: 15px;\n}");

function ProfileSidebarLayout(props) {
    var bem = new BEM("ProfileSidebar-layout", {});
    bem.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bem.toString() },
        React.createElement(ProfileImageComponent, { avatar: props.avatar, title: props.title, subTitle: props.subTitle }),
        React.createElement("div", { className: bem.Children("info") },
            React.createElement(ListInfoComponent, { data: props.data }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.CallSidebar-layout {\n  padding: 15px 15px 30px;\n}");

function CallSidebarLayout(props) {
    var bem = new BEM("CallSidebar-layout", {});
    bem.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bem.toString() }, props.data.map(function (item, index) {
        if (item.line) {
            return (React.createElement(SeparatorComponent, { key: index, data: item.date }));
        }
        return (React.createElement(ChatCallComponent, { key: index, avatar: item.src, icon: item.icon, name: item.name, message: item.message, date: item.date }));
    })));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.ContactBox-layout {\n  display: inline-table;\n  height: 100%;\n  padding: 30px 15px;\n  position: relative;\n  width: 100%;\n}\n.ContactBox-layout__listMenu {\n  margin-top: 20px;\n}\n.ContactBox-layout__contactList {\n  position: relative;\n  padding: 0 70px 0 20px;\n}");

function ContactBoxLayout(props) {
    var bem = new BEM("ContactBox-layout", {});
    bem.Append(props.className);
    var use = useContactsAppContext();
    console.log(use);
    return (React.createElement("div", { style: props.style, className: bem.toString() },
        React.createElement(GridComponent, { container: true },
            React.createElement(GridComponent, { item: true, xs: 12, lg: 3, sm: 4 },
                React.createElement(ButtonComponent, { block: true, theme: "orange" },
                    React.createElement(IconComponent, { icon: "plus" }),
                    "Add Contact"),
                React.createElement(ListMenuComponent, { active: 0, className: bem.Children("listMenu"), data: [
                        { label: "All" },
                        { label: "Company" },
                        { label: "Client" },
                        { label: "Staff" },
                    ] })),
            React.createElement(GridComponent, { item: true, xs: 12, sm: 8, lg: 9 },
                React.createElement("div", { className: bem.Children("contactList") },
                    React.createElement(ContactListLayout, null)))),
        React.createElement(AlphapetsListComponent, null)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}");

function ContactListLayout(props) {
    var bem = new BEM("ContactList-layout", {});
    bem.Append(props.className);
    var use = useContactsAppContext();
    return (React.createElement(ListComponent, { style: props.style, className: bem.toString(), id: "contact-list-layout" }, use.contacts.map(function (item) {
        return (React.createElement(ContactContComponent, { key: item.id, card: true, component: "li", id: item.id, name: item.name, subTitle: item.subTitle, avatar: item.avatar }));
    })));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.TableAttendance-layout__check {\n  color: #26a69a;\n}\n.TableAttendance-layout__uncheck {\n  color: #f62d51;\n}");

/**
 * @ignore - internal component.
 */
var AttendanceAppContext = React.createContext({
    date: moment(),
    rows: [],
});
AttendanceAppContext.displayName = 'AttendanceAppContext';

function useAttendanceAppContext() {
    return React.useContext(AttendanceAppContext);
}

function TableAttendanceLayout(props) {
    var bem = new BEM("TableAttendance-layout", {});
    bem.Append(props.className);
    var use = useAttendanceAppContext();
    var rows = props.rows ? props.rows : use.rows || [];
    var date = props.date ? props.date : use.date || moment();
    return (React.createElement("div", { style: props.style, className: bem.toString() },
        React.createElement(TableComponent, null,
            React.createElement(TableRowComponent, { header: true },
                React.createElement(TableColComponent, null, "Employee"),
                __spreadArrays(new Array(date.daysInMonth())).map(function (item, index) { return (React.createElement(TableColComponent, { key: index + 1 }, (index + 1).toString())); })),
            rows.map(function (row, index) { return (React.createElement(TableRowComponent, { key: index },
                React.createElement(TableColComponent, null,
                    React.createElement(MessageAvatarComponent, { mini: true, src: row.avatar, name: row.name, title: row.name, subTitle: "" })),
                Object.entries(row.days).map(function (item) { return (React.createElement(TableColComponent, { key: item[0] }, item[1] ? React.createElement(IconComponent, { className: bem.Children('check'), icon: "check" }) : React.createElement(IconComponent, { className: bem.Children("uncheck"), icon: "uncheck" }))); }))); }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.MainMaster-layout {\n  position: relative;\n}\n.MainMaster-layout__main {\n  bottom: 0;\n  left: 0;\n  overflow: auto;\n  padding-bottom: inherit;\n  padding-top: inherit;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n.MainMaster-layout__wrapper {\n  display: table;\n  height: 100%;\n  table-layout: fixed;\n  width: 100%;\n}\n.MainMaster-layout__left, .MainMaster-layout__right {\n  display: table-cell;\n  height: 100%;\n  float: none;\n  padding: 0;\n  position: static;\n  vertical-align: top;\n  width: 75%;\n}\n.MainMaster-layout__left {\n  width: 58.3333%;\n}\n.MainMaster-layout__right {\n  width: 41.6667%;\n  border-left: 1px solid #eaeaea;\n}\n.MainMaster-layout__left-content {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  overflow: auto;\n}");

function useResizeHeight() {
    var _a = React.useState(typeof window != "undefined" ? window.innerHeight : 0), height = _a[0], setHeight = _a[1];
    var ref = React.useRef(null);
    React.useEffect(function () {
        var handleResize = function () {
            setHeight(window.innerHeight);
        };
        window.addEventListener("resize", handleResize);
        return function () {
            window.removeEventListener('resize', handleResize);
        };
    });
    return { ref: ref, height: height, setHeight: setHeight };
}

function MainMasterLayout(props) {
    var bem = new BEM("MainMaster-layout", {});
    bem.Append(props.className);
    var _a = useResizeHeight(), ref = _a.ref, height = _a.height;
    return (React.createElement("div", { ref: ref, style: __assign(__assign({}, props.style), { minHeight: height }), className: bem.toString() },
        React.createElement("div", { className: bem.Children("main") },
            React.createElement(GridComponent, { container: true, className: bem.Children("wrapper") },
                React.createElement(GridComponent, { item: true, xs: 12, lg: 7, className: bem.Children("left") },
                    React.createElement(GroupWindowLayout, __assign({}, props.left, { header: props.left.header, content: React.createElement("div", { className: bem.Children("left-content") }, props.left.content), footer: props.left.footer }))),
                React.createElement(GridComponent, { item: true, xs: 12, lg: 5, className: bem.Children("right") },
                    React.createElement(GroupWindowLayout, __assign({}, props.left, { header: props.right.header, content: props.right.content, footer: props.right.footer })))))));
}

___$insertStyle(".TaskList-layout {\n  padding: 20px;\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: border-box;\n}\n.TaskList-layout__list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  border-bottom: 1px solid #eaeaea;\n}");

function TaskListLayout(props) {
    var bem = new BEM("TaskList-layout", {});
    bem.Append(props.className);
    var use = useTaskAppContext();
    var tasks = props.tasks;
    var selected = null;
    if (use != undefined) {
        tasks = use.tasks;
        selected = use.taskSelected;
    }
    return (React.createElement("div", { style: props.style, className: bem.toString() },
        React.createElement(ListComponent, { className: bem.Children("list"), component: "ul" }, tasks.map(function (item, index) {
            if (use.filter != 3) {
                if (use.filter == 1 && item.check)
                    return null;
                if (use.filter == 2 && !item.check)
                    return null;
            }
            var selectedItem = selected == item.id;
            return (React.createElement(TaskContainerComponent, __assign({}, item, { selected: selectedItem, component: "li", key: index, id: item.id, check: item.check })));
        }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.DetailCommentTask-layout {\n  background-color: white;\n  width: 100%;\n  height: 100%;\n}\n.DetailCommentTask-layout__chats {\n  padding: 15px 15px 30px;\n}");

function DetailCommentTaskLayout(props) {
    var bem = new BEM("DetailCommentTask-layout", {});
    bem.Append(props.className);
    var use = useTaskAppContext();
    var selected;
    selected = use.getSelected();
    var _a = React.useState(selected.description), description = _a[0], setDescription = _a[1];
    var onChange = function (e) {
        setDescription(e.target.value);
    };
    React.useEffect(function () {
        setDescription(selected.description);
    }, [selected.description]);
    console.log(selected);
    return (React.createElement(ScrollbarComponent, { style: props.style, className: bem.toString() },
        React.createElement("div", { className: bem.Children("chats") },
            React.createElement(TypographyComponent, { component: "h4" }, selected.title),
            React.createElement(TaskHeaderLayout, { onClick: function (item) {
                }, onDelete: function (item) {
                }, tasks: [
                    { title: "Assigned To", subTitle: "John Doe", icon: React.createElement(AvatarComponent, { mini: true, src: "" }, "AV") },
                    { title: "Due Date", subTitle: moment(selected.date).format("ddd DD, YYYY"), icon: React.createElement(ButtonIconComponent, { action: true },
                            React.createElement(IconComponent, { icon: "calendar" })) },
                ] }),
            React.createElement(SeparatorComponent, { data: "Description" }),
            React.createElement(GroupIconComponent, { icon: React.createElement(IconComponent, { icon: "subject" }), content: React.createElement(TextFieldComponent, { onChange: onChange, value: description, placeholder: "Description", id: "description", onBlur: function (e) {
                        use.onChangeDescription(use.taskSelected, e.target.value);
                    }, multiline: true }) }),
            React.createElement(SeparatorComponent, { data: "Records" }),
            selected.info.map(function (item, index) { return (React.createElement(TaskInfoLineComponent, __assign({}, item, { key: index, subject: item.subject, user: item.user, date: item.date }))); }),
            React.createElement(SeparatorComponent, { data: "Comments" }),
            React.createElement(TaskCommentsLayout, { data: selected.comments }))));
}

___$insertStyle(".TaskHeader-layout {\n  font-size: 14px;\n  font-weight: 500;\n  padding: 15px 15px 5px;\n  display: flex;\n}");

function TaskHeaderLayout(props) {
    var bem = new BEM("TaskHeader-layout", {});
    bem.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bem.toString() }, props.tasks.map(function (item, index) { return (React.createElement(TaskHeaderComponent, __assign({}, item, { key: index, icon: item.icon, title: item.title, subTitle: item.subTitle, onClick: function () { return props.onClick(item); }, onDelete: function () { return props.onDelete(item); } }))); })));
}

___$insertStyle(".TaskComments-layout {\n  outline: none;\n}");

function TaskCommentsLayout(props) {
    var bem = new BEM("TaskComments-layout", {});
    bem.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bem.toString() }, props.data.map(function (item) { return (React.createElement(ChatBubbleComponent, __assign({}, item, { key: item.id, id: item.id, date: item.date, description: item.description, name: item.name, avatar: item.avatar, files: item.files, images: item.images }))); })));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Invoice-layout__titleRow {\n  margin-bottom: 20px;\n}");

function InvoiceLayout(props) {
    var bem = new BEM("Invoice-layout", {});
    bem.Append(props.className);
    return (React.createElement("div", { style: props.style, className: bem.toString() },
        React.createElement(TitleRowComponent, { className: bem.Children("titleRow"), breadcrumb: [
                { label: "Dashboard", route: "/" },
                { label: "Invoice" },
            ], title: "Invoice", extra: (React.createElement(React.Fragment, null,
                React.createElement(ButtonGroupComponent, { onClick: props.onClickButton },
                    React.createElement(ButtonComponent, null, "CSV"),
                    React.createElement(ButtonComponent, null, "PDF"),
                    React.createElement(ButtonComponent, null, "PRINT")))) }),
        React.createElement(InvoiceComponent, { invoiceNum: props.invoice.invoiceNum, details: props.invoice.details, address: props.invoice.address, business: props.invoice.business, logo: props.invoice.logo, postalCode: props.invoice.postalCode, invoiceTo: props.invoice.invoiceTo, paymentDetails: props.invoice.paymentDetails, rows: props.invoice.rows, otherInformation: props.invoice.otherInformation })));
}

___$insertStyle(".AppBar-layout {\n  background: #ff9b44;\n  background: -moz-linear-gradient(left, #ff9b44 0%, #fc6075 100%);\n  background: -webkit-linear-gradient(left, #ff9b44 0%, #fc6075 100%);\n  background: -ms-linear-gradient(left, #ff9b44 0%, #fc6075 100%);\n  background: linear-gradient(to right, #ff9b44 0%, #fc6075 100%);\n  border-bottom: 1px solid transparent;\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  height: 60px;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 1002;\n}\n.AppBar-layout__left {\n  float: left;\n  height: 60px;\n  padding: 0 20px;\n  position: relative;\n  text-align: center;\n  width: 230px;\n  z-index: 1;\n  transition: all 0.2s ease-in-out;\n}\n.AppBar-layout__logo {\n  display: inline-block;\n  line-height: 60px;\n}\n.AppBar-layout__logo img {\n  vertical-align: middle;\n  border-style: none;\n  width: 40px;\n  height: 40px;\n}\n.AppBar-layout__toolbar {\n  padding: 0;\n}\n.AppBar-layout__title {\n  flex: 1;\n}\n.AppBar-layout__lang .Dropdown-component__trigger {\n  background-color: transparent;\n  border: 0;\n  color: white;\n}");

/**
 * @ignore - internal component.
 */
var DashboardAppContext = React.createContext({ miniSidebar: false });
DashboardAppContext.displayName = 'DashboardAppContext';

function useDashboardAppContext() {
    return React.useContext(DashboardAppContext);
}

function AppBarLayout(props) {
    var use = useDashboardAppContext();
    var bem = new BEM("AppBar-layout", {});
    bem.Append(props.className);
    var toggle = function () {
        use.setToggleSidebar();
    };
    return (React.createElement(AppBarComponent, { style: props.style, className: bem.toString() },
        React.createElement(ToolbarComponent, { className: bem.Children("toolbar") },
            React.createElement("div", { className: bem.Children("left") },
                React.createElement("a", { href: props.routeLogo, className: bem.Children("logo") },
                    React.createElement("img", { src: props.logo, alt: props.title }))),
            React.createElement(ButtonIconComponent, { onClick: toggle, style: {
                    marginLeft: -12,
                    marginRight: 16,
                } },
                React.createElement(IconComponent, { style: { color: "white" }, icon: "menu" })),
            React.createElement(TypographyComponent, { className: bem.Children("title"), color: "text-primary", variant: "h6" }, props.title),
            props.search && (React.createElement(InputSearchComponent, __assign({}, props.search, { custom: true, className: bem.Children("search"), onChange: props.search.onChange }))),
            React.createElement(ButtonActionsComponent, null,
                React.createElement(React.Fragment, null, props.actions),
                !isUndef(props.langData) ? (React.createElement(DropdownComponent, { className: bem.Children("lang"), value: props.lang, data: props.langData })) : null,
                !isUndef(props.notifications) ? (React.createElement(DropdownComponent, { data: [], trigger: (React.createElement(ButtonIconComponent, null,
                        React.createElement(BadgeComponent, { badgeContent: 4, theme: "secondary" },
                            React.createElement(IconComponent, { icon: "alarm" })))), menu: function (e) { return (React.createElement(DropDownMenuWidget, { textFooter: "View all Notifications", title: "Notifications" },
                        React.createElement(NotificationListComponent, { data: props.notifications }))); } })) : null,
                !isUndef(props.messages) ? (React.createElement(DropdownComponent, { data: [], trigger: (React.createElement(ButtonIconComponent, null,
                        React.createElement(BadgeComponent, { badgeContent: 4, theme: "secondary" },
                            React.createElement(IconComponent, { icon: "chat" })))), menu: function () { return (React.createElement(DropDownMenuWidget, { textFooter: "View all Messages", title: "Chat" },
                        React.createElement(NotificationListComponent, { data: props.messages }))); } })) : null,
                props.isLogin ? (React.createElement(DropdownComponent, { className: bem.Children("log"), value: 2, data: props.menuLogin, onChange: props.login.onChange, trigger: (React.createElement(AvatarComponent, { mini: true, user: true, status: props.login.status, src: props.login.avatar }, props.login.name)) })) : null))));
}

___$insertStyle("@media only screen and (max-width: 991.98px) {\n  .Sidebar-layout {\n    margin-left: -225px;\n    width: 225px;\n    -webkit-transition: all 0.4s ease;\n    -moz-transition: all 0.4s ease;\n    transition: all 0.4s ease;\n    z-index: 1041;\n  }\n}\n@media only screen and (min-width: 991px) {\n  .Sidebar-layout--miniSidebar {\n    width: 60px;\n    overflow: hidden;\n  }\n  .Sidebar-layout--miniSidebar .Typography-component.Typography-component--caption {\n    display: none;\n  }\n  .Sidebar-layout--miniSidebar .SidebarMenuItem-component__arrow {\n    display: none;\n  }\n  .Sidebar-layout--miniSidebar .ScrollbarsCustom-Track {\n    display: none;\n  }\n  .Sidebar-layout--miniSidebar:hover {\n    width: 225px;\n  }\n  .Sidebar-layout--miniSidebar:hover .Typography-component.Typography-component--caption,\n.Sidebar-layout--miniSidebar:hover .SidebarMenuItem-component__arrow,\n.Sidebar-layout--miniSidebar:hover .ScrollbarsCustom-Track {\n    display: initial;\n  }\n}\n@media only screen and (max-width: 991.98px) {\n  .Sidebar-layout--miniSidebar {\n    margin-left: initial;\n  }\n}");

function SidebarLayout(props) {
    var use = useDashboardAppContext();
    var bem = new BEM("Sidebar-layout", {
        miniSidebar: use.miniSidebar,
    });
    bem.Append(props.className);
    return (React.createElement(SidebarComponent, { style: props.style, className: bem.toString() },
        React.createElement(ScrollbarComponent, null,
            React.createElement(SidebarMenuLayout, null))));
}

___$insertStyle(".SidebarMenu-layout ul ul {\n  display: block;\n  font-size: 14px;\n  padding: 9px 10px 9px 41px;\n  position: relative;\n  padding: 0;\n}\n.SidebarMenu-layout__sublist {\n  height: 0;\n  overflow: hidden;\n  -webkit-transition: all ease-in-out 0.3s;\n  -moz-transition: all ease-in-out 0.3s;\n  -ms-transition: all ease-in-out 0.3s;\n  -o-transition: all ease-in-out 0.3s;\n  transition: all ease-in-out 0.3s;\n}\n.SidebarMenu-layout__sublist--active {\n  height: initial;\n  overflow: initial;\n}");

function SidebarMenuLayout(props) {
    var bem = new BEM("SidebarMenu-layout", {});
    bem.Append(props.className);
    var use = useDashboardAppContext();
    var Menu = function (menu) {
        return menu.map(function (value, index) { return (React.createElement(ListComponent, { component: "ul", padding: false, key: index },
            React.createElement(SidebarMenuItemComponent, __assign({}, value, { name: value.name, arrow: !!value.menu.length, onClick: function () {
                    use.onClickItemSidebar(value);
                    if (value.menu.length) {
                        value.active = !value.active;
                        use.setToggleItemMenu();
                    }
                } })),
            value.menu && React.createElement("div", { className: bem.Modifier("sublist", "active", value.active) }, Menu(value.menu)))); });
    };
    return (React.createElement("div", { style: props.style, className: bem.toString() }, Menu(use.menu)));
}

___$insertStyle(".AuthLogin-layout {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  align-items: center;\n}\n.AuthLogin-layout__content {\n  padding: 20px 0;\n}\n.AuthLogin-layout__extras {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  display: flex;\n}\n.AuthLogin-layout__extras > * {\n  margin-left: 10px;\n}\n.AuthLogin-layout__logo {\n  margin-bottom: 30px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n}\n.AuthLogin-layout__logo img {\n  width: 100px;\n  display: block;\n}");

function AuthLoginLayout(props) {
    var bem = new BEM("AuthLogin-layout", {});
    bem.Append(props.className);
    var _a = props.extras, extras = _a === void 0 ? [] : _a;
    return (React.createElement(PageComponent, { style: props.style, className: bem.toString() },
        React.createElement("div", { className: bem.Children("content") },
            React.createElement("div", { className: bem.Children("extras") }, extras.map(function (item, index) { return (React.createElement(ButtonComponent, { key: index, theme: "mixPurple", component: "a" }, item.label)); })),
            React.createElement(ContainerComponent, null,
                React.createElement("div", { className: bem.Children("logo") },
                    React.createElement("a", { href: props.routeLogo },
                        React.createElement("img", { src: props.logo, alt: "logo", title: props.logoTitle }))),
                React.createElement(AuthLoginComponent, { textButton: props.textButton, textForgot: props.textForgot, onChange: props.onChange, textOtherScreen: props.textOtherScreen, footerAccountText: props.footerAccountText, onSubmit: props.onSubmit, passwordValue: props.passwordValue, emailValue: props.emailValue, subTitle: props.subTitle, title: props.title, componentForgotPassword: props.componentForgotPassword, componentLinkOtherScreen: props.componentLinkOtherScreen, routeOtherScreen: props.routeOtherScreen, routeForgotPassword: props.routeForgotPassword })))));
}

___$insertStyle(".AuthForgot-layout {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  align-items: center;\n}\n.AuthForgot-layout__content {\n  padding: 20px 0;\n}\n.AuthForgot-layout__extras {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  display: flex;\n}\n.AuthForgot-layout__extras > * {\n  margin-left: 10px;\n}\n.AuthForgot-layout__logo {\n  margin-bottom: 30px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n}\n.AuthForgot-layout__logo img {\n  width: 100px;\n  display: block;\n}");

function AuthForgotLayout(props) {
    var bem = new BEM("AuthForgot-layout", {});
    bem.Append(props.className);
    var _a = props.extras, extras = _a === void 0 ? [] : _a;
    return (React.createElement(PageComponent, { style: props.style, className: bem.toString() },
        React.createElement("div", { className: bem.Children("content") },
            React.createElement("div", { className: bem.Children("extras") }, extras.map(function (item, index) { return (React.createElement(ButtonComponent, { key: index, theme: "mixPurple", component: "a" }, item.label)); })),
            React.createElement(ContainerComponent, null,
                React.createElement("div", { className: bem.Children("logo") },
                    React.createElement("a", { href: props.routeLogo },
                        React.createElement("img", { src: props.logo, alt: "logo", title: props.logoTitle }))),
                React.createElement(AuthForgotComponent, { textButton: props.textButton, textForgot: props.textForgot, onChange: props.onChange, textOtherScreen: props.textOtherScreen, footerAccountText: props.footerAccountText, onSubmit: props.onSubmit, emailValue: props.emailValue, subTitle: props.subTitle, title: props.title, componentLinkOtherScreen: props.componentLinkOtherScreen, routeOtherScreen: props.routeOtherScreen })))));
}

___$insertStyle(".AuthRegister-layout {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  align-items: center;\n}\n.AuthRegister-layout__content {\n  padding: 20px 0;\n}\n.AuthRegister-layout__extras {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  display: flex;\n}\n.AuthRegister-layout__extras > * {\n  margin-left: 10px;\n}\n.AuthRegister-layout__logo {\n  margin-bottom: 30px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n}\n.AuthRegister-layout__logo img {\n  width: 100px;\n  display: block;\n}");

function AuthRegisterLayout(props) {
    var bem = new BEM("AuthRegister-layout", {});
    bem.Append(props.className);
    var _a = props.extras, extras = _a === void 0 ? [] : _a;
    return (React.createElement(PageComponent, { style: props.style, className: bem.toString() },
        React.createElement("div", { className: bem.Children("content") },
            React.createElement("div", { className: bem.Children("extras") }, extras.map(function (item, index) { return (React.createElement(ButtonComponent, { key: index, theme: "mixPurple", component: "a" }, item.label)); })),
            React.createElement(ContainerComponent, null,
                React.createElement("div", { className: bem.Children("logo") },
                    React.createElement("a", { href: props.routeLogo },
                        React.createElement("img", { src: props.logo, alt: "logo", title: props.logoTitle }))),
                React.createElement(AuthRegisterComponent, { textButton: props.textButton, textForgot: props.textForgot, onChange: props.onChange, textOtherScreen: props.textOtherScreen, footerAccountText: props.footerAccountText, onSubmit: props.onSubmit, passwordValue: props.passwordValue, emailValue: props.emailValue, subTitle: props.subTitle, title: props.title, componentForgotPassword: props.componentForgotPassword, componentLinkOtherScreen: props.componentLinkOtherScreen, routeOtherScreen: props.routeOtherScreen, routeForgotPassword: props.routeForgotPassword, nameValue: props.nameValue, repeatPasswordValue: props.repeatPasswordValue })))));
}

___$insertStyle(".Form-layout {\n  outline: none;\n}");

var FormLayout = /** @class */ (function (_super) {
    __extends(FormLayout, _super);
    function FormLayout() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            values: {},
            addValue: function (id, value) {
                _this.state.values[id] = value;
                _this.setState({
                    values: _this.state.values,
                });
                _this.props.onChange && _this.props.onChange(id, value, _this.state.values);
            }
        };
        _this.onSubmit = function (e) {
            e.preventDefault();
            _this.props.onSubmit && _this.props.onSubmit(_this.state.values);
        };
        return _this;
    }
    FormLayout.prototype.render = function () {
        var bem = new BEM("Form-layout", {});
        bem.Append(this.props.className);
        return (React.createElement(FormLayoutContext.Provider, { value: this.state },
            React.createElement(FormComponent$1, { onSubmit: this.onSubmit, card: this.props.form.card, id: this.props.form.getId(), className: bem.toString(), style: this.props.style }, this.props.form.getComponents().map((function (value, index) {
                return value.render(index.toString());
            })))));
    };
    return FormLayout;
}(React.Component));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Profile-widget {\n  overflow: hidden;\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 4px;\n  position: relative;\n}\n.Profile-widget__avatar {\n  margin: auto;\n}\n.Profile-widget__trigger {\n  color: gray;\n}\n.Profile-widget__settings {\n  position: absolute;\n  right: 5px;\n  text-align: right;\n  top: 10px;\n}\n.Profile-widget__name {\n  text-align: center;\n  margin-top: 10px;\n}\n.Profile-widget__category {\n  text-align: center;\n  display: block;\n  margin-top: 2px;\n}");

function ProfileWidget(props) {
    var bem = new BEM("Profile-widget", {});
    bem.Append(props.className);
    return (React.createElement("div", { className: bem.toString() },
        React.createElement(AvatarComponent, { className: bem.Children("avatar"), big: true, src: props.avatar }, props.name.slice(0, 2).toUpperCase()),
        React.createElement(DropdownComponent, { className: bem.Children("settings"), onChange: props.onChange, trigger: React.createElement(ButtonIconComponent, { hover: true, className: bem.Children("trigger") },
                React.createElement(IconComponent, { icon: "more_vert" })), data: [
                { label: "Edit", icon: React.createElement(IconComponent, { style: { width: 15, height: 15 }, icon: "pencil" }), value: "1" },
                { label: "Delete", icon: React.createElement(IconComponent, { style: { width: 15, height: 15 }, icon: "trash" }), value: "2" },
            ] }),
        React.createElement(TypographyComponent, { className: bem.Children('name'), component: "h4", variant: "h5", color: "text-secondary" }, props.name),
        React.createElement(TypographyComponent, { className: bem.Children('category'), component: "span", variant: "caption", color: "gray" }, props.category)));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Project-widget {\n  overflow: hidden;\n  color: #fff;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #424242;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 4px;\n  position: relative;\n  color: #000;\n}\n.Project-widget__description {\n  margin-top: 20px;\n}\n.Project-widget__group {\n  margin-top: 20px;\n}\n.Project-widget__progress {\n  margin-top: 20px;\n}\n.Project-widget__settings {\n  position: absolute;\n  right: 5px;\n  text-align: right;\n  top: 10px;\n}\n.Project-widget__trigger {\n  color: gray;\n}");

function ProjectWidget(props) {
    var bem = new BEM("Project-widget", {});
    bem.Append(props.className);
    return (React.createElement("div", { className: bem.toString() },
        React.createElement(GroupSmallComponent, { name: props.title, data: props.subTitleData }),
        React.createElement(DropdownComponent, { className: bem.Children("settings"), onChange: props.onChange, trigger: React.createElement(ButtonIconComponent, { hover: true, className: bem.Children("trigger") },
                React.createElement(IconComponent, { icon: "more_vert" })), data: [
                { label: "Edit", icon: React.createElement(IconComponent, { style: { width: 15, height: 15 }, icon: "pencil" }), value: "1" },
                { label: "Delete", icon: React.createElement(IconComponent, { style: { width: 15, height: 15 }, icon: "trash" }), value: "2" },
            ] }),
        React.createElement(TypographyComponent, { className: bem.Children("description"), variant: "body2", component: "p", color: "gray" }, props.description),
        props.group.map(function (item, index) { return (React.createElement(GroupTitleComponent, { className: bem.Children("group"), key: index, title: item.title, content: item.content })); }),
        React.createElement(ProgressLabelComponent, { className: bem.Children("progress") },
            React.createElement(ProgressComponent, { color: "success", label: props.progressLabel, value: props.progress }))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.DropDownMenu-widget {\n  z-index: 1000;\n  margin: 0.125rem 0 0;\n  color: #212529;\n  text-align: left;\n  list-style: none;\n  background-clip: padding-box;\n  display: none;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 3px;\n  transform-origin: left top 0;\n  box-shadow: inherit;\n  background-color: #fff;\n  bottom: auto;\n  font-size: 13px;\n  min-width: 120px;\n  padding: 0;\n  min-width: 10rem;\n}\n.DropDownMenu-widget__item {\n  display: flex;\n  align-items: center;\n  clear: both;\n  font-weight: 400;\n  color: #212529;\n  text-align: inherit;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n  padding: 5px 10px;\n}\n.DropDownMenu-widget__item:hover {\n  color: #16181b;\n  text-decoration: none;\n  background-color: #f8f9fa;\n  cursor: pointer;\n}\n.DropDownMenu-widget__icon {\n  margin-right: 5px;\n}\n.DropDownMenu-widget--open {\n  display: flex;\n  flex-direction: column;\n}\n.DropDownMenu-widget__header {\n  border-bottom: 1px solid #eee;\n  text-align: center;\n}\n.DropDownMenu-widget__footer, .DropDownMenu-widget__header {\n  font-size: 12px;\n  height: 32px;\n  line-height: 32px;\n  padding-left: 12px;\n  padding-right: 12px;\n}\n.DropDownMenu-widget__footer {\n  border-top: 1px solid #eee;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n.DropDownMenu-widget__content {\n  height: 290px;\n  width: 350px;\n  overflow-y: auto;\n  position: relative;\n}\n.DropDownMenu-widget__title {\n  color: #333;\n  display: block;\n  float: left;\n  font-size: 14px;\n}");

function DropDownMenuWidget(props) {
    var bem = new BEM("DropDownMenu-widget", {
        open: props.open,
    });
    bem.Append(props.className);
    return (React.createElement("div", { className: bem.toString() },
        React.createElement("header", { className: bem.Children("header") },
            React.createElement(TypographyComponent, { className: bem.Children("title") }, props.title)),
        React.createElement("section", { className: bem.Children("content") },
            React.createElement(ScrollbarComponent, null, props.children)),
        React.createElement("footer", { className: bem.Children("footer") },
            React.createElement(TypographyComponent, null, props.textFooter))));
}

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}");

/**
 * @ignore - internal component.
 */
var ChatAppContext = React.createContext({});
ChatAppContext.displayName = 'ChatAppContext';

var ChatApp = /** @class */ (function (_super) {
    __extends(ChatApp, _super);
    function ChatApp() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {};
        return _this;
    }
    ChatApp.prototype.render = function () {
        var bem = new BEM("Chat-app", {});
        bem.Append(this.props.className);
        return (React.createElement(ChatAppContext.Provider, { value: this.state },
            React.createElement("div", { className: bem.toString(), style: this.props.style },
                React.createElement(SidebarComponent, null,
                    React.createElement(ScrollbarComponent, null,
                        React.createElement(SidebarMenuComponent, { onClick: function (data) {
                                console.log(data);
                            }, menu: [
                                new SidebarMenuItemHeader("Back to Home", "alarm"),
                                new SidebarMenuItemTitle("Chat Group", function () {
                                    alert();
                                }),
                                new SidebarMenuItemGroup("#General", "https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png"),
                                new SidebarMenuItemGroup("#Video Responsive", "https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png"),
                                new SidebarMenuItemGroup("#500rs", "https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png"),
                                new SidebarMenuItemGroup("#warehouse", "https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png"),
                                new SidebarMenuItemTitle("Direct Chats", function () {
                                }),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10, true),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "offline", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "away", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "offline", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                                new SidebarMenuItemChat("John Doe", "https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg", "online", 10),
                            ] }))),
                React.createElement(ChatLayout, null))));
    };
    return ChatApp;
}(React.Component));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Contacts-app {\n  bottom: 0;\n  left: 0;\n  overflow: auto;\n  padding-bottom: inherit;\n  padding-top: inherit;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n.Contacts-app__wrapper {\n  display: table;\n  height: 100%;\n  table-layout: fixed;\n  width: 100%;\n}\n.Contacts-app__view {\n  flex: 0 0 100%;\n  max-width: 100%;\n  display: table-cell;\n  height: 100%;\n  float: none;\n  padding: 0;\n  position: static;\n  vertical-align: top;\n  width: 75%;\n}\n.Contacts-app__window {\n  display: table;\n  height: 100%;\n  table-layout: fixed;\n  width: 100%;\n  background-color: #f7f7f7;\n}");

function ContactsAppContent(props) {
    var bem = new BEM("Contacts-app", {});
    bem.Append(props.className);
    var _a = useResizeHeight(), height = _a.height;
    return (React.createElement("div", { className: bem.toString(), style: __assign(__assign({}, props.style), { height: height }) },
        React.createElement("div", { className: bem.Children("wrapper") },
            React.createElement("div", { className: bem.Children("view") },
                React.createElement("div", { className: bem.Children("window") }, props.children)))));
}

var ContactsApp = /** @class */ (function (_super) {
    __extends(ContactsApp, _super);
    function ContactsApp() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            contacts: _this.props.contacts,
            goTo: function (item) {
                var id = 'contact-list-layout';
                var doc = document.getElementById(id);
                doc.childNodes.forEach(function (value, key) {
                    // @ts-ignore
                    var name = value.getAttribute("data-name");
                    if (name[0] == item) {
                        // @ts-ignore
                        value.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start',
                        });
                    }
                });
            }
        };
        return _this;
    }
    ContactsApp.prototype.render = function () {
        return (React.createElement(ContactsAppContext.Provider, { value: this.state },
            React.createElement(ContactsAppContent, null,
                React.createElement(HeaderToolbarComponent, { onClick: function (_, index) { return console.log(index); }, title: "Contacts", search: {
                        value: "",
                        onChange: function (e) { return console.log(e); },
                        placeholder: "Search"
                    }, icons: [
                        React.createElement(IconComponent, { icon: "setting" }),
                    ] }),
                React.createElement(ContentToolbarComponent, null,
                    React.createElement(ScrollbarComponent, null,
                        React.createElement(ContactBoxLayout, null))))));
    };
    return ContactsApp;
}(React.Component));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Attendance-app {\n  background-color: #f7f7f7;\n  padding: 40px;\n}\n.Attendance-app__title {\n  margin-bottom: 5px;\n}\n.Attendance-app__breadcrumb.Breadcrumb-component {\n  margin-bottom: 20px;\n}");

var AttendanceApp = /** @class */ (function (_super) {
    __extends(AttendanceApp, _super);
    function AttendanceApp() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            date: moment(),
            rows: _this.props.rows,
        };
        return _this;
    }
    AttendanceApp.prototype.render = function () {
        var bm = new BEM('Attendance-app', {});
        return (React.createElement(AttendanceAppContext.Provider, { value: this.state },
            React.createElement("div", { className: bm.toString() },
                React.createElement(TypographyComponent, { className: bm.Children("title"), component: "h3", variant: "h4" }, this.props.title),
                React.createElement(BreadcrumbComponent, { className: bm.Children("breadcrumb"), data: this.props.breadcrumb }),
                React.createElement(TableAttendanceLayout, null))));
    };
    return AttendanceApp;
}(React.Component));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.List-app {\n  padding: 40px;\n}\n.List-app__title-row {\n  margin-bottom: 60px;\n}");

var ListApp = /** @class */ (function (_super) {
    __extends(ListApp, _super);
    function ListApp() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            list: false
        };
        return _this;
    }
    ListApp.prototype.render = function () {
        var _this = this;
        var bm = new BEM("List-app", {});
        bm.Append(this.props.className);
        return (React.createElement("div", { className: bm.toString(), style: this.props.style },
            React.createElement(TitleRowComponent, { className: bm.Children("title-row"), breadcrumb: this.props.breadcrumb, title: this.props.title, button: this.props.button, extra: (React.createElement(React.Fragment, null,
                    React.createElement(ButtonIconComponent, { style: { backgroundColor: !this.state.list && "gainsboro" }, hover: true, onClick: function () { return _this.setState({ list: false }); } },
                        React.createElement(IconComponent, { icon: "grid" })),
                    React.createElement(ButtonIconComponent, { style: { backgroundColor: this.state.list && "gainsboro" }, hover: true, onClick: function () { return _this.setState({ list: true }); } },
                        React.createElement(IconComponent, { icon: "menu" })))) }),
            !this.state.list && (React.createElement(GridComponent, { spacing: 2, container: true }, this.props.rows.map(function (row) { return (React.createElement(GridComponent, { item: true, xs: 12, sm: 6, md: 4, lg: 3, xl: 3, key: row.id }, _this.props.rowElement(row))); }))),
            this.state.list && (React.createElement(TableLayout, { data: this.props.tableData, columns: this.props.columns || [], rows: this.props.rows }))));
    };
    return ListApp;
}(React.Component));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Task-app__follower {\n  margin-top: 10px;\n}");

var TaskApp = /** @class */ (function (_super) {
    __extends(TaskApp, _super);
    function TaskApp() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            filter: 3,
            tasks: _this.props.tasks || [],
            openAddTask: false,
            taskSelected: 0,
            toggleAddTask: function () {
                _this.setState(function (e) { return ({ openAddTask: !e.openAddTask }); });
            },
            onChangeFilter: function (e) {
                _this.setState({ filter: e.value });
            },
            toggleCheckTask: function (id) {
                _this.setState(function (e) {
                    var tasks = e.tasks;
                    var task = tasks.find(function (i) { return i.id == id; });
                    task.check = !task.check;
                    return {
                        tasks: tasks
                    };
                });
            },
            assignUser: function (id) {
                _this.props.onAssignUser(id, function () {
                });
            },
            deleteTrack: function (id) {
                _this.props.onDeleteTrack(id, function () {
                    _this.setState(function (e) {
                        var tracks = e.tasks;
                        tracks = tracks.filter(function (i) { return i.id != id; });
                        return __assign(__assign({}, e), { tasks: tracks, taskSelected: _this.state.taskSelected == id ? null : e.taskSelected });
                    });
                });
            },
            onChangeTitle: function (id, textContent) {
                _this.props.onChangeTitle(id, function () {
                    _this.setState(function (e) {
                        var tasks = e.tasks;
                        var task = tasks.find(function (i) { return i.id == id; });
                        task.title = textContent;
                        return {
                            tasks: tasks,
                        };
                    });
                });
            },
            selectedTask: function (id) {
                _this.setState({
                    taskSelected: id,
                });
            },
            openFollower: function () {
            },
            toggleMaskComplete: function () {
                _this.setState(function (e) {
                    var tasks = e.tasks;
                    var task = tasks.find(function (i) { return i.id == e.taskSelected; });
                    task.check = !task.check;
                    return {
                        tasks: tasks
                    };
                });
            },
            onChangeSetting: function (e) {
                switch (e.value) {
                    case 1: {
                        _this.state.deleteTrack(_this.state.taskSelected);
                        break;
                    }
                }
            },
            getSelected: function () {
                if (_this.state.taskSelected != null) {
                    return _this.state.tasks.find(function (i) { return i.id == _this.state.taskSelected; });
                }
                return null;
            },
            onChangeDescription: function (taskSelected, value) {
                _this.props.onChangeDescription(taskSelected, value, function () {
                    _this.setState(function (e) {
                        var tasks = e.tasks;
                        var task = tasks.find(function (i) { return i.id == taskSelected; });
                        task.description = value;
                        return {
                            tasks: _this.state.tasks,
                        };
                    });
                });
            }
        };
        _this.avatars = function () {
            if (_this.state.taskSelected != null) {
                return _this.state.getSelected().followers || [];
            }
            return [];
        };
        return _this;
    }
    TaskApp.prototype.render = function () {
        var _a = this.props, _b = _a.dropdownFilter, dropdownFilter = _b === void 0 ? [
            { label: "Pending Tasks", value: 1, icon: React.createElement("i", null) },
            { label: "Completed Tasks", value: 2, icon: React.createElement("i", null) },
            { label: "All Tasks", value: 3, icon: React.createElement("i", null) },
        ] : _b, _c = _a.dropdownTask, dropdownTask = _c === void 0 ? [
            { label: "Delete Task", value: 1, icon: React.createElement("i", null) },
            { label: "Settings", value: 2, icon: React.createElement("i", null) },
        ] : _c, _d = _a.labels, labels = _d === void 0 ? {
            followers: "Followers",
            placeholder: "Type Message",
        } : _d;
        var bm = new BEM('Task-app', {});
        return (React.createElement(TaskAppContext.Provider, { value: this.state },
            React.createElement(MainMasterLayout, { className: bm.toString(), left: {
                    header: (React.createElement(NavbarToolbarComponent, { left: (React.createElement(ButtonComponent, { onClick: this.state.toggleAddTask, grouped: true }, this.props.button && this.props.button.addTask || "Add Task")), right: (React.createElement(DropdownComponent, { onChange: this.state.onChangeFilter, trigger: (React.createElement(ButtonIconComponent, { hover: true },
                                React.createElement(IconComponent, { icon: "setting" }))), data: dropdownFilter })) })),
                    content: (React.createElement(ScrollbarComponent, null,
                        React.createElement(TaskListLayout, null))),
                    footer: null,
                }, right: this.state.taskSelected != null ? ({
                    header: (React.createElement(NavbarToolbarComponent, { left: (React.createElement(ButtonComponent, { theme: this.state.getSelected().check ? "success" : null, onClick: this.state.toggleMaskComplete, grouped: true },
                            React.createElement(IconComponent, { style: { width: 15, height: 15 }, icon: "tick" }),
                            this.props.button && this.props.button.maskComplete || "Mask Complete")), right: (React.createElement(DropdownComponent, { onChange: this.state.onChangeSetting, trigger: (React.createElement(ButtonIconComponent, { style: { color: "gray", height: 44, width: 44 }, hover: true },
                                React.createElement(IconComponent, { icon: "more_vert" }))), data: dropdownTask })) })),
                    content: (React.createElement(DetailCommentTaskLayout, null)),
                    footer: (React.createElement(React.Fragment, null,
                        React.createElement(ChatFooterLayout, { placeholder: labels.placeholder }),
                        React.createElement(FollowerComponent, { className: bm.Children("follower"), onClick: this.state.openFollower, label: labels.followers, avatars: this.avatars() }))),
                }) : { header: null, content: null, footer: null } })));
    };
    return TaskApp;
}(React.Component));

___$insertStyle(".separator {\n  display: flex;\n  flex-wrap: wrap;\n}\n.separator > * {\n  width: 128px;\n  height: 128px;\n  margin: 8px;\n}\n\n.Dashboard-app__wrapper {\n  left: 0;\n  margin-left: 230px;\n  padding: 40px;\n  padding-top: 90px;\n  position: relative;\n  transition: all 0.2s ease-in-out;\n}\n@media only screen and (max-width: 991px) {\n  .Dashboard-app__wrapper {\n    margin-left: 0;\n  }\n}\n@media only screen and (min-width: 991px) {\n  .Dashboard-app__wrapper--miniSidebar {\n    margin-left: 60px;\n  }\n}\n.Dashboard-app__title {\n  margin-bottom: 20px;\n}");

var Content = function (_a) {
    var className = _a.className, children = _a.children;
    var height = useResizeHeight();
    return (React.createElement("div", { style: { minHeight: height.height }, className: className }, children));
};
var DashboardApp = /** @class */ (function (_super) {
    __extends(DashboardApp, _super);
    function DashboardApp() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            miniSidebar: false,
            setToggleSidebar: function () {
                _this.setState(function (e) { return ({ miniSidebar: !e.miniSidebar }); });
            },
            searchValue: "",
            menu: _this.props.menu,
            setToggleItemMenu: function () {
                _this.setState({ menu: _this.state.menu });
            },
            onClickItemSidebar: function (value) {
                _this.props.onClickItemSidebar && _this.props.onClickItemSidebar(value);
            }
        };
        return _this;
    }
    DashboardApp.prototype.render = function () {
        var _this = this;
        var bm = new BEM('Dashboard-app', {});
        return (React.createElement(DashboardAppContext.Provider, { value: this.state },
            React.createElement("div", { className: bm.toString() },
                React.createElement(AppBarLayout, { actions: this.props.header.actions, title: this.props.header.title, logo: this.props.header.logo, routeLogo: this.props.header.routeLogo, search: this.props.header.search ? {
                        placeholder: this.props.header.search.placeholder,
                        value: this.state.searchValue,
                        onChange: function (e) {
                            _this.setState({ searchValue: e.target.value });
                        }
                    } : undefined, notifications: this.props.header.notifications, messages: this.props.header.messages, langData: this.props.header.langData, menuLogin: this.props.header.menuLogin, isLogin: this.props.header.isLogin, login: this.props.header.login, lang: this.props.header.lang }),
                React.createElement(SidebarLayout, null),
                React.createElement(Content, { className: bm.Modifier("wrapper", "miniSidebar", this.state.miniSidebar) },
                    this.props.title && (React.createElement(TitleRowComponent, { className: bm.Children("title"), breadcrumb: this.props.title.breadcrumb, title: this.props.title.title, extra: this.props.title.extra })),
                    this.props.children))));
    };
    return DashboardApp;
}(React.Component));

exports.AlphapetsListComponent = AlphapetsListComponent;
exports.AppBarComponent = AppBarComponent;
exports.AppBarLayout = AppBarLayout;
exports.AttendanceApp = AttendanceApp;
exports.AuthForgotComponent = AuthForgotComponent;
exports.AuthForgotLayout = AuthForgotLayout;
exports.AuthFormComponent = AuthFormComponent;
exports.AuthLoginComponent = AuthLoginComponent;
exports.AuthLoginLayout = AuthLoginLayout;
exports.AuthRegisterComponent = AuthRegisterComponent;
exports.AuthRegisterLayout = AuthRegisterLayout;
exports.AvatarComponent = AvatarComponent;
exports.AvatarListLayout = AvatarListLayout;
exports.BEM = BEM;
exports.BadgeComponent = BadgeComponent;
exports.BoxComponent = BoxComponent;
exports.BoxxComponent = BoxxComponent;
exports.BreadcrumbComponent = BreadcrumbComponent;
exports.ButtonActionsComponent = ButtonActionsComponent;
exports.ButtonBaseComponent = ButtonBaseComponent;
exports.ButtonComponent = ButtonComponent;
exports.ButtonGroupComponent = ButtonGroupComponent;
exports.ButtonIconComponent = ButtonIconComponent;
exports.CallSidebarLayout = CallSidebarLayout;
exports.CardActionAreaComponent = CardActionAreaComponent;
exports.CardActionsComponent = CardActionsComponent;
exports.CardBoxComponent = CardBoxComponent;
exports.CardComponent = CardComponent;
exports.CardContentComponent = CardContentComponent;
exports.CardHeaderComponent = CardHeaderComponent;
exports.CardLayout = CardLayout;
exports.CardMediaComponent = CardMediaComponent;
exports.CardStadisticLayout = CardStadisticLayout;
exports.CardTitleComponent = CardTitleComponent;
exports.CardWidgetLayout = CardWidgetLayout;
exports.CardWidgetProgressLayout = CardWidgetProgressLayout;
exports.ChatApp = ChatApp;
exports.ChatBubbleComponent = ChatBubbleComponent;
exports.ChatCallComponent = ChatCallComponent;
exports.ChatFooterLayout = ChatFooterLayout;
exports.ChatHeaderLayout = ChatHeaderLayout;
exports.ChatLayout = ChatLayout;
exports.CheckComponent = CheckComponent;
exports.CheckboxComponent = CheckboxComponent;
exports.CollapseItemComponent = CollapseItemComponent;
exports.ComplexGridLayout = ComplexGridLayout;
exports.ContactBoxLayout = ContactBoxLayout;
exports.ContactContComponent = ContactContComponent;
exports.ContactListLayout = ContactListLayout;
exports.ContactsApp = ContactsApp;
exports.ContainerComponent = ContainerComponent;
exports.ContentToolbarComponent = ContentToolbarComponent;
exports.DashCardComponent = DashCardComponent;
exports.DashStatsComponent = DashStatsComponent;
exports.DashStatsListLayout = DashStatsListLayout;
exports.DashboardApp = DashboardApp;
exports.DashtInfoLayout = DashtInfoLayout;
exports.DelimiterComponent = DelimiterComponent;
exports.DetailCommentTaskLayout = DetailCommentTaskLayout;
exports.DialogActionsComponent = DialogActionsComponent;
exports.DialogComponent = DialogComponent;
exports.DialogContentComponent = DialogContentComponent;
exports.DialogContentTextComponent = DialogContentTextComponent;
exports.DialogTitleComponent = DialogTitleComponent;
exports.DotComponent = DotComponent;
exports.DropDownMenuWidget = DropDownMenuWidget;
exports.DropdownComponent = DropdownComponent;
exports.DropdownMenuComponent = DropdownMenuComponent;
exports.Editor = Editor;
exports.EditorComponent = EditorComponent;
exports.EditorContext = EditorContext;
exports.EditorData = EditorData;
exports.EditorDataCode = EditorDataCode;
exports.EditorDataData = EditorDataData;
exports.EditorDataImage = EditorDataImage;
exports.EditorDataLink = EditorDataLink;
exports.EditorDataList = EditorDataList;
exports.EditorDataTable = EditorDataTable;
exports.FabComponent = FabComponent;
exports.FlexGrowComponent = FlexGrowComponent;
exports.FollowerComponent = FollowerComponent;
exports.Form = Form;
exports.FormButton = FormButton;
exports.FormComponent = FormComponent$1;
exports.FormComponentModel = FormComponentModel;
exports.FormControlComponent = FormControlComponent;
exports.FormControlLabelComponent = FormControlLabelComponent;
exports.FormGroup = FormGroup;
exports.FormGroupComponent = FormGroupComponent;
exports.FormInput = FormInput;
exports.FormLabel = FormLabel;
exports.FormLabelComponent = FormLabelComponent;
exports.FormLayout = FormLayout;
exports.FormSelect = FormSelect;
exports.GetFile = GetFile;
exports.GridComponent = GridComponent;
exports.GridListComponent = GridListComponent;
exports.GridListTileComponent = GridListTileComponent;
exports.GridMessageLayout = GridMessageLayout;
exports.GroupBoxLayout = GroupBoxLayout;
exports.GroupIconComponent = GroupIconComponent;
exports.GroupTitleComponent = GroupTitleComponent;
exports.GroupWindowLayout = GroupWindowLayout;
exports.HeaderToolbarComponent = HeaderToolbarComponent;
exports.IconComponent = IconComponent;
exports.ImageToolComponent = ImageToolComponent;
exports.InputFieldComponent = InputFieldComponent;
exports.InputLabelComponent = InputLabelComponent;
exports.InputSearchComponent = InputSearchComponent;
exports.InvoiceComponent = InvoiceComponent;
exports.InvoiceDetailsComponent = InvoiceDetailsComponent;
exports.InvoiceLayout = InvoiceLayout;
exports.ItemDotLayout = ItemDotLayout;
exports.LabelComponent = LabelComponent;
exports.LinkToolComponent = LinkToolComponent;
exports.ListApp = ListApp;
exports.ListComponent = ListComponent;
exports.ListInfoComponent = ListInfoComponent;
exports.ListItemComponent = ListItemComponent;
exports.ListItemTextComponent = ListItemTextComponent;
exports.ListMenuComponent = ListMenuComponent;
exports.MainMasterLayout = MainMasterLayout;
exports.MenuComponent = MenuComponent;
exports.MenuItemComponent = MenuItemComponent;
exports.MenuListComponent = MenuListComponent;
exports.MessageAvatarComponent = MessageAvatarComponent;
exports.NavbarToolbarComponent = NavbarToolbarComponent;
exports.NotificationComponent = NotificationComponent;
exports.NotificationListComponent = NotificationListComponent;
exports.OverlayComponent = OverlayComponent;
exports.PageComponent = PageComponent;
exports.PaperComponent = PaperComponent;
exports.PortalComponent = PortalComponent;
exports.PreloaderComponent = PreloaderComponent;
exports.ProfileImageComponent = ProfileImageComponent;
exports.ProfileSidebarLayout = ProfileSidebarLayout;
exports.ProfileWidget = ProfileWidget;
exports.ProgressComponent = ProgressComponent;
exports.ProgressLabelComponent = ProgressLabelComponent;
exports.ProjectWidget = ProjectWidget;
exports.QuickLinkComponent = QuickLinkComponent;
exports.RadioComponent = RadioComponent;
exports.RadioGroupComponent = RadioGroupComponent;
exports.ScrollbarComponent = ScrollbarComponent;
exports.ScrollbarContext = ScrollbarContext;
exports.SectionBoxComponent = SectionBoxComponent;
exports.SeparatorComponent = SeparatorComponent;
exports.SidebarComponent = SidebarComponent;
exports.SidebarLayout = SidebarLayout;
exports.SidebarMenuComponent = SidebarMenuComponent;
exports.SidebarMenuItemChat = SidebarMenuItemChat;
exports.SidebarMenuItemComponent = SidebarMenuItemComponent;
exports.SidebarMenuItemGroup = SidebarMenuItemGroup;
exports.SidebarMenuItemHeader = SidebarMenuItemHeader;
exports.SidebarMenuItemTitle = SidebarMenuItemTitle;
exports.SidebarMenuLayout = SidebarMenuLayout;
exports.StatBoxComponent = StatBoxComponent;
exports.StatsInfoComponent = StatsInfoComponent;
exports.StatusComponent = StatusComponent;
exports.TabComponent = TabComponent;
exports.TableAttendanceLayout = TableAttendanceLayout;
exports.TableColComponent = TableColComponent;
exports.TableComponent = TableComponent;
exports.TableGroupSmall = TableGroupSmall;
exports.TableLabel = TableLabel;
exports.TableLayout = TableLayout;
exports.TableMessageAvatar = TableMessageAvatar;
exports.TableProgress = TableProgress;
exports.TableRowComponent = TableRowComponent;
exports.TaskApp = TaskApp;
exports.TaskCommentsLayout = TaskCommentsLayout;
exports.TaskContainerComponent = TaskContainerComponent;
exports.TaskHeaderComponent = TaskHeaderComponent;
exports.TaskHeaderLayout = TaskHeaderLayout;
exports.TaskInfoLineComponent = TaskInfoLineComponent;
exports.TaskListLayout = TaskListLayout;
exports.TestComponent = TestComponent;
exports.TextFieldComponent = TextFieldComponent;
exports.TextNumberComponent = TextNumberComponent;
exports.TitleRowComponent = TitleRowComponent;
exports.ToolbarComponent = ToolbarComponent;
exports.TypographyComponent = TypographyComponent;
exports._dbgGetDocument = _dbgGetDocument;
exports._dbgSetDocument = _dbgSetDocument;
exports.calcScrollForThumbOffset = calcScrollForThumbOffset;
exports.calcThumbOffset = calcThumbOffset;
exports.calcThumbSize = calcThumbSize;
exports.getInnerHeight = getInnerHeight;
exports.getInnerSize = getInnerSize;
exports.getInnerWidth = getInnerWidth;
exports.getScrollbarWidth = getScrollbarWidth;
exports.isFun = isFun;
exports.isNum = isNum;
exports.isUndef = isUndef;
exports.rand = rand;
exports.randIncluded = randIncluded;
exports.renderDivWithRenderer = renderDivWithRenderer;
exports.shouldReverseRtlScroll = shouldReverseRtlScroll;
exports.useEditorContext = useEditorContext;
exports.uuid = uuid;
//# sourceMappingURL=index.js.map
