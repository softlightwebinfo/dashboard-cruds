import { EditorData, EditorDataEnum } from "./EditorData";
import * as React from "react";
export declare const EditorContext: React.Context<any>;
export declare const useEditorContext: () => any;
export interface IEditorOn {
    onInput: (e: any, type: EditorDataEnum) => void;
    isEditor: boolean;
}
export declare class Editor {
    private data;
    private focus;
    private focusTop;
    private onInput;
    private isEditor;
    constructor(data: EditorData[], on: IEditorOn);
    private types;
    render(): JSX.Element[];
    button(onClick: any): JSX.Element;
    private _actionSymbols;
    actions(obj: {
        up: () => void;
        close: () => void;
        down: () => void;
    }): JSX.Element;
    setFocus(focus: string): void;
    getFocus(): any;
    setFocusTop(top: number): void;
    getFocusTop(): number;
    componentDidMount(callback: any): void;
    componentWillUnmount(): void;
    private onScape;
    close(): void;
    down(): void;
    up(): void;
    setText(innerHTML: string): void;
    actionPlus(onClick: any): JSX.Element;
    actionsPlus(onClick: any): JSX.Element;
    addNewElement(e: EditorDataEnum): void;
    setList(items: string[]): void;
    setImage(text: string): void;
}
