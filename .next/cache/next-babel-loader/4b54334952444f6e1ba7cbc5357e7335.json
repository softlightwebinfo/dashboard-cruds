{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../Framework/hoc/Auth\";\nimport { AuthLoginComponent, CardBoxComponent } from \"@codeunic/library-ui/build\";\nimport { Page } from \"@components/Page\";\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      search: \"\"\n    });\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      isServer\n    } = ctx;\n    return {\n      isServer\n    };\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    const {\n      isServer,\n      translate\n    } = this.props;\n\n    if (isServer && !translate) {//dispatch(ActionCreator.translationRequest(\"es\"));\n    }\n  }\n\n  render() {\n    return __jsx(Page, {\n      background: \"\"\n    }, __jsx(\"div\", {\n      style: {\n        margin: \"auto\"\n      }\n    }, __jsx(CardBoxComponent, {\n      title: \"Welcome\",\n      description: \"to the demo application made with AdminBro - the best admin framework for Node.js apps, based on React.\",\n      footer: \"Made with love by codeunic\",\n      image: \"/static/images/dashboard.png\"\n    }, __jsx(AuthLoginComponent, {\n      onChange: console.log,\n      textOtherScreen: \"Register\",\n      footerAccountText: \"Create Account\",\n      emailValue: \"\",\n      passwordValue: \"\",\n      onSubmit: console.log,\n      title: \"Login\",\n      subTitle: \"Iniciar sesión\"\n    }))));\n  }\n\n}\n\nexport default connect(state => ({\n  translation: state.translate.translation\n}))(Auth(Index));","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/dashboard-cruds/pages/login.tsx"],"names":["React","Component","connect","Auth","AuthLoginComponent","CardBoxComponent","Page","Index","search","getInitialProps","ctx","isServer","componentDidMount","translate","props","render","margin","console","log","state","translation"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,4BAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAEG;AAAA;AAAA;;AAAA,mCACgB;AACXO,MAAAA,MAAM,EAAE;AADG,KADhB;AAAA;;AAKC,eAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAM;AAACC,MAAAA;AAAD,QAAaD,GAAnB;AACA,WAAO;AACHC,MAAAA;AADG,KAAP;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAM;AAACD,MAAAA,QAAD;AAAWE,MAAAA;AAAX,QAAwB,KAAKC,KAAnC;;AAEA,QAAIH,QAAQ,IAAI,CAACE,SAAjB,EAA4B,CACxB;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,UAAU,EAAE;AAAlB,OACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT;AAAZ,OACI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE,SADX;AAEI,MAAA,WAAW,EAAE,yGAFjB;AAGI,MAAA,MAAM,EAAE,4BAHZ;AAII,MAAA,KAAK,EAAE;AAJX,OAMI,MAAC,kBAAD;AACI,MAAA,QAAQ,EAAEC,OAAO,CAACC,GADtB;AAC2B,MAAA,eAAe,EAAE,UAD5C;AACwD,MAAA,iBAAiB,EAAE,gBAD3E;AAEI,MAAA,UAAU,EAAE,EAFhB;AAEoB,MAAA,aAAa,EAAE,EAFnC;AAEuC,MAAA,QAAQ,EAAED,OAAO,CAACC,GAFzD;AAE8D,MAAA,KAAK,EAAE,OAFrE;AAGI,MAAA,QAAQ,EAAE;AAHd,MANJ,CADJ,CADJ,CADJ;AAkBH;;AAxCF;;AA2CH,eAAehB,OAAO,CAAEiB,KAAD,KAAiB;AACpCC,EAAAA,WAAW,EAAED,KAAK,CAACN,SAAN,CAAgBO;AADO,CAAjB,CAAD,CAAP,CAEXjB,IAAI,CAACI,KAAD,CAFO,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../Framework/hoc/Auth\";\nimport { AuthLoginComponent, CardBoxComponent } from \"@codeunic/library-ui/build\";\nimport { Page } from \"@components/Page\";\n\nclass Index extends Component<{\n    translation: any;\n}> {\n    public state = {\n        search: \"\",\n    }\n\n    static async getInitialProps(ctx) {\n        const {isServer} = ctx;\n        return {\n            isServer,\n        };\n    }\n\n    componentDidMount() {\n        // @ts-ignore\n        const {isServer, translate} = this.props;\n\n        if (isServer && !translate) {\n            //dispatch(ActionCreator.translationRequest(\"es\"));\n        }\n    }\n\n    render() {\n        return (\n            <Page background={\"\"}>\n                <div style={{margin: \"auto\"}}>\n                    <CardBoxComponent\n                        title={\"Welcome\"}\n                        description={\"to the demo application made with AdminBro - the best admin framework for Node.js apps, based on React.\"}\n                        footer={\"Made with love by codeunic\"}\n                        image={\"/static/images/dashboard.png\"}\n                    >\n                        <AuthLoginComponent\n                            onChange={console.log} textOtherScreen={\"Register\"} footerAccountText={\"Create Account\"}\n                            emailValue={\"\"} passwordValue={\"\"} onSubmit={console.log} title={\"Login\"}\n                            subTitle={\"Iniciar sesión\"}\n                        />\n                    </CardBoxComponent>\n                </div>\n            </Page>\n        )\n    }\n}\n\nexport default connect((state: any) => ({\n    translation: state.translate.translation,\n}))(Auth(Index));"]},"metadata":{},"sourceType":"module"}