{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { authType } from '../actionCreators';\nimport { HYDRATE } from 'next-redux-wrapper';\nexport const INITIAL_STATE = {\n  parseAuthLoaded: false,\n  authLoaded: false,\n  auth: null,\n  isLogin: false,\n  error: false,\n  errorMessage: ''\n};\nexport default function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case HYDRATE:\n      {\n        return _objectSpread(_objectSpread({}, state), action.payload.auth);\n      }\n\n    case authType.AUTH_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          parseAuthLoaded: true,\n          authLoaded: false,\n          auth: action.auth,\n          error: false,\n          isLogin: true\n        });\n      }\n\n    case authType.AUTH_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          parseAuthLoaded: false,\n          authLoaded: false,\n          auth: null,\n          error: true,\n          errorMessage: action.error,\n          isLogin: false\n        });\n      }\n\n    case authType.AUTH_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          parseAuthLoaded: false,\n          authLoaded: true\n        });\n      }\n\n    case authType.AUTH_LOGOUT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          auth: null,\n          isLogin: false\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/dashboard-cruds/Framework/store/reducers/auth.ts"],"names":["authType","HYDRATE","INITIAL_STATE","parseAuthLoaded","authLoaded","auth","isLogin","error","errorMessage","reducer","state","action","type","payload","AUTH_SUCCESS","AUTH_FAILURE","AUTH_REQUEST","AUTH_LOGOUT_REQUEST"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAGA,OAAO,MAAMC,aAA2B,GAAG;AACzCC,EAAAA,eAAe,EAAE,KADwB;AAEzCC,EAAAA,UAAU,EAAE,KAF6B;AAGzCC,EAAAA,IAAI,EAAE,IAHmC;AAIzCC,EAAAA,OAAO,EAAE,KAJgC;AAKzCC,EAAAA,KAAK,EAAE,KALkC;AAMzCC,EAAAA,YAAY,EAAE;AAN2B,CAApC;AASP,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGR,aAAzB,EAAwCS,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,OAAL;AAAc;AACZ,+CACKS,KADL,GAEKC,MAAM,CAACE,OAAP,CAAeR,IAFpB;AAID;;AACD,SAAKL,QAAQ,CAACc,YAAd;AAA4B;AAC1B,+CACKJ,KADL;AAEEP,UAAAA,eAAe,EAAE,IAFnB;AAGEC,UAAAA,UAAU,EAAE,KAHd;AAIEC,UAAAA,IAAI,EAAEM,MAAM,CAACN,IAJf;AAKEE,UAAAA,KAAK,EAAE,KALT;AAMED,UAAAA,OAAO,EAAE;AANX;AAQD;;AACD,SAAKN,QAAQ,CAACe,YAAd;AAA4B;AAC1B,+CACKL,KADL;AAEEP,UAAAA,eAAe,EAAE,KAFnB;AAGEC,UAAAA,UAAU,EAAE,KAHd;AAIEC,UAAAA,IAAI,EAAE,IAJR;AAKEE,UAAAA,KAAK,EAAE,IALT;AAMEC,UAAAA,YAAY,EAAEG,MAAM,CAACJ,KANvB;AAOED,UAAAA,OAAO,EAAE;AAPX;AASD;;AACD,SAAKN,QAAQ,CAACgB,YAAd;AAA4B;AAC1B,+CACKN,KADL;AAEEP,UAAAA,eAAe,EAAE,KAFnB;AAGEC,UAAAA,UAAU,EAAE;AAHd;AAKD;;AACD,SAAKJ,QAAQ,CAACiB,mBAAd;AAAmC;AACjC,+CACKP,KADL;AAEEL,UAAAA,IAAI,EAAE,IAFR;AAGEC,UAAAA,OAAO,EAAE;AAHX;AAKD;;AACD;AAAS;AACP,eAAOI,KAAP;AACD;AA5CH;AA8CD","sourcesContent":["import { authType } from '../actionCreators';\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { IAuthReducer } from '../../interfaces/IAuthReducer';\n\nexport const INITIAL_STATE: IAuthReducer = {\n  parseAuthLoaded: false,\n  authLoaded: false,\n  auth: null,\n  isLogin: false,\n  error: false,\n  errorMessage: '',\n};\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case HYDRATE: {\n      return {\n        ...state, // use previous state\n        ...action.payload.auth, // apply delta from hydration\n      };\n    }\n    case authType.AUTH_SUCCESS: {\n      return {\n        ...state,\n        parseAuthLoaded: true,\n        authLoaded: false,\n        auth: action.auth,\n        error: false,\n        isLogin: true,\n      };\n    }\n    case authType.AUTH_FAILURE: {\n      return {\n        ...state,\n        parseAuthLoaded: false,\n        authLoaded: false,\n        auth: null,\n        error: true,\n        errorMessage: action.error,\n        isLogin: false,\n      };\n    }\n    case authType.AUTH_REQUEST: {\n      return {\n        ...state,\n        parseAuthLoaded: false,\n        authLoaded: true,\n      };\n    }\n    case authType.AUTH_LOGOUT_REQUEST: {\n      return {\n        ...state,\n        auth: null,\n        isLogin: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}