{"ast":null,"code":"// @ts-ignore\nimport { translationFailure, translationRequest, translationSuccess } from '../actions/translate';\n// @ts-ignore\nexport var changeLanguage = function changeLanguage(action) {\n  return function (dispatch) {\n    var language = action.language;\n    dispatch(translationRequest(action.language));\n\n    if (language) {\n      try {\n        var translate = require(\"../../../config/translates/\".concat(language, \".json\"));\n\n        console.log(\"=== Translate lang from folder: \", translate.language);\n        dispatch(translationSuccess(translate));\n      } catch (err) {\n        dispatch(translationFailure('Error to change language: ', err));\n      }\n    } else {\n      dispatch(translationFailure(\"There's no language selected.\"));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/dashboard-cruds/Framework/store/dispatch/translate.ts"],"names":["translationFailure","translationRequest","translationSuccess","changeLanguage","action","dispatch","language","translate","require","console","log","err"],"mappings":"AAAA;AACA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,kBAAjD,QAA2E,sBAA3E;AAMA;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA,SAA6B,UAACC,QAAD,EAAc;AAAA,QAC/DC,QAD+D,GAClDF,MADkD,CAC/DE,QAD+D;AAEvED,IAAAA,QAAQ,CAACJ,kBAAkB,CAACG,MAAM,CAACE,QAAR,CAAnB,CAAR;;AACA,QAAIA,QAAJ,EAAc;AACZ,UAAI;AACF,YAAMC,SAAS,GAAGC,OAAO,sCAA+BF,QAA/B,WAAzB;;AACAG,QAAAA,OAAO,CAACC,GAAR,qCAAgDH,SAAS,CAACD,QAA1D;AACAD,QAAAA,QAAQ,CAACH,kBAAkB,CAACK,SAAD,CAAnB,CAAR;AACD,OAJD,CAIE,OAAOI,GAAP,EAAY;AACZN,QAAAA,QAAQ,CAACL,kBAAkB,CAAC,4BAAD,EAA+BW,GAA/B,CAAnB,CAAR;AACD;AACF,KARD,MAQO;AACLN,MAAAA,QAAQ,CAACL,kBAAkB,CAAC,+BAAD,CAAnB,CAAR;AACD;AACF,GAd6B;AAAA,CAAvB","sourcesContent":["// @ts-ignore\nimport { translationFailure, translationRequest, translationSuccess } from '../actions/translate';\n\nexport interface IChangeLanguage {\n  language: string;\n}\n\n// @ts-ignore\nexport const changeLanguage = (action: IChangeLanguage) => (dispatch) => {\n  const { language } = action;\n  dispatch(translationRequest(action.language));\n  if (language) {\n    try {\n      const translate = require(`../../../config/translates/${language}.json`);\n      console.log(`=== Translate lang from folder: `, translate.language);\n      dispatch(translationSuccess(translate));\n    } catch (err) {\n      dispatch(translationFailure('Error to change language: ', err));\n    }\n  } else {\n    dispatch(translationFailure(\"There's no language selected.\"));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}