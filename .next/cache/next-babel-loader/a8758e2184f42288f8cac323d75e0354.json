{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { authFailure } from \"../actions/auth\";\nimport { getApi } from \"@settings\";\nimport { addProjects } from \"../actions/project\";\nimport { randomInteger } from \"../../libs/random\";\nexport var getProjects = function getProjects() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(addProjects(_toConsumableArray(new Array(randomInteger(1, 10))).map(function (_, index) {\n                return {\n                  id: index,\n                  name: \"Name \".concat(index),\n                  tables: _toConsumableArray(new Array(randomInteger(0, 200))).map(function (__, index2) {\n                    return {\n                      id: index2,\n                      name: \"Table \".concat(index2)\n                    };\n                  })\n                };\n              })));\n              return _context.abrupt(\"return\");\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              dispatch(authFailure('Error to change language: ', _context.t0));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/dashboard-cruds/Framework/store/dispatch/project.ts"],"names":["authFailure","getApi","addProjects","randomInteger","getProjects","dispatch","Array","map","_","index","id","name","tables","__","index2","res","json"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BA,cAAAA,QAAQ,CAACH,WAAW,CAAC,mBAAI,IAAII,KAAJ,CAAUH,aAAa,CAAC,CAAD,EAAI,EAAJ,CAAvB,CAAJ,EAAqCI,GAArC,CAAyC,UAACC,CAAD,EAAIC,KAAJ;AAAA,uBAAe;AACzEC,kBAAAA,EAAE,EAAED,KADqE;AAEzEE,kBAAAA,IAAI,iBAAUF,KAAV,CAFqE;AAGzEG,kBAAAA,MAAM,EAAE,mBAAI,IAAIN,KAAJ,CAAUH,aAAa,CAAC,CAAD,EAAI,GAAJ,CAAvB,CAAJ,EAAsCI,GAAtC,CAA0C,UAACM,EAAD,EAAKC,MAAL;AAAA,2BAAiB;AAC/DJ,sBAAAA,EAAE,EAAEI,MAD2D;AAE/DH,sBAAAA,IAAI,kBAAWG,MAAX;AAF2D,qBAAjB;AAAA,mBAA1C;AAHiE,iBAAf;AAAA,eAAzC,CAAD,CAAZ,CAAR;AAD6B;;AAAA;AAWnBC,cAAAA,GAXmB;AAAA;AAAA,qBAYnBA,GAAG,CAACC,IAAJ,EAZmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAczBX,cAAAA,QAAQ,CAACL,WAAW,CAAC,4BAAD,cAAZ,CAAR;;AAdyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import { authFailure } from \"../actions/auth\";\nimport { getApi } from \"@settings\";\nimport { addProjects } from \"../actions/project\";\nimport { randomInteger } from \"../../libs/random\";\n\nexport const getProjects = () => async (dispatch) => {\n    dispatch(addProjects([...new Array(randomInteger(1, 10))].map((_, index) => ({\n        id: index,\n        name: `Name ${index}`,\n        tables: [...new Array(randomInteger(0, 200))].map((__, index2) => ({\n            id: index2,\n            name: `Table ${index2}`,\n        })),\n    }))));\n    return;\n    try {\n        const res = await fetch(getApi('user/login'));\n        await res.json();\n    } catch (err) {\n        dispatch(authFailure('Error to change language: ', err));\n    }\n};"]},"metadata":{},"sourceType":"module"}