{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../Framework/hoc/Auth\";\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      search: \"\"\n    });\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      isServer\n    } = ctx;\n    return {\n      isServer\n    };\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    const {\n      isServer,\n      translate\n    } = this.props;\n\n    if (isServer && !translate) {//dispatch(ActionCreator.translationRequest(\"es\"));\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", null);\n  }\n\n}\n\nexport default connect(state => ({\n  translation: state.translate.translation\n}))(Auth(Index));","map":{"version":3,"sources":["/usr/src/app/pages/login.tsx"],"names":["React","Component","connect","Auth","Index","search","getInitialProps","ctx","isServer","componentDidMount","translate","props","render","state","translation"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,uBAArB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAEG;AAAA;AAAA;;AAAA,mCACgB;AACXI,MAAAA,MAAM,EAAE;AADG,KADhB;AAAA;;AAKC,eAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAM;AAACC,MAAAA;AAAD,QAAaD,GAAnB;AACA,WAAO;AACHC,MAAAA;AADG,KAAP;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAM;AAACD,MAAAA,QAAD;AAAWE,MAAAA;AAAX,QAAwB,KAAKC,KAAnC;;AAEA,QAAIH,QAAQ,IAAI,CAACE,SAAjB,EAA4B,CACxB;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI,kBADJ;AAKH;;AA3BF;;AA8BH,eAAeV,OAAO,CAAEW,KAAD,KAAiB;AACpCC,EAAAA,WAAW,EAAED,KAAK,CAACH,SAAN,CAAgBI;AADO,CAAjB,CAAD,CAAP,CAEXX,IAAI,CAACC,KAAD,CAFO,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../Framework/hoc/Auth\";\n\nclass Index extends Component<{\n    translation: any;\n}> {\n    public state = {\n        search: \"\",\n    }\n\n    static async getInitialProps(ctx) {\n        const {isServer} = ctx;\n        return {\n            isServer,\n        };\n    }\n\n    componentDidMount() {\n        // @ts-ignore\n        const {isServer, translate} = this.props;\n\n        if (isServer && !translate) {\n            //dispatch(ActionCreator.translationRequest(\"es\"));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default connect((state: any) => ({\n    translation: state.translate.translation,\n}))(Auth(Index));"]},"metadata":{},"sourceType":"module"}