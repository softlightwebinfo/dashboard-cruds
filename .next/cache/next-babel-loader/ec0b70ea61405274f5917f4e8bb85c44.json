{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { setToggleSidebar } from \"../../store/dispatch/global\";\nimport { HeaderToolbarComponent, IconComponent, BEM, DropdownComponent, AvatarComponent } from \"@codeunic/library-ui/build\";\nexport const Navbar = props => {\n  const bm = new BEM(\"Header\", {});\n\n  if (props.className != null) {\n    bm.Append(props.className);\n  }\n\n  return __jsx(HeaderToolbarComponent, {\n    className: bm.toString(),\n    left: __jsx(React.Fragment, null, __jsx(\"span\", {\n      style: {\n        marginRight: 10\n      }\n    }, \"Admin: 0.0.1\"), __jsx(\"span\", null, \"App: 0.0.1\")),\n    icons: [__jsx(DropdownComponent, {\n      value: 2,\n      data: [],\n      trigger: __jsx(AvatarComponent, {\n        mini: true,\n        user: true,\n        status: \"online\",\n        src: \"\"\n      }, \"test@tes.com\")\n    }), __jsx(IconComponent, {\n      style: {\n        color: \"black\"\n      },\n      icon: \"setting\"\n    })],\n    onClick: function noRefCheck() {}\n  });\n};\nexport default connect(state => ({\n  sidebarOpen: state.global.sidebar\n}), dispatch => ({\n  onToggleSidebar: () => dispatch(setToggleSidebar())\n}))(Navbar);","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/dashboard-cruds/Framework/components/Navbar/Navbar.tsx"],"names":["React","connect","setToggleSidebar","HeaderToolbarComponent","IconComponent","BEM","DropdownComponent","AvatarComponent","Navbar","props","bm","className","Append","toString","marginRight","color","noRefCheck","state","sidebarOpen","global","sidebar","dispatch","onToggleSidebar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SACIC,sBADJ,EAEIC,aAFJ,EAGIC,GAHJ,EAIIC,iBAJJ,EAKIC,eALJ,QAMO,4BANP;AAQA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAyB;AAC3C,QAAMC,EAAE,GAAG,IAAIL,GAAJ,CAAQ,QAAR,EAAkB,EAAlB,CAAX;;AACA,MAAII,KAAK,CAACE,SAAN,IAAmB,IAAvB,EAA6B;AACzBD,IAAAA,EAAE,CAACE,MAAH,CAAUH,KAAK,CAACE,SAAhB;AACH;;AACD,SACI,MAAC,sBAAD;AACI,IAAA,SAAS,EAAED,EAAE,CAACG,QAAH,EADf;AAEI,IAAA,IAAI,EACA,4BACI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAE;AAAd;AAAb,sBADJ,EAEI,iCAFJ,CAHR;AAQI,IAAA,KAAK,EAAE,CACH,MAAC,iBAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,OAAO,EACH,MAAC,eAAD;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,IAAI,MAA1B;AAA2B,QAAA,MAAM,EAAE,QAAnC;AACiB,QAAA,GAAG,EAAE;AADtB;AAJR,MADG,EASH,MAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAtB;AAAwC,MAAA,IAAI,EAAC;AAA7C,MATG,CARX;AAmBI,IAAA,OAAO,EAAE,SAASC,UAAT,GAAsB,CAC9B;AApBL,IADJ;AAwBH,CA7BM;AA8BP,eAAef,OAAO,CAAEgB,KAAD,KAAiB;AACpCC,EAAAA,WAAW,EAAED,KAAK,CAACE,MAAN,CAAaC;AADU,CAAjB,CAAD,EAElBC,QAAQ,KAAK;AACbC,EAAAA,eAAe,EAAE,MAAMD,QAAQ,CAACnB,gBAAgB,EAAjB;AADlB,CAAL,CAFU,CAAP,CAIXM,MAJW,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { TNavbarProps } from \"@app_types/TNavbarProps\";\nimport { setToggleSidebar } from \"../../store/dispatch/global\";\nimport {\n    HeaderToolbarComponent,\n    IconComponent,\n    BEM,\n    DropdownComponent,\n    AvatarComponent\n} from \"@codeunic/library-ui/build\";\n\nexport const Navbar = (props: TNavbarProps) => {\n    const bm = new BEM(\"Header\", {});\n    if (props.className != null) {\n        bm.Append(props.className);\n    }\n    return (\n        <HeaderToolbarComponent\n            className={bm.toString()}\n            left={(\n                <>\n                    <span style={{marginRight: 10}}>Admin: 0.0.1</span>\n                    <span>App: 0.0.1</span>\n                </>\n            )}\n            icons={[\n                <DropdownComponent\n                    value={2}\n                    data={[]}\n                    trigger={(\n                        <AvatarComponent mini user status={\"online\"}\n                                         src={\"\"}>test@tes.com</AvatarComponent>\n                    )}\n                />,\n                <IconComponent style={{color: \"black\"}} icon=\"setting\"/>\n            ]}\n            onClick={function noRefCheck() {\n            }}\n        />\n    );\n};\nexport default connect((state: any) => ({\n    sidebarOpen: state.global.sidebar,\n}), dispatch => ({\n    onToggleSidebar: () => dispatch(setToggleSidebar())\n}))(Navbar);"]},"metadata":{},"sourceType":"module"}