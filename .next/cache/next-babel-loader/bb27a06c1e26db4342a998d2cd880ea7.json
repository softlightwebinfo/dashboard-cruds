{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n// @ts-ignore\n// @ts-ignore\nimport { authFailure, authInitialRq, authLogout as logout, authRequest, authSuccess } from '../actions/auth';\nimport { getApi } from 'settings';\nimport { setCookie } from '../../libs/cookie'; // @ts-ignore\n\nexport var auth = function auth(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch(authRequest());\n              _context.next = 4;\n              return fetch(getApi('user/login'), {\n                body: JSON.stringify({\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST'\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              response = _context.sent;\n\n              if (response.error) {\n                dispatch(authFailure(response.error));\n              } else {\n                dispatch(authSuccess(response));\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch(authFailure('Error to change language: ', _context.t0));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var authRegister = function authRegister(data) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(getApi('user/register'), {\n                body: JSON.stringify(data),\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST'\n              });\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return res.json();\n\n            case 6:\n              response = _context2.sent;\n\n              if (response.token) {\n                dispatch(authSuccess(response));\n              }\n\n              dispatch(authSuccess(response));\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch(authFailure(_context2.t0));\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var authInitial = function authInitial(cookie) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch(authSuccess({}));\n              return _context3.abrupt(\"return\");\n\n            case 6:\n              res = _context3.sent;\n              _context3.next = 9;\n              return res.json();\n\n            case 9:\n              response = _context3.sent;\n\n              if (response.error) {\n                dispatch(authFailure(response.error));\n              } else {\n                dispatch(authSuccess(response));\n              }\n\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](2);\n              dispatch(authFailure(_context3.t0));\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 13]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var authLogout = function authLogout() {\n  return function (dispatch) {\n    //const cookies = parseCookies();\n    setCookie('token', '', 0); // this will delete the cookie.\n\n    setCookie('username', '', 0); // this will delete the cookie.\n\n    setCookie('user', '', 0); // this will delete the cookie.\n    // destroyCookie(null, 'user');\n    // destroyCookie(null, 'token');\n\n    dispatch(logout());\n  };\n};","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/dashboard-cruds/Framework/store/dispatch/auth.ts"],"names":["authFailure","authInitialRq","authLogout","logout","authRequest","authSuccess","getApi","setCookie","auth","email","password","dispatch","fetch","body","JSON","stringify","headers","Accept","method","res","json","response","error","authRegister","data","token","authInitial","cookie"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { takeLatest, put } from 'redux-saga/effects';\n\n// @ts-ignore\nimport { authFailure, authInitialRq, authLogout as logout, authRequest, authSuccess } from '../actions/auth';\nimport { getApi } from 'settings';\nimport { setCookie } from '../../libs/cookie';\n\n// @ts-ignore\nexport const auth = (email: string, password: string) => async (dispatch) => {\n  try {\n    dispatch(authRequest());\n    const res = await fetch(getApi('user/login'), {\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const response = await res.json();\n    if (response.error) {\n      dispatch(authFailure(response.error));\n    } else {\n      dispatch(authSuccess(response));\n    }\n  } catch (err) {\n    dispatch(authFailure('Error to change language: ', err));\n  }\n};\n\nexport const authRegister = (data) => async (dispatch) => {\n  try {\n    const res = await fetch(getApi('user/register'), {\n      body: JSON.stringify(data),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const response = await res.json();\n    if (response.token) {\n      dispatch(authSuccess(response));\n    }\n    dispatch(authSuccess(response));\n  } catch (err) {\n    dispatch(authFailure(err));\n  }\n};\n\nexport const authInitial = (cookie) => async (dispatch) => {\n  dispatch(authSuccess({}));\n  return;\n  try {\n    dispatch(authInitialRq());\n    const res = await fetch(getApi('user/initial'), {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        cookie: cookie,\n      },\n      method: 'POST',\n    });\n    const response = await res.json();\n    if (response.error) {\n      dispatch(authFailure(response.error));\n    } else {\n      dispatch(authSuccess(response));\n    }\n  } catch (err) {\n    dispatch(authFailure(err));\n  }\n};\n\nexport const authLogout = () => (dispatch) => {\n  //const cookies = parseCookies();\n  setCookie('token', '', 0); // this will delete the cookie.\n  setCookie('username', '', 0); // this will delete the cookie.\n  setCookie('user', '', 0); // this will delete the cookie.\n  // destroyCookie(null, 'user');\n  // destroyCookie(null, 'token');\n  dispatch(logout());\n};\n"]},"metadata":{},"sourceType":"module"}